{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/WalletModal/index.tsx\";\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport React, { useEffect, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport ReactGA from 'react-ga';\nimport styled from 'styled-components';\nimport MetamaskIcon from '../../assets/images/metamask.png';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";\nimport { injected } from '../../connectors';\nimport { LANDING_PAGE, SUPPORTED_WALLETS, AVALANCHE_CHAIN_PARAMS } from '../../constants';\nimport usePrevious from '../../hooks/usePrevious';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks';\nimport { ExternalLink } from '../../theme';\nimport AccountDetails from '../AccountDetails';\nimport { ButtonLight } from '../../components/Button';\nimport Modal from '../Modal';\nimport Option from './Option';\nimport PendingView from './PendingView';\nimport { useTranslation } from 'react-i18next';\nconst WALLET_TUTORIAL = LANDING_PAGE + 'tutorials/getting-started/#set-up-metamask';\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({\n  theme\n}) => theme.text4};\n  }\n`;\nconst Wrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\nconst HeaderRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => props.color === 'blue' ? ({\n  theme\n}) => theme.primary1 : 'inherit'};\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\nconst ContentWrapper = styled.div`\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`;\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`;\nconst Blurb = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`;\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`;\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending'\n};\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const {\n    active,\n    account,\n    connector,\n    activate,\n    error\n  } = useWeb3React();\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n  const [pendingWallet, setPendingWallet] = useState();\n  const [pendingError, setPendingError] = useState();\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET);\n  const toggleWalletModal = useWalletModalToggle();\n  const previousAccount = usePrevious(account);\n  const {\n    t\n  } = useTranslation(); // close on connection, when logged out before\n\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal();\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]); // always reset to account view\n\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [walletModalOpen]); // close modal when a connection is successful\n\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (walletModalOpen && (active && !activePrevious || connector && connector !== connectorPrevious && !error)) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious]);\n\n  const tryActivation = async connector => {\n    var _connector$walletConn, _connector$walletConn2;\n\n    let name = '';\n    Object.keys(SUPPORTED_WALLETS).map(key => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return name = SUPPORTED_WALLETS[key].name;\n      }\n\n      return true;\n    }); // log selected wallet\n\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name\n    });\n    setPendingWallet(connector); // set wallet for pending view\n\n    setWalletView(WALLET_VIEWS.PENDING); // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n\n    if (connector instanceof WalletConnectConnector && ((_connector$walletConn = connector.walletConnectProvider) === null || _connector$walletConn === void 0 ? void 0 : (_connector$walletConn2 = _connector$walletConn.wc) === null || _connector$walletConn2 === void 0 ? void 0 : _connector$walletConn2.uri)) {\n      connector.walletConnectProvider = undefined;\n    }\n\n    connector && activate(connector, undefined, true).catch(error => {\n      if (error instanceof UnsupportedChainIdError) {\n        activate(connector); // a little janky...can't use setError because the connector isn't set\n      } else {\n        setPendingError(true);\n      }\n    });\n  }; // get wallets user can switch too, depending on device/browser\n\n\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key]; // check for mobile options\n\n      if (isMobile) {\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return /*#__PURE__*/React.createElement(Option, {\n            onClick: () => {\n              option.connector !== connector && !option.href && tryActivation(option.connector);\n            },\n            id: `connect-${key}`,\n            key: key,\n            active: option.connector && option.connector === connector,\n            color: option.color,\n            link: option.href,\n            header: option.name,\n            subheader: null,\n            icon: require('../../assets/images/' + option.iconName),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 13\n            }\n          });\n        }\n\n        return null;\n      } // overwrite injected when needed\n\n\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return /*#__PURE__*/React.createElement(Option, {\n              id: `connect-${key}`,\n              key: key,\n              color: '#E8831D',\n              header: 'Install Metamask',\n              subheader: null,\n              link: 'https://metamask.io/',\n              icon: MetamaskIcon,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 15\n              }\n            });\n          } else {\n            return null; //dont want to return install twice\n          }\n        } // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n            return null;\n          } // likewise for generic\n          else if (option.name === 'Injected' && isMetamask) {\n              return null;\n            }\n      } // return rest of options\n\n\n      return !isMobile && !option.mobileOnly && /*#__PURE__*/React.createElement(Option, {\n        id: `connect-${key}`,\n        onClick: () => {\n          option.connector === connector ? setWalletView(WALLET_VIEWS.ACCOUNT) : !option.href && tryActivation(option.connector);\n        },\n        key: key,\n        active: option.connector === connector,\n        color: option.color,\n        link: option.href,\n        header: option.name,\n        subheader: null //use option.descriptio to bring back multi-line\n        ,\n        icon: require('../../assets/images/' + option.iconName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }\n      });\n    });\n  }\n\n  function addAvalancheNetwork() {\n    injected.getProvider().then(provider => {\n      provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [AVALANCHE_CHAIN_PARAMS]\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }\n\n  function getModalContent() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(UpperSection, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        onClick: toggleWalletModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CloseColor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(HeaderRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      }, error instanceof UnsupportedChainIdError ? t('walletModal.wrongNetwork') : t('walletModal.errorConnecting')), /*#__PURE__*/React.createElement(ContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }\n      }, error instanceof UnsupportedChainIdError ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }\n      }, t('walletModal.pleaseConnectAvalanche')), isMetamask && /*#__PURE__*/React.createElement(ButtonLight, {\n        onClick: addAvalancheNetwork,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 19\n        }\n      }, t('walletModal.switchAvalanche'))) : t('walletModal.errorConnectingRefresh')));\n    }\n\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return /*#__PURE__*/React.createElement(AccountDetails, {\n        toggleWalletModal: toggleWalletModal,\n        pendingTransactions: pendingTransactions,\n        confirmedTransactions: confirmedTransactions,\n        ENSName: ENSName,\n        openOptions: () => setWalletView(WALLET_VIEWS.OPTIONS),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(UpperSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      onClick: toggleWalletModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseColor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    })), walletView !== WALLET_VIEWS.ACCOUNT ? /*#__PURE__*/React.createElement(HeaderRow, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HoverText, {\n      onClick: () => {\n        setPendingError(false);\n        setWalletView(WALLET_VIEWS.ACCOUNT);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }\n    }, \"Back\")) : /*#__PURE__*/React.createElement(HeaderRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HoverText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }\n    }, t('walletModal.connectToWallet'))), /*#__PURE__*/React.createElement(ContentWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }\n    }, walletView === WALLET_VIEWS.PENDING ? /*#__PURE__*/React.createElement(PendingView, {\n      connector: pendingWallet,\n      error: pendingError,\n      setPendingError: setPendingError,\n      tryActivation: tryActivation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(OptionGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    }, getOptions()), walletView !== WALLET_VIEWS.PENDING && /*#__PURE__*/React.createElement(Blurb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 15\n      }\n    }, t('walletModal.newToAvalanche'), \" \\xA0\"), ' ', /*#__PURE__*/React.createElement(ExternalLink, {\n      href: WALLET_TUTORIAL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 15\n      }\n    }, t('walletModal.learnMoreWallet')))));\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: walletModalOpen,\n    onDismiss: toggleWalletModal,\n    minHeight: false,\n    maxHeight: 90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }\n  }, getModalContent()));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/WalletModal/index.tsx"],"names":["UnsupportedChainIdError","useWeb3React","WalletConnectConnector","React","useEffect","useState","isMobile","ReactGA","styled","MetamaskIcon","injected","LANDING_PAGE","SUPPORTED_WALLETS","AVALANCHE_CHAIN_PARAMS","usePrevious","ApplicationModal","useModalOpen","useWalletModalToggle","ExternalLink","AccountDetails","ButtonLight","Modal","Option","PendingView","useTranslation","WALLET_TUTORIAL","CloseIcon","div","CloseColor","Close","theme","text4","Wrapper","flexColumnNoWrap","HeaderRow","flexRowNoWrap","props","color","primary1","mediaWidth","upToMedium","ContentWrapper","bg2","UpperSection","Blurb","OptionGrid","HoverText","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","WalletModal","pendingTransactions","confirmedTransactions","ENSName","active","account","connector","activate","error","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","setPendingError","walletModalOpen","WALLET","toggleWalletModal","previousAccount","t","activePrevious","connectorPrevious","tryActivation","name","Object","keys","map","key","event","category","action","label","walletConnectProvider","wc","uri","undefined","catch","getOptions","isMetamask","window","ethereum","isMetaMask","option","web3","mobile","href","require","iconName","mobileOnly","addAvalancheNetwork","getProvider","then","provider","request","method","params","console","log","getModalContent"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport React, { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactGA from 'react-ga'\nimport styled from 'styled-components'\nimport MetamaskIcon from '../../assets/images/metamask.png'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { injected } from '../../connectors'\nimport { LANDING_PAGE, SUPPORTED_WALLETS, AVALANCHE_CHAIN_PARAMS } from '../../constants'\nimport usePrevious from '../../hooks/usePrevious'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks'\nimport { ExternalLink } from '../../theme'\nimport AccountDetails from '../AccountDetails'\nimport { ButtonLight } from '../../components/Button'\n\nimport Modal from '../Modal'\nimport Option from './Option'\nimport PendingView from './PendingView'\nimport { useTranslation } from 'react-i18next'\n\nconst WALLET_TUTORIAL = LANDING_PAGE + 'tutorials/getting-started/#set-up-metamask'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst Blurb = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending'\n}\n\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n\n  const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>()\n\n  const [pendingError, setPendingError] = useState<boolean>()\n\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET)\n  const toggleWalletModal = useWalletModalToggle()\n\n  const previousAccount = usePrevious(account)\n  const { t } = useTranslation()\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal()\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen])\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false)\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [walletModalOpen])\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active)\n  const connectorPrevious = usePrevious(connector)\n  useEffect(() => {\n    if (walletModalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious])\n\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\n    let name = ''\n    Object.keys(SUPPORTED_WALLETS).map(key => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return (name = SUPPORTED_WALLETS[key].name)\n      }\n      return true\n    })\n    // log selected wallet\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name\n    })\n    setPendingWallet(connector) // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING)\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (connector instanceof WalletConnectConnector && connector.walletConnectProvider?.wc?.uri) {\n      connector.walletConnectProvider = undefined\n    }\n\n    connector &&\n      activate(connector, undefined, true).catch(error => {\n        if (error instanceof UnsupportedChainIdError) {\n          activate(connector) // a little janky...can't use setError because the connector isn't set\n        } else {\n          setPendingError(true)\n        }\n      })\n  }\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key]\n      // check for mobile options\n      if (isMobile) {\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector && !option.href && tryActivation(option.connector)\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={require('../../assets/images/' + option.iconName)}\n            />\n          )\n        }\n        return null\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color={'#E8831D'}\n                header={'Install Metamask'}\n                subheader={null}\n                link={'https://metamask.io/'}\n                icon={MetamaskIcon}\n              />\n            )\n          } else {\n            return null //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector)\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n            icon={require('../../assets/images/' + option.iconName)}\n          />\n        )\n      )\n    })\n  }\n\n  function addAvalancheNetwork() {\n    injected.getProvider().then(provider => {\n      provider\n        .request({\n          method: 'wallet_addEthereumChain',\n          params: [AVALANCHE_CHAIN_PARAMS]\n        })\n        .catch((error: any) => {\n          console.log(error)\n        })\n    })\n  }\n\n  function getModalContent() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>\n            {error instanceof UnsupportedChainIdError\n              ? t('walletModal.wrongNetwork')\n              : t('walletModal.errorConnecting')}\n          </HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <>\n                <h5>{t('walletModal.pleaseConnectAvalanche')}</h5>\n                {isMetamask && (\n                  <ButtonLight onClick={addAvalancheNetwork}>{t('walletModal.switchAvalanche')}</ButtonLight>\n                )}\n              </>\n            ) : (\n              t('walletModal.errorConnectingRefresh')\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      )\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      )\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                setPendingError(false)\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>{t('walletModal.connectToWallet')}</HoverText>\n          </HeaderRow>\n        )}\n        <ContentWrapper>\n          {walletView === WALLET_VIEWS.PENDING ? (\n            <PendingView\n              connector={pendingWallet}\n              error={pendingError}\n              setPendingError={setPendingError}\n              tryActivation={tryActivation}\n            />\n          ) : (\n            <OptionGrid>{getOptions()}</OptionGrid>\n          )}\n          {walletView !== WALLET_VIEWS.PENDING && (\n            <Blurb>\n              <span>{t('walletModal.newToAvalanche')} &nbsp;</span>{' '}\n              <ExternalLink href={WALLET_TUTORIAL}>{t('walletModal.learnMoreWallet')}</ExternalLink>\n            </Blurb>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={false} maxHeight={90}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}