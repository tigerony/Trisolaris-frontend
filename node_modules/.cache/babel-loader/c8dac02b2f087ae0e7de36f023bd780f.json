{"ast":null,"code":"import { ChainId, JSBI, Percent, Token, WAVAX } from '@pangolindex/sdk';\nimport { injected, walletlink } from '../connectors';\nexport const GAS_PRICE = 225;\nexport const ROUTER_ADDRESS = {\n  [ChainId.FUJI]: '0x2D99ABD9008Dc933ff5c0CD271B88309593aB921',\n  [ChainId.AVALANCHE]: '0xE54Ca86531e17Ef3616d22Ca28b0D458b6C89106'\n};\nexport const LANDING_PAGE = 'https://pangolin.exchange/';\nexport const ANALYTICS_PAGE = 'https://info.pangolin.exchange/';\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const GOVERNANCE_ADDRESS = '0xb0Ff2b1047d9E8d294c2eD798faE3fA817F43Ee1';\nexport const BRIDGE_MIGRATOR_ADDRESS = '0x4b23Aa72A1214d0E4fd3f2c8Da7C6ba660F7483C'; // a list of tokens by chain\n\nexport const PNG = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, '0x83080D4b5fC60e22dFFA8d14AD3BB41Dde48F199', 18, 'PNG', 'Pangolin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x60781C2586D68229fde47564546784ab3fACA982', 18, 'PNG', 'Pangolin')\n};\nexport const ETH = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'ETH', 'Ether'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xf20d962a6c8f70c731bd838a3a388D7d48fA6e15', 18, 'ETH', 'Ether')\n};\nexport const WETHe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'WETH.e', 'Ether'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB', 18, 'WETH.e', 'Ether')\n};\nexport const USDT = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 6, 'USDT', 'Tether USD'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xde3A24028580884448a5397872046a019649b084', 6, 'USDT', 'Tether USD')\n};\nexport const USDTe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 6, 'USDT.e', 'Tether USD'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xc7198437980c041c805A1EDcbA50c1Ce5db95118', 6, 'USDT.e', 'Tether USD')\n};\nexport const WBTC = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 8, 'WBTC', 'Wrapped Bitcoin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x408D4cD0ADb7ceBd1F1A1C33A0Ba2098E1295bAB', 8, 'WBTC', 'Wrapped Bitcoin')\n};\nexport const WBTCe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 8, 'WBTC.e', 'Wrapped Bitcoin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x50b7545627a5162F82A992c33b87aDc75187B218', 8, 'WBTC.e', 'Wrapped Bitcoin')\n};\nexport const LINK = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'LINK', 'ChainLink Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xB3fe5374F67D7a22886A0eE082b2E2f9d2651651', 18, 'LINK', 'ChainLink Token')\n};\nexport const LINKe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'LINK.e', 'ChainLink Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x5947BB275c521040051D82396192181b413227A3', 18, 'LINK.e', 'ChainLink Token')\n};\nexport const DAI = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'DAI', 'Dai Stablecoin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xbA7dEebBFC5fA1100Fb055a87773e1E99Cd3507a', 18, 'DAI', 'Dai Stablecoin')\n};\nexport const DAIe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'DAI.e', 'Dai Stablecoin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70', 18, 'DAI.e', 'Dai Stablecoin')\n};\nexport const UNI = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'UNI', 'Uniswap'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xf39f9671906d8630812f9d9863bBEf5D523c84Ab', 18, 'UNI', 'Uniswap')\n};\nexport const UNIe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'UNI.e', 'Uniswap'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x8eBAf22B6F053dFFeaf46f4Dd9eFA95D89ba8580', 18, 'UNI.e', 'Uniswap')\n};\nexport const SUSHI = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'SUSHI', 'SushiToken'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x39cf1BD5f15fb22eC3D9Ff86b0727aFc203427cc', 18, 'SUSHI', 'SushiToken')\n};\nexport const SUSHIe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'SUSHI.e', 'SushiToken'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x37B608519F91f70F2EeB0e5Ed9AF4061722e4F76', 18, 'SUSHI.e', 'SushiToken')\n};\nexport const AAVE = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'AAVE', 'Aave Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x8cE2Dee54bB9921a2AE0A63dBb2DF8eD88B91dD9', 18, 'AAVE', 'Aave Token')\n};\nexport const AAVEe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'AAVE.e', 'Aave Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x63a72806098Bd3D9520cC43356dD78afe5D386D9', 18, 'AAVE.e', 'Aave Token')\n};\nexport const YFI = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'YFI', 'yearn.finance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x99519AcB025a0e0d44c3875A4BbF03af65933627', 18, 'YFI', 'yearn.finance')\n};\nexport const YFIe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'YFI.e', 'yearn.finance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x9eAaC1B23d935365bD7b542Fe22cEEe2922f52dc', 18, 'YFI.e', 'yearn.finance')\n};\nexport const SNOB = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, '0xF319e2f610462F846d6e93F51CdC862EEFF2a554', 18, 'SNOB', 'Snowball'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xC38f41A296A4493Ff429F1238e030924A1542e50', 18, 'SNOB', 'Snowball')\n};\nexport const VSO = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'VSO', 'VersoToken'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x846D50248BAf8b7ceAA9d9B53BFd12d7D7FBB25a', 18, 'VSO', 'VersoToken')\n};\nexport const SPORE = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 9, 'SPORE', 'Spore.Finance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x6e7f5C0b9f4432716bDd0a77a3601291b9D9e985', 9, 'SPORE', 'Spore.Finance')\n}; // Bridged via anyswap\n\nexport const BIFI = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'BIFI', 'beefy.finance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xd6070ae98b8069de6B494332d1A1a81B6179D960', 18, 'BIFI', 'beefy.finance')\n}; // Bridged via anyswap\n\nexport const BNB = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'BNB', 'Binance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x264c1383EA520f73dd837F915ef3a732e204a493', 18, 'BNB', 'Binance')\n};\nexport const XAVA = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'XAVA', 'Avalaunch'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xd1c3f94DE7e5B45fa4eDBBA472491a9f4B166FC4', 18, 'XAVA', 'Avalaunch')\n};\nexport const PEFI = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'PEFI', 'PenguinToken'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xe896CDeaAC9615145c0cA09C8Cd5C25bced6384c', 18, 'PEFI', 'PenguinToken')\n};\nexport const TRYB = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 6, 'TRYB', 'BiLira'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x564A341Df6C126f90cf3ECB92120FD7190ACb401', 6, 'TRYB', 'BiLira')\n};\nexport const SHERPA = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'SHERPA', 'Sherpa'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xa5E59761eBD4436fa4d20E1A27cBa29FB2471Fc6', 18, 'SHERPA', 'Sherpa')\n};\nexport const YAK = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'YAK', 'Yak Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x59414b3089ce2AF0010e7523Dea7E2b35d776ec7', 18, 'YAK', 'Yak Token')\n};\nexport const QI = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'QI', 'BENQI'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x8729438EB15e2C8B576fCc6AeCdA6A148776C0F5', 18, 'QI', 'BENQI')\n};\nexport const DYP = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'DYP', 'DeFiYieldProtocol'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x961C8c0B1aaD0c0b10a51FeF6a867E3091BCef17', 18, 'DYP', 'DeFiYieldProtocol')\n};\nexport const WALBT = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'WALBT', 'Wrapped AllianceBlock Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x9E037dE681CaFA6E661e6108eD9c2bd1AA567Ecd', 18, 'WALBT', 'Wrapped AllianceBlock Token')\n};\nexport const HUSKY = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'HUSKY', 'Husky'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x65378b697853568dA9ff8EaB60C13E1Ee9f4a654', 18, 'HUSKY', 'Husky')\n};\nexport const USDCe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 6, 'USDC.e', 'USD Coin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664', 6, 'USDC.e', 'USD Coin')\n};\nexport const LYD = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'LYD', 'LydiaFinance Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x4C9B4E1AC6F24CdE3660D5E4Ef1eBF77C710C084', 18, 'LYD', 'LydiaFinance Token')\n};\nexport const TUSD = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'TUSD', 'TrueUSD'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x1C20E891Bab6b1727d14Da358FAe2984Ed9B59EB', 18, 'TUSD', 'TrueUSD')\n};\nexport const GAJ = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'GAJ', 'PolyGaj Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x595c8481c48894771CE8FaDE54ac6Bf59093F9E8', 18, 'GAJ', 'PolyGaj Token')\n};\nexport const GDL = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'GDL', 'Gondola'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xD606199557c8Ab6F4Cc70bD03FaCc96ca576f142', 18, 'GDL', 'Gondola')\n};\nexport const MFI = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'MFI', 'MarginSwap'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x9Fda7cEeC4c18008096C2fE2B85F05dc300F94d0', 18, 'MFI', 'MarginSwap')\n};\nexport const SHIBX = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'SHIBX', 'SHIBAVAX'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x440aBbf18c54b2782A4917b80a1746d3A2c2Cce1', 18, 'SHIBX', 'SHIBAVAX')\n};\nexport const AVE = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'AVE', 'Avaware'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x78ea17559B3D2CF85a7F9C2C704eda119Db5E6dE', 18, 'AVE', 'Avaware')\n};\nexport const ELE = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'ELE', 'Eleven.finance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xAcD7B3D9c10e97d0efA418903C0c7669E702E4C0', 18, 'ELE', 'Eleven.finance')\n};\nexport const FRAX = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'FRAX', 'Frax'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xDC42728B0eA910349ed3c6e1c9Dc06b5FB591f98', 18, 'FRAX', 'Frax')\n};\nexport const FXS = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'FXS', 'Frax Share'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xD67de0e0a0Fd7b15dC8348Bb9BE742F3c5850454', 18, 'FXS', 'Frax Share')\n};\nexport const START = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'START', 'Starter'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xF44Fb887334Fa17d2c5c0F970B5D320ab53eD557', 18, 'START', 'Starter')\n};\nexport const SWAPe = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'SWAP.e', 'TrustSwap Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xc7B5D72C836e718cDA8888eaf03707fAef675079', 18, 'SWAP.e', 'TrustSwap Token')\n};\nexport const YTS = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'YTS', 'YetiSwap'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x488F73cddDA1DE3664775fFd91623637383D6404', 18, 'YTS', 'YetiSwap')\n};\nexport const TUNDRA = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'TUNDRA', 'TUNDRA Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x21c5402C3B7d40C89Cc472C9dF5dD7E51BbAb1b1', 18, 'TUNDRA', 'TUNDRA Token')\n};\nexport const XUSD = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'xUSD', 'xDollar Stablecoin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x3509f19581aFEDEff07c53592bc0Ca84e4855475', 18, 'xUSD', 'xDollar Stablecoin')\n};\nexport const XDO = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'XDO', 'xDollar'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x9eF758aC000a354479e538B8b2f01b917b8e89e7', 18, 'XDO', 'xDollar')\n};\nexport const AIRDROP_ADDRESS = {\n  [ChainId.FUJI]: ZERO_ADDRESS,\n  [ChainId.AVALANCHE]: '0x0C58C2041da4CfCcF5818Bbe3b66DBC23B3902d9'\n};\nconst WAVAX_AND_PNG_ONLY = {\n  [ChainId.FUJI]: [WAVAX[ChainId.FUJI], PNG[ChainId.FUJI]],\n  [ChainId.AVALANCHE]: [WAVAX[ChainId.AVALANCHE], PNG[ChainId.AVALANCHE]]\n}; // used to construct intermediary pairs for trading\n\nexport const BASES_TO_CHECK_TRADES_AGAINST = { ...WAVAX_AND_PNG_ONLY\n};\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\n\nexport const CUSTOM_BASES = {\n  [ChainId.AVALANCHE]: {}\n}; // used for display in the default list when adding liquidity\n\nexport const SUGGESTED_BASES = { ...WAVAX_AND_PNG_ONLY\n}; // used to construct the list of all pairs we consider by default in the frontend\n\nexport const BASES_TO_TRACK_LIQUIDITY_FOR = { ...WAVAX_AND_PNG_ONLY\n};\nexport const PINNED_PAIRS = {\n  [ChainId.AVALANCHE]: []\n};\nexport const SUPPORTED_WALLETS = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  }\n};\nexport const NetworkContextName = 'NETWORK';\nexport const AVALANCHE_CHAIN_PARAMS = {\n  chainId: '0xa86a',\n  // A 0x-prefixed hexadecimal chainId\n  chainName: 'Avalanche Mainnet C-Chain',\n  nativeCurrency: {\n    name: 'Avalanche',\n    symbol: 'AVAX',\n    decimals: 18\n  },\n  rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\n  blockExplorerUrls: ['https://cchain.explorer.avax.network/']\n}; // default allowed slippage, in bips\n\nexport const INITIAL_ALLOWED_SLIPPAGE = 50; // 60 minutes, denominated in seconds\n\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 60;\nexport const BIG_INT_ZERO = JSBI.BigInt(0); // one basis point\n\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\nexport const BIPS_BASE = JSBI.BigInt(10000); // used for warning states\n\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\n\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\n\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\n\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n// used to ensure the user doesn't send so much ETH so they end up with <.01\n\nexport const MIN_ETH = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)); // .01 ETH\n\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000));\nexport const WYRE_API_KEY = process.env.REACT_APP_WYRE_API_KEY ? process.env.REACT_APP_WYRE_API_KEY : '';\nexport const WYRE_SECRET_KEY = process.env.REACT_APP_WYRE_SECRET_KEY ? process.env.REACT_APP_WYRE_SECRET_KEY : '';\nexport const WYRE_ID = process.env.REACT_APP_WYRE_ID ? process.env.REACT_APP_WYRE_ID : '';\nexport const WYRE_API_URL = 'https://api.sendwyre.com';\nexport const WYRE_QUOTE_API_ENDPOINT = '/v3/orders/quote/partner';\nexport const WYRE_RESERVE_API_ENDPOINT = '/v3/orders/reserve';\nexport const WYRE_CALLBACK_URL = 'https://app.pangolin.exchange/';","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/constants/index.ts"],"names":["ChainId","JSBI","Percent","Token","WAVAX","injected","walletlink","GAS_PRICE","ROUTER_ADDRESS","FUJI","AVALANCHE","LANDING_PAGE","ANALYTICS_PAGE","ZERO_ADDRESS","GOVERNANCE_ADDRESS","BRIDGE_MIGRATOR_ADDRESS","PNG","ETH","WETHe","USDT","USDTe","WBTC","WBTCe","LINK","LINKe","DAI","DAIe","UNI","UNIe","SUSHI","SUSHIe","AAVE","AAVEe","YFI","YFIe","SNOB","VSO","SPORE","BIFI","BNB","XAVA","PEFI","TRYB","SHERPA","YAK","QI","DYP","WALBT","HUSKY","USDCe","LYD","TUSD","GAJ","GDL","MFI","SHIBX","AVE","ELE","FRAX","FXS","START","SWAPe","YTS","TUNDRA","XUSD","XDO","AIRDROP_ADDRESS","WAVAX_AND_PNG_ONLY","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","WALLET_LINK","NetworkContextName","AVALANCHE_CHAIN_PARAMS","chainId","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","BigInt","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LINK_THRESHOLD","WYRE_API_KEY","process","env","REACT_APP_WYRE_API_KEY","WYRE_SECRET_KEY","REACT_APP_WYRE_SECRET_KEY","WYRE_ID","REACT_APP_WYRE_ID","WYRE_API_URL","WYRE_QUOTE_API_ENDPOINT","WYRE_RESERVE_API_ENDPOINT","WYRE_CALLBACK_URL"],"mappings":"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","sourcesContent":["import { ChainId, JSBI, Percent, Token, WAVAX } from '@pangolindex/sdk'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nimport { injected, walletlink } from '../connectors'\n\nexport const GAS_PRICE = 225;\n\nexport const ROUTER_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.FUJI]: '0x2D99ABD9008Dc933ff5c0CD271B88309593aB921',\n  [ChainId.AVALANCHE]: '0xE54Ca86531e17Ef3616d22Ca28b0D458b6C89106'\n}\n\nexport const LANDING_PAGE = 'https://pangolin.exchange/'\nexport const ANALYTICS_PAGE = 'https://info.pangolin.exchange/'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport const GOVERNANCE_ADDRESS = '0xb0Ff2b1047d9E8d294c2eD798faE3fA817F43Ee1'\n\nexport const BRIDGE_MIGRATOR_ADDRESS = '0x4b23Aa72A1214d0E4fd3f2c8Da7C6ba660F7483C'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const PNG: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, '0x83080D4b5fC60e22dFFA8d14AD3BB41Dde48F199', 18, 'PNG', 'Pangolin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x60781C2586D68229fde47564546784ab3fACA982', 18, 'PNG', 'Pangolin')\n}\n\nexport const ETH: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'ETH', 'Ether'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xf20d962a6c8f70c731bd838a3a388D7d48fA6e15', 18, 'ETH', 'Ether')\n}\n\nexport const WETHe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'WETH.e', 'Ether'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB', 18, 'WETH.e', 'Ether')\n}\n\nexport const USDT: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 6, 'USDT', 'Tether USD'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xde3A24028580884448a5397872046a019649b084', 6, 'USDT', 'Tether USD')\n}\n\nexport const USDTe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 6, 'USDT.e', 'Tether USD'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xc7198437980c041c805A1EDcbA50c1Ce5db95118', 6, 'USDT.e', 'Tether USD')\n}\n\nexport const WBTC: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 8, 'WBTC', 'Wrapped Bitcoin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x408D4cD0ADb7ceBd1F1A1C33A0Ba2098E1295bAB', 8, 'WBTC', 'Wrapped Bitcoin')\n}\n\nexport const WBTCe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 8, 'WBTC.e', 'Wrapped Bitcoin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x50b7545627a5162F82A992c33b87aDc75187B218', 8, 'WBTC.e', 'Wrapped Bitcoin')\n}\n\nexport const LINK: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'LINK', 'ChainLink Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xB3fe5374F67D7a22886A0eE082b2E2f9d2651651', 18, 'LINK', 'ChainLink Token')\n}\n\nexport const LINKe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'LINK.e', 'ChainLink Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x5947BB275c521040051D82396192181b413227A3', 18, 'LINK.e', 'ChainLink Token')\n}\n\nexport const DAI: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'DAI', 'Dai Stablecoin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xbA7dEebBFC5fA1100Fb055a87773e1E99Cd3507a', 18, 'DAI', 'Dai Stablecoin')\n}\n\nexport const DAIe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'DAI.e', 'Dai Stablecoin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70', 18, 'DAI.e', 'Dai Stablecoin')\n}\n\nexport const UNI: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'UNI', 'Uniswap'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xf39f9671906d8630812f9d9863bBEf5D523c84Ab', 18, 'UNI', 'Uniswap')\n}\n\nexport const UNIe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'UNI.e', 'Uniswap'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x8eBAf22B6F053dFFeaf46f4Dd9eFA95D89ba8580', 18, 'UNI.e', 'Uniswap')\n}\n\nexport const SUSHI: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'SUSHI', 'SushiToken'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x39cf1BD5f15fb22eC3D9Ff86b0727aFc203427cc', 18, 'SUSHI', 'SushiToken')\n}\n\nexport const SUSHIe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'SUSHI.e', 'SushiToken'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x37B608519F91f70F2EeB0e5Ed9AF4061722e4F76', 18, 'SUSHI.e', 'SushiToken')\n}\n\nexport const AAVE: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'AAVE', 'Aave Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x8cE2Dee54bB9921a2AE0A63dBb2DF8eD88B91dD9', 18, 'AAVE', 'Aave Token')\n}\n\nexport const AAVEe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'AAVE.e', 'Aave Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x63a72806098Bd3D9520cC43356dD78afe5D386D9', 18, 'AAVE.e', 'Aave Token')\n}\n\nexport const YFI: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'YFI', 'yearn.finance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x99519AcB025a0e0d44c3875A4BbF03af65933627', 18, 'YFI', 'yearn.finance')\n}\n\nexport const YFIe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'YFI.e', 'yearn.finance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x9eAaC1B23d935365bD7b542Fe22cEEe2922f52dc', 18, 'YFI.e', 'yearn.finance')\n}\n\nexport const SNOB: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, '0xF319e2f610462F846d6e93F51CdC862EEFF2a554', 18, 'SNOB', 'Snowball'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xC38f41A296A4493Ff429F1238e030924A1542e50', 18, 'SNOB', 'Snowball')\n}\n\nexport const VSO: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'VSO', 'VersoToken'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x846D50248BAf8b7ceAA9d9B53BFd12d7D7FBB25a', 18, 'VSO', 'VersoToken')\n}\n\nexport const SPORE: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 9, 'SPORE', 'Spore.Finance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x6e7f5C0b9f4432716bDd0a77a3601291b9D9e985', 9, 'SPORE', 'Spore.Finance')\n}\n\n// Bridged via anyswap\nexport const BIFI: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'BIFI', 'beefy.finance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xd6070ae98b8069de6B494332d1A1a81B6179D960', 18, 'BIFI', 'beefy.finance')\n}\n\n// Bridged via anyswap\nexport const BNB: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'BNB', 'Binance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x264c1383EA520f73dd837F915ef3a732e204a493', 18, 'BNB', 'Binance')\n}\n\nexport const XAVA: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'XAVA', 'Avalaunch'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xd1c3f94DE7e5B45fa4eDBBA472491a9f4B166FC4', 18, 'XAVA', 'Avalaunch')\n}\n\nexport const PEFI: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'PEFI', 'PenguinToken'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xe896CDeaAC9615145c0cA09C8Cd5C25bced6384c', 18, 'PEFI', 'PenguinToken')\n}\n\nexport const TRYB: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 6, 'TRYB', 'BiLira'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x564A341Df6C126f90cf3ECB92120FD7190ACb401', 6, 'TRYB', 'BiLira')\n}\n\nexport const SHERPA: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'SHERPA', 'Sherpa'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xa5E59761eBD4436fa4d20E1A27cBa29FB2471Fc6', 18, 'SHERPA', 'Sherpa')\n}\n\nexport const YAK: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'YAK', 'Yak Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x59414b3089ce2AF0010e7523Dea7E2b35d776ec7', 18, 'YAK', 'Yak Token')\n}\n\nexport const QI: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'QI', 'BENQI'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x8729438EB15e2C8B576fCc6AeCdA6A148776C0F5', 18, 'QI', 'BENQI')\n}\n\nexport const DYP: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'DYP', 'DeFiYieldProtocol'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x961C8c0B1aaD0c0b10a51FeF6a867E3091BCef17', 18, 'DYP', 'DeFiYieldProtocol')\n}\n\nexport const WALBT: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'WALBT', 'Wrapped AllianceBlock Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x9E037dE681CaFA6E661e6108eD9c2bd1AA567Ecd', 18, 'WALBT', 'Wrapped AllianceBlock Token')\n}\n\nexport const HUSKY: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'HUSKY', 'Husky'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x65378b697853568dA9ff8EaB60C13E1Ee9f4a654', 18, 'HUSKY', 'Husky')\n}\n\nexport const USDCe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 6, 'USDC.e', 'USD Coin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664', 6, 'USDC.e', 'USD Coin')\n}\n\nexport const LYD: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'LYD', 'LydiaFinance Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x4C9B4E1AC6F24CdE3660D5E4Ef1eBF77C710C084', 18, 'LYD', 'LydiaFinance Token')\n}\n\nexport const TUSD: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'TUSD', 'TrueUSD'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x1C20E891Bab6b1727d14Da358FAe2984Ed9B59EB', 18, 'TUSD', 'TrueUSD')\n}\n\nexport const GAJ: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'GAJ', 'PolyGaj Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x595c8481c48894771CE8FaDE54ac6Bf59093F9E8', 18, 'GAJ', 'PolyGaj Token')\n}\n\nexport const GDL: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'GDL', 'Gondola'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xD606199557c8Ab6F4Cc70bD03FaCc96ca576f142', 18, 'GDL', 'Gondola')\n}\n\nexport const MFI: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'MFI', 'MarginSwap'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x9Fda7cEeC4c18008096C2fE2B85F05dc300F94d0', 18, 'MFI', 'MarginSwap')\n}\n\nexport const SHIBX: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'SHIBX', 'SHIBAVAX'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x440aBbf18c54b2782A4917b80a1746d3A2c2Cce1', 18, 'SHIBX', 'SHIBAVAX')\n}\n\nexport const AVE: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'AVE', 'Avaware'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x78ea17559B3D2CF85a7F9C2C704eda119Db5E6dE', 18, 'AVE', 'Avaware')\n}\n\nexport const ELE: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'ELE', 'Eleven.finance'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xAcD7B3D9c10e97d0efA418903C0c7669E702E4C0', 18, 'ELE', 'Eleven.finance')\n}\n\nexport const FRAX: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'FRAX', 'Frax'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xDC42728B0eA910349ed3c6e1c9Dc06b5FB591f98', 18, 'FRAX', 'Frax')\n}\n\nexport const FXS: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'FXS', 'Frax Share'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xD67de0e0a0Fd7b15dC8348Bb9BE742F3c5850454', 18, 'FXS', 'Frax Share')\n}\n\nexport const START: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'START', 'Starter'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xF44Fb887334Fa17d2c5c0F970B5D320ab53eD557', 18, 'START', 'Starter')\n}\n\nexport const SWAPe: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'SWAP.e', 'TrustSwap Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xc7B5D72C836e718cDA8888eaf03707fAef675079', 18, 'SWAP.e', 'TrustSwap Token')\n}\n\nexport const YTS: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'YTS', 'YetiSwap'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x488F73cddDA1DE3664775fFd91623637383D6404', 18, 'YTS', 'YetiSwap')\n}\n\nexport const TUNDRA: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'TUNDRA', 'TUNDRA Token'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x21c5402C3B7d40C89Cc472C9dF5dD7E51BbAb1b1', 18, 'TUNDRA', 'TUNDRA Token')\n}\n\nexport const XUSD: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'xUSD', 'xDollar Stablecoin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x3509f19581aFEDEff07c53592bc0Ca84e4855475', 18, 'xUSD', 'xDollar Stablecoin')\n}\n\nexport const XDO: { [chainId in ChainId]: Token } = {\n  [ChainId.FUJI]: new Token(ChainId.FUJI, ZERO_ADDRESS, 18, 'XDO', 'xDollar'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0x9eF758aC000a354479e538B8b2f01b917b8e89e7', 18, 'XDO', 'xDollar')\n}\n\nexport const AIRDROP_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.FUJI]: ZERO_ADDRESS,\n  [ChainId.AVALANCHE]: '0x0C58C2041da4CfCcF5818Bbe3b66DBC23B3902d9'\n}\n\nconst WAVAX_AND_PNG_ONLY: ChainTokenList = {\n  [ChainId.FUJI]: [WAVAX[ChainId.FUJI], PNG[ChainId.FUJI]],\n  [ChainId.AVALANCHE]: [WAVAX[ChainId.AVALANCHE], PNG[ChainId.AVALANCHE]]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WAVAX_AND_PNG_ONLY,\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.AVALANCHE]: {\n\n  }\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WAVAX_AND_PNG_ONLY,\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WAVAX_AND_PNG_ONLY,\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.AVALANCHE]: [\n  ]\n}\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5',\n  },\n}\n\nexport const NetworkContextName = 'NETWORK'\n\nexport const AVALANCHE_CHAIN_PARAMS = {\n  chainId: '0xa86a', // A 0x-prefixed hexadecimal chainId\n  chainName: 'Avalanche Mainnet C-Chain',\n  nativeCurrency: {\n    name: 'Avalanche',\n    symbol: 'AVAX',\n    decimals: 18\n  },\n  rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\n  blockExplorerUrls: ['https://cchain.explorer.avax.network/']\n}\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 60 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 60\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))\n\nexport const WYRE_API_KEY = process.env.REACT_APP_WYRE_API_KEY ? process.env.REACT_APP_WYRE_API_KEY : ''\nexport const WYRE_SECRET_KEY = process.env.REACT_APP_WYRE_SECRET_KEY ? process.env.REACT_APP_WYRE_SECRET_KEY : ''\nexport const WYRE_ID = process.env.REACT_APP_WYRE_ID ? process.env.REACT_APP_WYRE_ID : ''\nexport const WYRE_API_URL = 'https://api.sendwyre.com'\nexport const WYRE_QUOTE_API_ENDPOINT = '/v3/orders/quote/partner'\nexport const WYRE_RESERVE_API_ENDPOINT = '/v3/orders/reserve'\nexport const WYRE_CALLBACK_URL = 'https://app.pangolin.exchange/'\n"]},"metadata":{},"sourceType":"module"}