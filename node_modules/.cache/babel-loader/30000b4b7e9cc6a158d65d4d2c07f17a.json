{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/Modal/index.tsx\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { animated, useTransition, useSpring } from 'react-spring';\nimport { DialogOverlay, DialogContent } from '@reach/dialog';\nimport { isMobile } from 'react-device-detect';\nimport '@reach/dialog/styles.css';\nimport { transparentize } from 'polished';\nimport { useGesture } from 'react-use-gesture';\nconst AnimatedDialogOverlay = animated(DialogOverlay); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 2;\n    background-color: transparent;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: ${({\n  theme\n}) => theme.modalBG};\n  }\n`;\nconst AnimatedDialogContent = animated(DialogContent); // destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst StyledDialogContent = styled(({\n  minHeight,\n  maxHeight,\n  mobile,\n  isOpen,\n  ...rest\n}) => /*#__PURE__*/React.createElement(AnimatedDialogContent, Object.assign({}, rest, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}))).attrs({\n  'aria-label': 'dialog'\n})`\n  overflow-y: ${({\n  mobile\n}) => mobile ? 'scroll' : 'hidden'};\n\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    background-color: ${({\n  theme\n}) => theme.bg1};\n    box-shadow: 0 4px 8px 0 ${({\n  theme\n}) => transparentize(0.95, theme.shadow1)};\n    padding: 0px;\n    width: 50vw;\n    overflow-y: ${({\n  mobile\n}) => mobile ? 'scroll' : 'hidden'};\n    overflow-x: hidden;\n\n    align-self: ${({\n  mobile\n}) => mobile ? 'flex-end' : 'center'};\n\n    max-width: 420px;\n    ${({\n  maxHeight\n}) => maxHeight && css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({\n  minHeight\n}) => minHeight && css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 20px;\n    ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      margin: 0;\n    `}\n    ${({\n  theme,\n  mobile\n}) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      ${mobile && css`\n          width: 100vw;\n          border-radius: 20px;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        `}\n    `}\n  }\n`;\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 90,\n  initialFocusRef,\n  children\n}) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: {\n      duration: 200\n    },\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    }\n  });\n  const [{\n    y\n  }, set] = useSpring(() => ({\n    y: 0,\n    config: {\n      mass: 1,\n      tension: 210,\n      friction: 20\n    }\n  }));\n  const bind = useGesture({\n    onDrag: state => {\n      set({\n        y: state.down ? state.movement[1] : 0\n      });\n\n      if (state.movement[1] > 300 || state.velocity > 3 && state.direction[1] > 0) {\n        onDismiss();\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, fadeTransition.map(({\n    item,\n    key,\n    props\n  }) => item && /*#__PURE__*/React.createElement(StyledDialogOverlay, {\n    key: key,\n    style: props,\n    onDismiss: onDismiss,\n    initialFocusRef: initialFocusRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledDialogContent, Object.assign({}, isMobile ? { ...bind(),\n    style: {\n      transform: y.interpolate(y => `translateY(${y > 0 ? y : 0}px)`)\n    }\n  } : {}, {\n    \"aria-label\": \"dialog content\",\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    mobile: isMobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), !initialFocusRef && isMobile ? /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 49\n    }\n  }) : null, children))));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/Modal/index.tsx"],"names":["React","styled","css","animated","useTransition","useSpring","DialogOverlay","DialogContent","isMobile","transparentize","useGesture","AnimatedDialogOverlay","StyledDialogOverlay","theme","modalBG","AnimatedDialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","rest","attrs","bg1","shadow1","mediaWidth","upToMedium","upToSmall","Modal","onDismiss","initialFocusRef","children","fadeTransition","config","duration","from","opacity","enter","leave","y","set","mass","tension","friction","bind","onDrag","state","down","movement","velocity","direction","map","item","key","props","style","transform","interpolate"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { animated, useTransition, useSpring } from 'react-spring'\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\nimport { isMobile } from 'react-device-detect'\nimport '@reach/dialog/styles.css'\nimport { transparentize } from 'polished'\nimport { useGesture } from 'react-use-gesture'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 2;\n    background-color: transparent;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: ${({ theme }) => theme.modalBG};\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog'\n})`\n  overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    background-color: ${({ theme }) => theme.bg1};\n    box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadow1)};\n    padding: 0px;\n    width: 50vw;\n    overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n    overflow-x: hidden;\n\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    max-width: 420px;\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 20px;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      margin: 0;\n    `}\n    ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      ${mobile &&\n        css`\n          width: 100vw;\n          border-radius: 20px;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        `}\n    `}\n  }\n`\n\ninterface ModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  initialFocusRef?: React.RefObject<any>\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 90,\n  initialFocusRef,\n  children\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 }\n  })\n\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: { mass: 1, tension: 210, friction: 20 } }))\n  const bind = useGesture({\n    onDrag: state => {\n      set({\n        y: state.down ? state.movement[1] : 0\n      })\n      if (state.movement[1] > 300 || (state.velocity > 3 && state.direction[1] > 0)) {\n        onDismiss()\n      }\n    }\n  })\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogOverlay key={key} style={props} onDismiss={onDismiss} initialFocusRef={initialFocusRef}>\n              <StyledDialogContent\n                {...(isMobile\n                  ? {\n                      ...bind(),\n                      style: { transform: y.interpolate(y => `translateY(${y > 0 ? y : 0}px)`) }\n                    }\n                  : {})}\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                mobile={isMobile}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {children}\n              </StyledDialogContent>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}