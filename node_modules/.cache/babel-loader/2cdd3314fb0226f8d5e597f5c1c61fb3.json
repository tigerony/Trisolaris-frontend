{"ast":null,"code":"import getCountry from \"../../utils/extractCountry\";\nimport { WYRE_API_KEY, WYRE_ID, WYRE_RESERVE_API_ENDPOINT, WYRE_API_URL, WYRE_CALLBACK_URL } from '../../constants';\nimport { signature } from '../../state/wyre/hooks';\nexport const redirectToWyre = async data => {\n  const body = { ...data,\n    referrerAccountId: WYRE_ID,\n    destCurrency: \"AVAX\",\n    redirectUrl: WYRE_CALLBACK_URL,\n    hideTrackBtn: true,\n    country: getCountry()\n  };\n  const timestamp = new Date().getTime();\n  const url = `${WYRE_API_URL}${WYRE_RESERVE_API_ENDPOINT}?timestamp=${timestamp}`;\n  const headers = {\n    'X-Api-Key': WYRE_API_KEY,\n    'X-Api-Signature': signature(url, JSON.stringify(body)),\n    'Content-Type': 'application/json'\n  };\n\n  try {\n    const response = await fetch(url, {\n      method: 'post',\n      'headers': headers,\n      body: JSON.stringify(body)\n    });\n    const responseBody = await response.json();\n\n    if (response.status === 200) {\n      if (responseBody.url) {\n        window.open(responseBody.url, '_self');\n      } else {\n        console.debug(\"No URL returned by Wyre\");\n        return false;\n      }\n    } else {\n      console.debug(\"Request failed\");\n      return false;\n    }\n\n    return true;\n  } catch (error) {\n    console.debug('Failed to fetch quote from Wyre', error);\n    return false;\n  }\n};","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/pages/Buy/redirect.tsx"],"names":["getCountry","WYRE_API_KEY","WYRE_ID","WYRE_RESERVE_API_ENDPOINT","WYRE_API_URL","WYRE_CALLBACK_URL","signature","redirectToWyre","data","body","referrerAccountId","destCurrency","redirectUrl","hideTrackBtn","country","timestamp","Date","getTime","url","headers","JSON","stringify","response","fetch","method","responseBody","json","status","window","open","console","debug","error"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4BAAvB;AACA,SACEC,YADF,EAEEC,OAFF,EAGEC,yBAHF,EAIEC,YAJF,EAKEC,iBALF,QAMO,iBANP;AAOA,SAAQC,SAAR,QAAwB,wBAAxB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAP,IAAuC;AACnE,QAAMC,IAAI,GAAG,EACX,GAAGD,IADQ;AAEXE,IAAAA,iBAAiB,EAAER,OAFR;AAGXS,IAAAA,YAAY,EAAE,MAHH;AAIXC,IAAAA,WAAW,EAAEP,iBAJF;AAKXQ,IAAAA,YAAY,EAAE,IALH;AAMXC,IAAAA,OAAO,EAAEd,UAAU;AANR,GAAb;AASA,QAAMe,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;AACA,QAAMC,GAAG,GAAI,GAAEd,YAAa,GAAED,yBAA0B,cAAaY,SAAU,EAA/E;AAEA,QAAMI,OAAO,GAAG;AACd,iBAAalB,YADC;AAEd,uBAAmBK,SAAS,CAACY,GAAD,EAAME,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAN,CAFd;AAGd,oBAAgB;AAHF,GAAhB;;AAMA,MAAI;AACF,UAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAChCM,MAAAA,MAAM,EAAE,MADwB;AAEhC,iBAAWL,OAFqB;AAEZV,MAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAFM,KAAN,CAA5B;AAIA,UAAMgB,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;;AACA,QAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAIF,YAAY,CAACP,GAAjB,EAAsB;AACpBU,QAAAA,MAAM,CAACC,IAAP,CAAYJ,YAAY,CAACP,GAAzB,EAA8B,OAA9B;AACD,OAFD,MAEO;AACLY,QAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd;AACA,eAAO,KAAP;AACD;AACF,KAPD,MAOO;AACLD,MAAAA,OAAO,CAACC,KAAR,CAAc,gBAAd;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GAlBD,CAkBE,OAAOC,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAiDC,KAAjD;AACA,WAAO,KAAP;AACD;AACF,CAzCM","sourcesContent":["import getCountry from \"../../utils/extractCountry\";\nimport {\n  WYRE_API_KEY,\n  WYRE_ID,\n  WYRE_RESERVE_API_ENDPOINT,\n  WYRE_API_URL,\n  WYRE_CALLBACK_URL\n} from '../../constants'\nimport {signature} from '../../state/wyre/hooks'\n\nexport const redirectToWyre = async (data: any): Promise<boolean> => {\n  const body = {\n    ...data,\n    referrerAccountId: WYRE_ID,\n    destCurrency: \"AVAX\",\n    redirectUrl: WYRE_CALLBACK_URL,\n    hideTrackBtn: true,\n    country: getCountry()\n  }\n\n  const timestamp = new Date().getTime();\n  const url = `${WYRE_API_URL}${WYRE_RESERVE_API_ENDPOINT}?timestamp=${timestamp}`\n\n  const headers = {\n    'X-Api-Key': WYRE_API_KEY,\n    'X-Api-Signature': signature(url, JSON.stringify(body)),\n    'Content-Type': 'application/json'\n  }\n\n  try {\n    const response = await fetch(url, {\n      method: 'post',\n      'headers': headers, body: JSON.stringify(body)\n    })\n    const responseBody = await response.json()\n    if (response.status === 200) {\n      if (responseBody.url) {\n        window.open(responseBody.url, '_self')\n      } else {\n        console.debug(\"No URL returned by Wyre\")\n        return false\n      }\n    } else {\n      console.debug(\"Request failed\")\n      return false\n    }\n    return true\n  } catch (error) {\n    console.debug('Failed to fetch quote from Wyre', error)\n    return false\n  }\n}\n"]},"metadata":{},"sourceType":"module"}