{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/CurrencyLogo/index.tsx\";\nimport { CAVAX, Token } from '@pangolindex/sdk';\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport AvaxLogo from '../../assets/images/avalanche_token_round.png';\nimport useHttpLocations from '../../hooks/useHttpLocations';\nimport { WrappedTokenInfo } from '../../state/lists/hooks';\nimport Logo from '../Logo';\n\nconst getTokenLogoURL = address => `https://raw.githubusercontent.com/pangolindex/tokens/main/assets/${address}/logo.png`;\n\nexport const StyledEthereumLogo = styled.img`\n  width: ${({\n  size\n}) => size};\n  height: ${({\n  size\n}) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`;\nconst StyledLogo = styled(Logo)`\n  width: ${({\n  size\n}) => size};\n  height: ${({\n  size\n}) => size};\n  border-radius: ${({\n  size\n}) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n`;\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style\n}) {\n  var _currency$symbol;\n\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined);\n  const srcs = useMemo(() => {\n    if (currency === CAVAX) return [];\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)];\n      }\n\n      return [...uriLocations, getTokenLogoURL(currency.address)];\n    }\n\n    return [];\n  }, [currency, uriLocations]);\n\n  if (currency === CAVAX) {\n    return /*#__PURE__*/React.createElement(StyledEthereumLogo, {\n      src: AvaxLogo,\n      size: size,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StyledLogo, {\n    size: size,\n    srcs: srcs,\n    alt: `${(_currency$symbol = currency === null || currency === void 0 ? void 0 : currency.symbol) !== null && _currency$symbol !== void 0 ? _currency$symbol : 'token'} logo`,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/CurrencyLogo/index.tsx"],"names":["CAVAX","Token","React","useMemo","styled","AvaxLogo","useHttpLocations","WrappedTokenInfo","Logo","getTokenLogoURL","address","StyledEthereumLogo","img","size","StyledLogo","CurrencyLogo","currency","style","uriLocations","logoURI","undefined","srcs","symbol"],"mappings":";AAAA,SAAmBA,KAAnB,EAA0BC,KAA1B,QAAuC,kBAAvC;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,QAAP,MAAqB,+CAArB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,eAAe,GAAIC,OAAD,IACrB,oEAAmEA,OAAQ,WAD9E;;AAGA,OAAO,MAAMC,kBAAkB,GAAGP,MAAM,CAACQ,GAAsB;AAC/D,WAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcA,IAAK;AAC9B,YAAY,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;AAC/B;AACA;AACA,CALO;AAOP,MAAMC,UAAU,GAAGV,MAAM,CAACI,IAAD,CAAyB;AAClD,WAAW,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAcA,IAAK;AAC9B,YAAY,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;AAC/B,mBAAmB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;AACtC;AACA,CALA;AAOA,eAAe,SAASE,YAAT,CAAsB;AACnCC,EAAAA,QADmC;AAEnCH,EAAAA,IAAI,GAAG,MAF4B;AAGnCI,EAAAA;AAHmC,CAAtB,EAQZ;AAAA;;AACD,QAAMC,YAAY,GAAGZ,gBAAgB,CAACU,QAAQ,YAAYT,gBAApB,GAAuCS,QAAQ,CAACG,OAAhD,GAA0DC,SAA3D,CAArC;AAEA,QAAMC,IAAc,GAAGlB,OAAO,CAAC,MAAM;AACnC,QAAIa,QAAQ,KAAKhB,KAAjB,EAAwB,OAAO,EAAP;;AAExB,QAAIgB,QAAQ,YAAYf,KAAxB,EAA+B;AAC7B,UAAIe,QAAQ,YAAYT,gBAAxB,EAA0C;AACxC,eAAO,CAAC,GAAGW,YAAJ,EAAkBT,eAAe,CAACO,QAAQ,CAACN,OAAV,CAAjC,CAAP;AACD;;AAED,aAAO,CAAC,GAAGQ,YAAJ,EAAkBT,eAAe,CAACO,QAAQ,CAACN,OAAV,CAAjC,CAAP;AACD;;AACD,WAAO,EAAP;AACD,GAX6B,EAW3B,CAACM,QAAD,EAAWE,YAAX,CAX2B,CAA9B;;AAaA,MAAIF,QAAQ,KAAKhB,KAAjB,EAAwB;AACtB,wBAAO,oBAAC,kBAAD;AAAoB,MAAA,GAAG,EAAEK,QAAzB;AAAmC,MAAA,IAAI,EAAEQ,IAAzC;AAA+C,MAAA,KAAK,EAAEI,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBAAO,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEJ,IAAlB;AAAwB,IAAA,IAAI,EAAEQ,IAA9B;AAAoC,IAAA,GAAG,EAAG,GAAD,oBAAGL,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEM,MAAb,+DAAuB,OAAQ,OAAxE;AAAgF,IAAA,KAAK,EAAEL,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import { Currency, CAVAX, Token } from '@pangolindex/sdk'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport AvaxLogo from '../../assets/images/avalanche_token_round.png'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport Logo from '../Logo'\n\nconst getTokenLogoURL = (address: string) =>\n  `https://raw.githubusercontent.com/pangolindex/tokens/main/assets/${address}/logo.png`\n\nexport const StyledEthereumLogo = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === CAVAX) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n\n      return [...uriLocations, getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === CAVAX) {\n    return <StyledEthereumLogo src={AvaxLogo} size={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n"]},"metadata":{},"sourceType":"module"}