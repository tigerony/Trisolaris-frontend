{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar abi_1 = require(\"@ethersproject/abi\");\n\nexports.AbiCoder = abi_1.AbiCoder;\nexports.checkResultErrors = abi_1.checkResultErrors;\nexports.defaultAbiCoder = abi_1.defaultAbiCoder;\nexports.EventFragment = abi_1.EventFragment;\nexports.FormatTypes = abi_1.FormatTypes;\nexports.Fragment = abi_1.Fragment;\nexports.FunctionFragment = abi_1.FunctionFragment;\nexports.Indexed = abi_1.Indexed;\nexports.Interface = abi_1.Interface;\nexports.LogDescription = abi_1.LogDescription;\nexports.ParamType = abi_1.ParamType;\nexports.TransactionDescription = abi_1.TransactionDescription;\n\nvar address_1 = require(\"@ethersproject/address\");\n\nexports.getAddress = address_1.getAddress;\nexports.getCreate2Address = address_1.getCreate2Address;\nexports.getContractAddress = address_1.getContractAddress;\nexports.getIcapAddress = address_1.getIcapAddress;\nexports.isAddress = address_1.isAddress;\n\nvar base64 = __importStar(require(\"@ethersproject/base64\"));\n\nexports.base64 = base64;\n\nvar basex_1 = require(\"@ethersproject/basex\");\n\nexports.base58 = basex_1.Base58;\n\nvar bytes_1 = require(\"@ethersproject/bytes\");\n\nexports.arrayify = bytes_1.arrayify;\nexports.concat = bytes_1.concat;\nexports.hexConcat = bytes_1.hexConcat;\nexports.hexDataSlice = bytes_1.hexDataSlice;\nexports.hexDataLength = bytes_1.hexDataLength;\nexports.hexlify = bytes_1.hexlify;\nexports.hexStripZeros = bytes_1.hexStripZeros;\nexports.hexValue = bytes_1.hexValue;\nexports.hexZeroPad = bytes_1.hexZeroPad;\nexports.isBytes = bytes_1.isBytes;\nexports.isBytesLike = bytes_1.isBytesLike;\nexports.isHexString = bytes_1.isHexString;\nexports.joinSignature = bytes_1.joinSignature;\nexports.zeroPad = bytes_1.zeroPad;\nexports.splitSignature = bytes_1.splitSignature;\nexports.stripZeros = bytes_1.stripZeros;\n\nvar hash_1 = require(\"@ethersproject/hash\");\n\nexports._TypedDataEncoder = hash_1._TypedDataEncoder;\nexports.hashMessage = hash_1.hashMessage;\nexports.id = hash_1.id;\nexports.isValidName = hash_1.isValidName;\nexports.namehash = hash_1.namehash;\n\nvar hdnode_1 = require(\"@ethersproject/hdnode\");\n\nexports.defaultPath = hdnode_1.defaultPath;\nexports.entropyToMnemonic = hdnode_1.entropyToMnemonic;\nexports.HDNode = hdnode_1.HDNode;\nexports.isValidMnemonic = hdnode_1.isValidMnemonic;\nexports.mnemonicToEntropy = hdnode_1.mnemonicToEntropy;\nexports.mnemonicToSeed = hdnode_1.mnemonicToSeed;\n\nvar json_wallets_1 = require(\"@ethersproject/json-wallets\");\n\nexports.getJsonWalletAddress = json_wallets_1.getJsonWalletAddress;\n\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\n\nexports.keccak256 = keccak256_1.keccak256;\n\nvar logger_1 = require(\"@ethersproject/logger\");\n\nexports.Logger = logger_1.Logger;\n\nvar sha2_1 = require(\"@ethersproject/sha2\");\n\nexports.computeHmac = sha2_1.computeHmac;\nexports.ripemd160 = sha2_1.ripemd160;\nexports.sha256 = sha2_1.sha256;\nexports.sha512 = sha2_1.sha512;\n\nvar solidity_1 = require(\"@ethersproject/solidity\");\n\nexports.solidityKeccak256 = solidity_1.keccak256;\nexports.solidityPack = solidity_1.pack;\nexports.soliditySha256 = solidity_1.sha256;\n\nvar random_1 = require(\"@ethersproject/random\");\n\nexports.randomBytes = random_1.randomBytes;\nexports.shuffled = random_1.shuffled;\n\nvar properties_1 = require(\"@ethersproject/properties\");\n\nexports.checkProperties = properties_1.checkProperties;\nexports.deepCopy = properties_1.deepCopy;\nexports.defineReadOnly = properties_1.defineReadOnly;\nexports.getStatic = properties_1.getStatic;\nexports.resolveProperties = properties_1.resolveProperties;\nexports.shallowCopy = properties_1.shallowCopy;\n\nvar RLP = __importStar(require(\"@ethersproject/rlp\"));\n\nexports.RLP = RLP;\n\nvar signing_key_1 = require(\"@ethersproject/signing-key\");\n\nexports.computePublicKey = signing_key_1.computePublicKey;\nexports.recoverPublicKey = signing_key_1.recoverPublicKey;\nexports.SigningKey = signing_key_1.SigningKey;\n\nvar strings_1 = require(\"@ethersproject/strings\");\n\nexports.formatBytes32String = strings_1.formatBytes32String;\nexports.nameprep = strings_1.nameprep;\nexports.parseBytes32String = strings_1.parseBytes32String;\nexports._toEscapedUtf8String = strings_1._toEscapedUtf8String;\nexports.toUtf8Bytes = strings_1.toUtf8Bytes;\nexports.toUtf8CodePoints = strings_1.toUtf8CodePoints;\nexports.toUtf8String = strings_1.toUtf8String;\nexports.Utf8ErrorFuncs = strings_1.Utf8ErrorFuncs;\n\nvar transactions_1 = require(\"@ethersproject/transactions\");\n\nexports.computeAddress = transactions_1.computeAddress;\nexports.parseTransaction = transactions_1.parse;\nexports.recoverAddress = transactions_1.recoverAddress;\nexports.serializeTransaction = transactions_1.serialize;\n\nvar units_1 = require(\"@ethersproject/units\");\n\nexports.commify = units_1.commify;\nexports.formatEther = units_1.formatEther;\nexports.parseEther = units_1.parseEther;\nexports.formatUnits = units_1.formatUnits;\nexports.parseUnits = units_1.parseUnits;\n\nvar wallet_1 = require(\"@ethersproject/wallet\");\n\nexports.verifyMessage = wallet_1.verifyMessage;\nexports.verifyTypedData = wallet_1.verifyTypedData;\n\nvar web_1 = require(\"@ethersproject/web\");\n\nexports._fetchData = web_1._fetchData;\nexports.fetchJson = web_1.fetchJson;\nexports.poll = web_1.poll; ////////////////////////\n// Enums\n\nvar sha2_2 = require(\"@ethersproject/sha2\");\n\nexports.SupportedAlgorithm = sha2_2.SupportedAlgorithm;\n\nvar strings_2 = require(\"@ethersproject/strings\");\n\nexports.UnicodeNormalizationForm = strings_2.UnicodeNormalizationForm;\nexports.Utf8ErrorReason = strings_2.Utf8ErrorReason;","map":{"version":3,"sources":["../src.ts/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar abi_1 = require(\"@ethersproject/abi\");\nexports.AbiCoder = abi_1.AbiCoder;\nexports.checkResultErrors = abi_1.checkResultErrors;\nexports.defaultAbiCoder = abi_1.defaultAbiCoder;\nexports.EventFragment = abi_1.EventFragment;\nexports.FormatTypes = abi_1.FormatTypes;\nexports.Fragment = abi_1.Fragment;\nexports.FunctionFragment = abi_1.FunctionFragment;\nexports.Indexed = abi_1.Indexed;\nexports.Interface = abi_1.Interface;\nexports.LogDescription = abi_1.LogDescription;\nexports.ParamType = abi_1.ParamType;\nexports.TransactionDescription = abi_1.TransactionDescription;\nvar address_1 = require(\"@ethersproject/address\");\nexports.getAddress = address_1.getAddress;\nexports.getCreate2Address = address_1.getCreate2Address;\nexports.getContractAddress = address_1.getContractAddress;\nexports.getIcapAddress = address_1.getIcapAddress;\nexports.isAddress = address_1.isAddress;\nvar base64 = __importStar(require(\"@ethersproject/base64\"));\nexports.base64 = base64;\nvar basex_1 = require(\"@ethersproject/basex\");\nexports.base58 = basex_1.Base58;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nexports.arrayify = bytes_1.arrayify;\nexports.concat = bytes_1.concat;\nexports.hexConcat = bytes_1.hexConcat;\nexports.hexDataSlice = bytes_1.hexDataSlice;\nexports.hexDataLength = bytes_1.hexDataLength;\nexports.hexlify = bytes_1.hexlify;\nexports.hexStripZeros = bytes_1.hexStripZeros;\nexports.hexValue = bytes_1.hexValue;\nexports.hexZeroPad = bytes_1.hexZeroPad;\nexports.isBytes = bytes_1.isBytes;\nexports.isBytesLike = bytes_1.isBytesLike;\nexports.isHexString = bytes_1.isHexString;\nexports.joinSignature = bytes_1.joinSignature;\nexports.zeroPad = bytes_1.zeroPad;\nexports.splitSignature = bytes_1.splitSignature;\nexports.stripZeros = bytes_1.stripZeros;\nvar hash_1 = require(\"@ethersproject/hash\");\nexports._TypedDataEncoder = hash_1._TypedDataEncoder;\nexports.hashMessage = hash_1.hashMessage;\nexports.id = hash_1.id;\nexports.isValidName = hash_1.isValidName;\nexports.namehash = hash_1.namehash;\nvar hdnode_1 = require(\"@ethersproject/hdnode\");\nexports.defaultPath = hdnode_1.defaultPath;\nexports.entropyToMnemonic = hdnode_1.entropyToMnemonic;\nexports.HDNode = hdnode_1.HDNode;\nexports.isValidMnemonic = hdnode_1.isValidMnemonic;\nexports.mnemonicToEntropy = hdnode_1.mnemonicToEntropy;\nexports.mnemonicToSeed = hdnode_1.mnemonicToSeed;\nvar json_wallets_1 = require(\"@ethersproject/json-wallets\");\nexports.getJsonWalletAddress = json_wallets_1.getJsonWalletAddress;\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nexports.keccak256 = keccak256_1.keccak256;\nvar logger_1 = require(\"@ethersproject/logger\");\nexports.Logger = logger_1.Logger;\nvar sha2_1 = require(\"@ethersproject/sha2\");\nexports.computeHmac = sha2_1.computeHmac;\nexports.ripemd160 = sha2_1.ripemd160;\nexports.sha256 = sha2_1.sha256;\nexports.sha512 = sha2_1.sha512;\nvar solidity_1 = require(\"@ethersproject/solidity\");\nexports.solidityKeccak256 = solidity_1.keccak256;\nexports.solidityPack = solidity_1.pack;\nexports.soliditySha256 = solidity_1.sha256;\nvar random_1 = require(\"@ethersproject/random\");\nexports.randomBytes = random_1.randomBytes;\nexports.shuffled = random_1.shuffled;\nvar properties_1 = require(\"@ethersproject/properties\");\nexports.checkProperties = properties_1.checkProperties;\nexports.deepCopy = properties_1.deepCopy;\nexports.defineReadOnly = properties_1.defineReadOnly;\nexports.getStatic = properties_1.getStatic;\nexports.resolveProperties = properties_1.resolveProperties;\nexports.shallowCopy = properties_1.shallowCopy;\nvar RLP = __importStar(require(\"@ethersproject/rlp\"));\nexports.RLP = RLP;\nvar signing_key_1 = require(\"@ethersproject/signing-key\");\nexports.computePublicKey = signing_key_1.computePublicKey;\nexports.recoverPublicKey = signing_key_1.recoverPublicKey;\nexports.SigningKey = signing_key_1.SigningKey;\nvar strings_1 = require(\"@ethersproject/strings\");\nexports.formatBytes32String = strings_1.formatBytes32String;\nexports.nameprep = strings_1.nameprep;\nexports.parseBytes32String = strings_1.parseBytes32String;\nexports._toEscapedUtf8String = strings_1._toEscapedUtf8String;\nexports.toUtf8Bytes = strings_1.toUtf8Bytes;\nexports.toUtf8CodePoints = strings_1.toUtf8CodePoints;\nexports.toUtf8String = strings_1.toUtf8String;\nexports.Utf8ErrorFuncs = strings_1.Utf8ErrorFuncs;\nvar transactions_1 = require(\"@ethersproject/transactions\");\nexports.computeAddress = transactions_1.computeAddress;\nexports.parseTransaction = transactions_1.parse;\nexports.recoverAddress = transactions_1.recoverAddress;\nexports.serializeTransaction = transactions_1.serialize;\nvar units_1 = require(\"@ethersproject/units\");\nexports.commify = units_1.commify;\nexports.formatEther = units_1.formatEther;\nexports.parseEther = units_1.parseEther;\nexports.formatUnits = units_1.formatUnits;\nexports.parseUnits = units_1.parseUnits;\nvar wallet_1 = require(\"@ethersproject/wallet\");\nexports.verifyMessage = wallet_1.verifyMessage;\nexports.verifyTypedData = wallet_1.verifyTypedData;\nvar web_1 = require(\"@ethersproject/web\");\nexports._fetchData = web_1._fetchData;\nexports.fetchJson = web_1.fetchJson;\nexports.poll = web_1.poll;\n////////////////////////\n// Enums\nvar sha2_2 = require(\"@ethersproject/sha2\");\nexports.SupportedAlgorithm = sha2_2.SupportedAlgorithm;\nvar strings_2 = require(\"@ethersproject/strings\");\nexports.UnicodeNormalizationForm = strings_2.UnicodeNormalizationForm;\nexports.Utf8ErrorReason = strings_2.Utf8ErrorReason;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}