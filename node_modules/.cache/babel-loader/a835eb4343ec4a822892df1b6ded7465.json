{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/LanguageSelection/index.tsx\";\nimport React, { useRef } from 'react';\nimport { StyledMenu, MenuFlyout, StyledMenuButton } from '../StyledMenu';\nimport styled from 'styled-components';\nimport { useModalOpen, useToggleModal } from \"../../state/application/hooks\";\nimport { ApplicationModal } from \"../../state/application/actions\";\nimport i18n, { availableLanguages } from '../../i18n';\nimport { useOnClickOutside } from \"../../hooks/useOnClickOutside\";\nconst NarrowMenuFlyout = styled(MenuFlyout)`\n  min-width: 7.125rem;\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    top: -14.25rem;\n  `};\n`;\nexport const ClickableMenuItem = styled.a`\n  flex: 1;\n  padding: 0.5rem 0.5rem;\n  color: ${({\n  theme\n}) => theme.text2};\n  :hover {\n    color: ${({\n  theme\n}) => theme.text1};\n    cursor: pointer;\n    text-decoration: none;\n  }\n  > svg {\n    margin-right: 8px;\n  }\n`;\nconst FlagIcon = styled.img`\n  height: 15px;\n  width: 21px;\n`;\nexport default function LanguageSelection() {\n  const node = useRef();\n  const open = useModalOpen(ApplicationModal.LANGUAGE);\n  const toggle = useToggleModal(ApplicationModal.LANGUAGE);\n  useOnClickOutside(node, open ? toggle : undefined);\n  return /*#__PURE__*/React.createElement(StyledMenu, {\n    ref: node,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledMenuButton, {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    src: `/images/flags/${i18n.language}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), open && /*#__PURE__*/React.createElement(NarrowMenuFlyout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, availableLanguages.map((lang, i) => /*#__PURE__*/React.createElement(ClickableMenuItem, {\n    key: i,\n    onClick: () => {\n      i18n.changeLanguage(lang);\n      toggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    src: `/images/flags/${lang}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), \" \\xA0\", lang.toUpperCase()))));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/LanguageSelection/index.tsx"],"names":["React","useRef","StyledMenu","MenuFlyout","StyledMenuButton","styled","useModalOpen","useToggleModal","ApplicationModal","i18n","availableLanguages","useOnClickOutside","NarrowMenuFlyout","theme","mediaWidth","upToMedium","ClickableMenuItem","a","text2","text1","FlagIcon","img","LanguageSelection","node","open","LANGUAGE","toggle","undefined","language","map","lang","i","changeLanguage","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,gBAAhC,QAAuD,eAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,+BAA3C;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;AACA,OAAOC,IAAP,IAAcC,kBAAd,QAAuC,YAAvC;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,MAAMC,gBAAgB,GAAGP,MAAM,CAACF,UAAD,CAAa;AAC5C;AACA,IAAI,CAAC;AAAEU,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UAAN,CAAiBC,UAAW;AAC/C;AACA,GAAI;AACJ,CALA;AAOA,OAAO,MAAMC,iBAAiB,GAAGX,MAAM,CAACY,CAAE;AAC1C;AACA;AACA,WAAW,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,KAAM;AACtC;AACA,aAAa,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACM,KAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAcP,MAAMC,QAAQ,GAAGf,MAAM,CAACgB,GAAI;AAC5B;AACA;AACA,CAHA;AAKA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,QAAMC,IAAI,GAAGtB,MAAM,EAAnB;AACA,QAAMuB,IAAI,GAAGlB,YAAY,CAACE,gBAAgB,CAACiB,QAAlB,CAAzB;AACA,QAAMC,MAAM,GAAGnB,cAAc,CAACC,gBAAgB,CAACiB,QAAlB,CAA7B;AAEAd,EAAAA,iBAAiB,CAACY,IAAD,EAAOC,IAAI,GAAGE,MAAH,GAAYC,SAAvB,CAAjB;AAEA,sBACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEJ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEG,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAG,iBAAgBjB,IAAI,CAACmB,QAAS,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGJ,IAAI,iBACH,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,kBAAkB,CAACmB,GAAnB,CAAuB,CAACC,IAAD,EAAOC,CAAP,kBACpB,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACbtB,MAAAA,IAAI,CAACuB,cAAL,CAAoBF,IAApB;AACAJ,MAAAA,MAAM;AACP,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAG,iBAAgBI,IAAK,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,WAQGA,IAAI,CAACG,WAAL,EARH,CADH,CADH,CALJ,CADF;AAwBD","sourcesContent":["import React, {useRef} from 'react'\nimport {StyledMenu, MenuFlyout, StyledMenuButton} from '../StyledMenu'\nimport styled from 'styled-components'\nimport {useModalOpen, useToggleModal} from \"../../state/application/hooks\"\nimport {ApplicationModal} from \"../../state/application/actions\"\nimport i18n, {availableLanguages} from '../../i18n'\nimport {useOnClickOutside} from \"../../hooks/useOnClickOutside\";\n\nconst NarrowMenuFlyout = styled(MenuFlyout)`\n  min-width: 7.125rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    top: -14.25rem;\n  `};\n`\n\nexport const ClickableMenuItem = styled.a`\n  flex: 1;\n  padding: 0.5rem 0.5rem;\n  color: ${({ theme }) => theme.text2};\n  :hover {\n    color: ${({ theme }) => theme.text1};\n    cursor: pointer;\n    text-decoration: none;\n  }\n  > svg {\n    margin-right: 8px;\n  }\n`\n\nconst FlagIcon = styled.img`\n  height: 15px;\n  width: 21px;\n`\n\nexport default function LanguageSelection() {\n  const node = useRef<HTMLDivElement>()\n  const open = useModalOpen(ApplicationModal.LANGUAGE)\n  const toggle = useToggleModal(ApplicationModal.LANGUAGE)\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  return (\n    <StyledMenu ref={node as any}>\n      <StyledMenuButton onClick={toggle}>\n        <FlagIcon src={`/images/flags/${i18n.language}.svg`}/>\n      </StyledMenuButton>\n      {open && (\n        <NarrowMenuFlyout>\n          {availableLanguages.map((lang, i) => (\n              <ClickableMenuItem \n                key={i} \n                onClick={() => {\n                  i18n.changeLanguage(lang)\n                  toggle()\n                }}\n              >\n                <FlagIcon src={`/images/flags/${lang}.svg`}/> &nbsp;\n                {lang.toUpperCase()}\n              </ClickableMenuItem>\n            )\n          )}\n        </NarrowMenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}"]},"metadata":{},"sourceType":"module"}