{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/pages/AddLiquidity/index.tsx\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { currencyEquals, CAVAX, WAVAX } from '@pangolindex/sdk';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { Plus } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button';\nimport { BlueCard, LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport Row, { RowBetween, RowFlat } from '../../components/Row';\nimport { ROUTER_ADDRESS } from '../../constants';\nimport { PairState } from '../../data/Reserves';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/mint/actions';\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { TYPE } from '../../theme';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport AppBody from '../AppBody';\nimport { Dots, Wrapper } from '../Pool/styleds';\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom';\nimport { currencyId } from '../../utils/currencyId';\nimport { PoolPriceBar } from './PoolPriceBar';\nimport { ChainId } from '@pangolindex/sdk';\nimport { useTranslation } from 'react-i18next';\nexport default function AddLiquidity({\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB\n    }\n  },\n  history\n}) {\n  var _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$Field$3, _currencies$Field$CUR9, _parsedAmounts$Field$4, _currencies$Field$CUR10, _currencies$Field$CUR11, _currencies$Field$CUR12, _currencies$Field$CUR13, _currencies$Field$CUR14;\n\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const currencyA = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB);\n  const {\n    t\n  } = useTranslation();\n  const oneCurrencyIsWAVAX = Boolean(chainId && (currencyA && currencyEquals(currencyA, WAVAX[chainId]) || currencyB && currencyEquals(currencyB, WAVAX[chainId])));\n  const toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode(); // mint state\n\n  const {\n    independentField,\n    typedValue,\n    otherTypedValue\n  } = useMintState();\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onFieldAInput,\n    onFieldBInput\n  } = useMintActionHandlers(noLiquidity);\n  const isValid = !error; // modal and loading\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n  // txn values\n\n  const deadline = useTransactionDeadline(); // custom from users settings\n\n  const [allowedSlippage] = useUserSlippageTolerance(); // custom from users\n\n  const [txHash, setTxHash] = useState(''); // get formatted amounts\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  }; // get the max amounts user can add\n\n  const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    return { ...accumulator,\n      [field]: maxAmountSpend(currencyBalances[field])\n    };\n  }, {});\n  const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    var _maxAmounts$field, _parsedAmounts$field;\n\n    return { ...accumulator,\n      [field]: (_maxAmounts$field = maxAmounts[field]) === null || _maxAmounts$field === void 0 ? void 0 : _maxAmounts$field.equalTo((_parsedAmounts$field = parsedAmounts[field]) !== null && _parsedAmounts$field !== void 0 ? _parsedAmounts$field : '0')\n    };\n  }, {}); // check whether the user has approved the router on the tokens\n\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], chainId ? ROUTER_ADDRESS[chainId] : ROUTER_ADDRESS[ChainId.AVALANCHE]);\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], chainId ? ROUTER_ADDRESS[chainId] : ROUTER_ADDRESS[ChainId.AVALANCHE]);\n  const addTransaction = useTransactionAdder();\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return;\n    const router = getRouterContract(chainId, library, account);\n    const {\n      [Field.CURRENCY_A]: parsedAmountA,\n      [Field.CURRENCY_B]: parsedAmountB\n    } = parsedAmounts;\n\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return;\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]\n    };\n    let estimate, method, args, value;\n\n    if (currencyA === CAVAX || currencyB === CAVAX) {\n      var _wrappedCurrency$addr, _wrappedCurrency;\n\n      const tokenBIsETH = currencyB === CAVAX;\n      estimate = router.estimateGas.addLiquidityAVAX;\n      method = router.addLiquidityAVAX;\n      args = [(_wrappedCurrency$addr = (_wrappedCurrency = wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)) === null || _wrappedCurrency === void 0 ? void 0 : _wrappedCurrency.address) !== null && _wrappedCurrency$addr !== void 0 ? _wrappedCurrency$addr : '', // token\n      (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n      amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n      amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n      account, deadline.toHexString()];\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString());\n    } else {\n      var _wrappedCurrency$addr2, _wrappedCurrency2, _wrappedCurrency$addr3, _wrappedCurrency3;\n\n      estimate = router.estimateGas.addLiquidity;\n      method = router.addLiquidity;\n      args = [(_wrappedCurrency$addr2 = (_wrappedCurrency2 = wrappedCurrency(currencyA, chainId)) === null || _wrappedCurrency2 === void 0 ? void 0 : _wrappedCurrency2.address) !== null && _wrappedCurrency$addr2 !== void 0 ? _wrappedCurrency$addr2 : '', (_wrappedCurrency$addr3 = (_wrappedCurrency3 = wrappedCurrency(currencyB, chainId)) === null || _wrappedCurrency3 === void 0 ? void 0 : _wrappedCurrency3.address) !== null && _wrappedCurrency$addr3 !== void 0 ? _wrappedCurrency$addr3 : '', parsedAmountA.raw.toString(), parsedAmountB.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n      value = null;\n    }\n\n    setAttemptingTxn(true);\n    await estimate(...args, value ? {\n      value\n    } : {}).then(estimatedGasLimit => method(...args, { ...(value ? {\n        value\n      } : {}),\n      gasLimit: calculateGasMargin(estimatedGasLimit)\n    }).then(response => {\n      var _parsedAmounts$Field$, _currencies$Field$CUR, _parsedAmounts$Field$2, _currencies$Field$CUR2, _currencies$Field$CUR3, _currencies$Field$CUR4;\n\n      setAttemptingTxn(false);\n      addTransaction(response, {\n        summary: 'Add ' + ((_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(3)) + ' ' + ((_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol) + ' and ' + ((_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(3)) + ' ' + ((_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol)\n      });\n      setTxHash(response.hash);\n      ReactGA.event({\n        category: 'Liquidity',\n        action: 'Add',\n        label: [(_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol, (_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol].join('/')\n      });\n    })).catch(error => {\n      setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.error(error);\n      }\n    });\n  }\n\n  const modalHeader = () => {\n    var _currencies$Field$CUR5, _currencies$Field$CUR6, _currencies$Field$CUR7, _currencies$Field$CUR8;\n\n    return noLiquidity ? /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LightCard, {\n      mt: \"20px\",\n      borderRadius: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(RowFlat, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"48px\",\n      fontWeight: 500,\n      lineHeight: \"42px\",\n      marginRight: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, ((_currencies$Field$CUR5 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol) + '/' + ((_currencies$Field$CUR6 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol)), /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n      currency0: currencies[Field.CURRENCY_A],\n      currency1: currencies[Field.CURRENCY_B],\n      size: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    })))) : /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RowFlat, {\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"48px\",\n      fontWeight: 500,\n      lineHeight: \"42px\",\n      marginRight: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)), /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n      currency0: currencies[Field.CURRENCY_A],\n      currency1: currencies[Field.CURRENCY_B],\n      size: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, ((_currencies$Field$CUR7 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR7 === void 0 ? void 0 : _currencies$Field$CUR7.symbol) + '/' + ((_currencies$Field$CUR8 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR8 === void 0 ? void 0 : _currencies$Field$CUR8.symbol) + t('addLiquidity.poolTokens'))), /*#__PURE__*/React.createElement(TYPE.italic, {\n      fontSize: 12,\n      textAlign: \"left\",\n      padding: '8px 0 0 0 ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, t('addLiquidity.outputEstimated', {\n      allowedSlippage: allowedSlippage / 100\n    })));\n  };\n\n  const modalBottom = () => {\n    return /*#__PURE__*/React.createElement(ConfirmAddModalBottom, {\n      price: price,\n      currencies: currencies,\n      parsedAmounts: parsedAmounts,\n      noLiquidity: noLiquidity,\n      onAdd: onAdd,\n      poolTokenPercentage: poolTokenPercentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const pendingText = `Supplying ${(_parsedAmounts$Field$3 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$3 === void 0 ? void 0 : _parsedAmounts$Field$3.toSignificant(6)} ${(_currencies$Field$CUR9 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR9 === void 0 ? void 0 : _currencies$Field$CUR9.symbol} and ${(_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)} ${(_currencies$Field$CUR10 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR10 === void 0 ? void 0 : _currencies$Field$CUR10.symbol}`;\n  const handleCurrencyASelect = useCallback(currencyA => {\n    const newCurrencyIdA = currencyId(currencyA);\n\n    if (newCurrencyIdA === currencyIdB) {\n      history.push(`/add/${currencyIdB}/${currencyIdA}`);\n    } else {\n      history.push(`/add/${newCurrencyIdA}/${currencyIdB}`);\n    }\n  }, [currencyIdB, history, currencyIdA]);\n  const handleCurrencyBSelect = useCallback(currencyB => {\n    const newCurrencyIdB = currencyId(currencyB);\n\n    if (currencyIdA === newCurrencyIdB) {\n      if (currencyIdB) {\n        history.push(`/add/${currencyIdB}/${newCurrencyIdB}`);\n      } else {\n        history.push(`/add/${newCurrencyIdB}`);\n      }\n    } else {\n      history.push(`/add/${currencyIdA ? currencyIdA : 'AVAX'}/${newCurrencyIdB}`);\n    }\n  }, [currencyIdA, history, currencyIdB]);\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onFieldAInput('');\n    }\n\n    setTxHash('');\n  }, [onFieldAInput, txHash]);\n  const isCreate = history.location.pathname.includes('/create');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddRemoveTabs, {\n    creating: isCreate,\n    adding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransactionConfirmationModal, {\n    isOpen: showConfirm,\n    onDismiss: handleDismissConfirmation,\n    attemptingTxn: attemptingTxn,\n    hash: txHash,\n    content: () => /*#__PURE__*/React.createElement(ConfirmationModalContent, {\n      title: noLiquidity ? t('addLiquidity.creatingPool') : t('addLiquidity.willReceive'),\n      onDismiss: handleDismissConfirmation,\n      topContent: modalHeader,\n      bottomContent: modalBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    }),\n    pendingText: pendingText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, noLiquidity || isCreate && /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BlueCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 600,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 23\n    }\n  }, t('addLiquidity.firstLP')), /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 400,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 23\n    }\n  }, t('addLiquidity.ratioTokens')), /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 400,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 23\n    }\n  }, t('addLiquidity.happyRate'))))), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.CURRENCY_A],\n    onUserInput: onFieldAInput,\n    onMax: () => {\n      var _maxAmounts$Field$CUR, _maxAmounts$Field$CUR2;\n\n      onFieldAInput((_maxAmounts$Field$CUR = (_maxAmounts$Field$CUR2 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR2 === void 0 ? void 0 : _maxAmounts$Field$CUR2.toExact()) !== null && _maxAmounts$Field$CUR !== void 0 ? _maxAmounts$Field$CUR : '');\n    },\n    onCurrencySelect: handleCurrencyASelect,\n    showMaxButton: !atMaxAmounts[Field.CURRENCY_A],\n    currency: currencies[Field.CURRENCY_A],\n    id: \"add-liquidity-input-tokena\",\n    showCommonBases: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    size: \"16\",\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.CURRENCY_B],\n    onUserInput: onFieldBInput,\n    onCurrencySelect: handleCurrencyBSelect,\n    onMax: () => {\n      var _maxAmounts$Field$CUR3, _maxAmounts$Field$CUR4;\n\n      onFieldBInput((_maxAmounts$Field$CUR3 = (_maxAmounts$Field$CUR4 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR4 === void 0 ? void 0 : _maxAmounts$Field$CUR4.toExact()) !== null && _maxAmounts$Field$CUR3 !== void 0 ? _maxAmounts$Field$CUR3 : '');\n    },\n    showMaxButton: !atMaxAmounts[Field.CURRENCY_B],\n    currency: currencies[Field.CURRENCY_B],\n    id: \"add-liquidity-input-tokenb\",\n    showCommonBases: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }), currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"0px\",\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    padding: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    fontWeight: 500,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 21\n    }\n  }, noLiquidity ? t('addLiquidity.initialPrices') : t('addLiquidity.prices'), \" \", t('addLiquidity.poolShare'))), ' ', /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"1rem\",\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PoolPriceBar, {\n    currencies: currencies,\n    poolTokenPercentage: poolTokenPercentage,\n    noLiquidity: noLiquidity,\n    price: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 21\n    }\n  })))), !account ? /*#__PURE__*/React.createElement(ButtonLight, {\n    onClick: toggleWalletModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, t('addLiquidity.connectWallet')) : /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 15\n    }\n  }, (approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 21\n    }\n  }, approvalA !== ApprovalState.APPROVED && /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: approveACallback,\n    disabled: approvalA === ApprovalState.PENDING,\n    width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 25\n    }\n  }, approvalA === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 29\n    }\n  }, \"Approving \", (_currencies$Field$CUR11 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR11 === void 0 ? void 0 : _currencies$Field$CUR11.symbol) : t('addLiquidity.approve') + ((_currencies$Field$CUR12 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR12 === void 0 ? void 0 : _currencies$Field$CUR12.symbol)), approvalB !== ApprovalState.APPROVED && /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: approveBCallback,\n    disabled: approvalB === ApprovalState.PENDING,\n    width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  }, approvalB === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 29\n    }\n  }, \"Approving \", (_currencies$Field$CUR13 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR13 === void 0 ? void 0 : _currencies$Field$CUR13.symbol) : t('addLiquidity.approve') + ((_currencies$Field$CUR14 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR14 === void 0 ? void 0 : _currencies$Field$CUR14.symbol))), /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: () => {\n      expertMode ? onAdd() : setShowConfirm(true);\n    },\n    disabled: !isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED,\n    error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 20,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 19\n    }\n  }, error !== null && error !== void 0 ? error : t('addLiquidity.supply'))))))), pair && !noLiquidity && pairState !== PairState.INVALID ? /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      minWidth: '20rem',\n      width: '100%',\n      maxWidth: '400px',\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MinimalPositionCard, {\n    showUnwrapped: oneCurrencyIsWAVAX,\n    pair: pair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 11\n    }\n  })) : null);\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/pages/AddLiquidity/index.tsx"],"names":["BigNumber","currencyEquals","CAVAX","WAVAX","React","useCallback","useContext","useState","Plus","ReactGA","Text","ThemeContext","ButtonError","ButtonLight","ButtonPrimary","BlueCard","LightCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","Row","RowBetween","RowFlat","ROUTER_ADDRESS","PairState","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","useTransactionDeadline","useWalletModalToggle","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","useUserSlippageTolerance","TYPE","calculateGasMargin","calculateSlippageAmount","getRouterContract","maxAmountSpend","wrappedCurrency","AppBody","Dots","Wrapper","ConfirmAddModalBottom","currencyId","PoolPriceBar","ChainId","useTranslation","AddLiquidity","match","params","currencyIdA","currencyIdB","history","account","chainId","library","theme","currencyA","currencyB","t","oneCurrencyIsWAVAX","Boolean","toggleWalletModal","expertMode","independentField","typedValue","otherTypedValue","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","undefined","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","equalTo","approvalA","approveACallback","AVALANCHE","approvalB","approveBCallback","addTransaction","onAdd","router","parsedAmountA","parsedAmountB","amountsMin","estimate","method","args","value","tokenBIsETH","estimateGas","addLiquidityAVAX","address","raw","toString","toHexString","from","addLiquidity","then","estimatedGasLimit","gasLimit","response","summary","symbol","hash","event","category","action","label","join","catch","code","console","modalHeader","marginTop","modalBottom","pendingText","handleCurrencyASelect","newCurrencyIdA","push","handleCurrencyBSelect","newCurrencyIdB","handleDismissConfirmation","isCreate","location","pathname","includes","toExact","text2","INVALID","NOT_APPROVED","PENDING","APPROVED","minWidth","width","maxWidth"],"mappings":";AAAA,SAASA,SAAT,QAA0B,0BAA1B;AAEA,SAAmBC,cAAnB,EAAmCC,KAAnC,EAAuDC,KAAvD,QAAoE,kBAApE;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,aAAnC,QAAwD,yBAAxD;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,yBAAzC;AACA,OAAOC,4BAAP,IAAuCC,wBAAvC,QAAuE,+CAAvE;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,OAAOC,GAAP,IAAcC,UAAd,EAA0BC,OAA1B,QAAyC,sBAAzC;AAEA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,gCAAlD;AACA,OAAOC,sBAAP,MAAmC,oCAAnC;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,YAApD,QAAwE,wBAAxE;AAEA,SAASC,mBAAT,QAAoC,gCAApC;AACA,SAASC,eAAT,EAA0BC,wBAA1B,QAA0D,wBAA1D;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,EAAsDC,iBAAtD,QAA+E,aAA/E;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,iBAA9B;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf;AADH,GAD4B;AAInCC,EAAAA;AAJmC,CAAtB,EAKyD;AAAA;;AACtE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAAgCnC,kBAAkB,EAAxD;AACA,QAAMoC,KAAK,GAAG5D,UAAU,CAACK,YAAD,CAAxB;AAEA,QAAMwD,SAAS,GAAGpC,WAAW,CAAC6B,WAAD,CAA7B;AACA,QAAMQ,SAAS,GAAGrC,WAAW,CAAC8B,WAAD,CAA7B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAQb,cAAc,EAA5B;AAEA,QAAMc,kBAAkB,GAAGC,OAAO,CAChCP,OAAO,KACHG,SAAS,IAAIlE,cAAc,CAACkE,SAAD,EAAYhE,KAAK,CAAC6D,OAAD,CAAjB,CAA5B,IACEI,SAAS,IAAInE,cAAc,CAACmE,SAAD,EAAYjE,KAAK,CAAC6D,OAAD,CAAjB,CAFzB,CADyB,CAAlC;AAMA,QAAMQ,iBAAiB,GAAGrC,oBAAoB,EAA9C,CAdsE,CAcrB;;AAEjD,QAAMsC,UAAU,GAAGhC,eAAe,EAAlC,CAhBsE,CAkBtE;;AACA,QAAM;AAAEiC,IAAAA,gBAAF;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA;AAAhC,MAAoDrC,YAAY,EAAtE;AACA,QAAM;AACJsC,IAAAA,cADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,gBALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,KAPI;AAQJC,IAAAA,WARI;AASJC,IAAAA,eATI;AAUJC,IAAAA,mBAVI;AAWJC,IAAAA;AAXI,MAYFlD,kBAAkB,CAAC8B,SAAD,aAACA,SAAD,cAACA,SAAD,GAAcqB,SAAd,EAAyBpB,SAAzB,aAAyBA,SAAzB,cAAyBA,SAAzB,GAAsCoB,SAAtC,CAZtB;AAaA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAmCpD,qBAAqB,CAAC8C,WAAD,CAA9D;AAEA,QAAMO,OAAO,GAAG,CAACJ,KAAjB,CAnCsE,CAqCtE;;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCtF,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM,CAACuF,aAAD,EAAgBC,gBAAhB,IAAoCxF,QAAQ,CAAU,KAAV,CAAlD,CAvCsE,CAuCH;AAEnE;;AACA,QAAMyF,QAAQ,GAAG9D,sBAAsB,EAAvC,CA1CsE,CA0C5B;;AAC1C,QAAM,CAAC+D,eAAD,IAAoBvD,wBAAwB,EAAlD,CA3CsE,CA2CjB;;AACrD,QAAM,CAACwD,MAAD,EAASC,SAAT,IAAsB5F,QAAQ,CAAS,EAAT,CAApC,CA5CsE,CA8CtE;;AACA,QAAM6F,gBAAgB,GAAG;AACvB,KAAC1B,gBAAD,GAAoBC,UADG;AAEvB,KAACE,cAAD,GAAkBO,WAAW,GAAGR,eAAH,sDAAqBM,aAAa,CAACL,cAAD,CAAlC,2DAAqB,uBAA+BwB,aAA/B,CAA6C,CAA7C,CAArB,yEAAwE;AAF9E,GAAzB,CA/CsE,CAoDtE;;AACA,QAAMC,UAA8C,GAAG,CAAClE,KAAK,CAACmE,UAAP,EAAmBnE,KAAK,CAACoE,UAAzB,EAAqCC,MAArC,CACrD,CAACC,WAAD,EAAcC,KAAd,KAAwB;AACtB,WAAO,EACL,GAAGD,WADE;AAEL,OAACC,KAAD,GAAS5D,cAAc,CAACkC,gBAAgB,CAAC0B,KAAD,CAAjB;AAFlB,KAAP;AAID,GANoD,EAOrD,EAPqD,CAAvD;AAUA,QAAMC,YAAgD,GAAG,CAACxE,KAAK,CAACmE,UAAP,EAAmBnE,KAAK,CAACoE,UAAzB,EAAqCC,MAArC,CACvD,CAACC,WAAD,EAAcC,KAAd,KAAwB;AAAA;;AACtB,WAAO,EACL,GAAGD,WADE;AAEL,OAACC,KAAD,wBAASL,UAAU,CAACK,KAAD,CAAnB,sDAAS,kBAAmBE,OAAnB,yBAA2B3B,aAAa,CAACyB,KAAD,CAAxC,uEAAmD,GAAnD;AAFJ,KAAP;AAID,GANsD,EAOvD,EAPuD,CAAzD,CA/DsE,CAyEtE;;AACA,QAAM,CAACG,SAAD,EAAYC,gBAAZ,IAAgC9E,kBAAkB,CACtDiD,aAAa,CAAC9C,KAAK,CAACmE,UAAP,CADyC,EAEtDvC,OAAO,GAAGpC,cAAc,CAACoC,OAAD,CAAjB,GAA6BpC,cAAc,CAAC2B,OAAO,CAACyD,SAAT,CAFI,CAAxD;AAIA,QAAM,CAACC,SAAD,EAAYC,gBAAZ,IAAgCjF,kBAAkB,CACtDiD,aAAa,CAAC9C,KAAK,CAACoE,UAAP,CADyC,EAEtDxC,OAAO,GAAGpC,cAAc,CAACoC,OAAD,CAAjB,GAA6BpC,cAAc,CAAC2B,OAAO,CAACyD,SAAT,CAFI,CAAxD;AAKA,QAAMG,cAAc,GAAG3E,mBAAmB,EAA1C;;AAEA,iBAAe4E,KAAf,GAAuB;AACrB,QAAI,CAACpD,OAAD,IAAY,CAACC,OAAb,IAAwB,CAACF,OAA7B,EAAsC;AACtC,UAAMsD,MAAM,GAAGvE,iBAAiB,CAACkB,OAAD,EAAUC,OAAV,EAAmBF,OAAnB,CAAhC;AAEA,UAAM;AAAE,OAAC3B,KAAK,CAACmE,UAAP,GAAoBe,aAAtB;AAAqC,OAAClF,KAAK,CAACoE,UAAP,GAAoBe;AAAzD,QAA2ErC,aAAjF;;AACA,QAAI,CAACoC,aAAD,IAAkB,CAACC,aAAnB,IAAoC,CAACpD,SAArC,IAAkD,CAACC,SAAnD,IAAgE,CAAC4B,QAArE,EAA+E;AAC7E;AACD;;AAED,UAAMwB,UAAU,GAAG;AACjB,OAACpF,KAAK,CAACmE,UAAP,GAAoB1D,uBAAuB,CAACyE,aAAD,EAAgBlC,WAAW,GAAG,CAAH,GAAOa,eAAlC,CAAvB,CAA0E,CAA1E,CADH;AAEjB,OAAC7D,KAAK,CAACoE,UAAP,GAAoB3D,uBAAuB,CAAC0E,aAAD,EAAgBnC,WAAW,GAAG,CAAH,GAAOa,eAAlC,CAAvB,CAA0E,CAA1E;AAFH,KAAnB;AAKA,QAAIwB,QAAJ,EACEC,MADF,EAEEC,IAFF,EAGEC,KAHF;;AAIA,QAAIzD,SAAS,KAAKjE,KAAd,IAAuBkE,SAAS,KAAKlE,KAAzC,EAAgD;AAAA;;AAC9C,YAAM2H,WAAW,GAAGzD,SAAS,KAAKlE,KAAlC;AACAuH,MAAAA,QAAQ,GAAGJ,MAAM,CAACS,WAAP,CAAmBC,gBAA9B;AACAL,MAAAA,MAAM,GAAGL,MAAM,CAACU,gBAAhB;AACAJ,MAAAA,IAAI,GAAG,8CACL3E,eAAe,CAAC6E,WAAW,GAAG1D,SAAH,GAAeC,SAA3B,EAAsCJ,OAAtC,CADV,qDACL,iBAA+DgE,OAD1D,yEACqE,EADrE,EACyE;AAC9E,OAACH,WAAW,GAAGP,aAAH,GAAmBC,aAA/B,EAA8CU,GAA9C,CAAkDC,QAAlD,EAFK,EAEyD;AAC9DV,MAAAA,UAAU,CAACK,WAAW,GAAGzF,KAAK,CAACmE,UAAT,GAAsBnE,KAAK,CAACoE,UAAxC,CAAV,CAA8D0B,QAA9D,EAHK,EAGqE;AAC1EV,MAAAA,UAAU,CAACK,WAAW,GAAGzF,KAAK,CAACoE,UAAT,GAAsBpE,KAAK,CAACmE,UAAxC,CAAV,CAA8D2B,QAA9D,EAJK,EAIqE;AAC1EnE,MAAAA,OALK,EAMLiC,QAAQ,CAACmC,WAAT,EANK,CAAP;AAQAP,MAAAA,KAAK,GAAG5H,SAAS,CAACoI,IAAV,CAAe,CAACP,WAAW,GAAGN,aAAH,GAAmBD,aAA/B,EAA8CW,GAA9C,CAAkDC,QAAlD,EAAf,CAAR;AACD,KAbD,MAaO;AAAA;;AACLT,MAAAA,QAAQ,GAAGJ,MAAM,CAACS,WAAP,CAAmBO,YAA9B;AACAX,MAAAA,MAAM,GAAGL,MAAM,CAACgB,YAAhB;AACAV,MAAAA,IAAI,GAAG,gDACL3E,eAAe,CAACmB,SAAD,EAAYH,OAAZ,CADV,sDACL,kBAAqCgE,OADhC,2EAC2C,EAD3C,iDAELhF,eAAe,CAACoB,SAAD,EAAYJ,OAAZ,CAFV,sDAEL,kBAAqCgE,OAFhC,2EAE2C,EAF3C,EAGLV,aAAa,CAACW,GAAd,CAAkBC,QAAlB,EAHK,EAILX,aAAa,CAACU,GAAd,CAAkBC,QAAlB,EAJK,EAKLV,UAAU,CAACpF,KAAK,CAACmE,UAAP,CAAV,CAA6B2B,QAA7B,EALK,EAMLV,UAAU,CAACpF,KAAK,CAACoE,UAAP,CAAV,CAA6B0B,QAA7B,EANK,EAOLnE,OAPK,EAQLiC,QAAQ,CAACmC,WAAT,EARK,CAAP;AAUAP,MAAAA,KAAK,GAAG,IAAR;AACD;;AAED7B,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,UAAM0B,QAAQ,CAAC,GAAGE,IAAJ,EAAUC,KAAK,GAAG;AAAEA,MAAAA;AAAF,KAAH,GAAe,EAA9B,CAAR,CACHU,IADG,CACEC,iBAAiB,IACrBb,MAAM,CAAC,GAAGC,IAAJ,EAAU,EACd,IAAIC,KAAK,GAAG;AAAEA,QAAAA;AAAF,OAAH,GAAe,EAAxB,CADc;AAEdY,MAAAA,QAAQ,EAAE5F,kBAAkB,CAAC2F,iBAAD;AAFd,KAAV,CAAN,CAGGD,IAHH,CAGQG,QAAQ,IAAI;AAAA;;AAClB1C,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAEAoB,MAAAA,cAAc,CAACsB,QAAD,EAAW;AACvBC,QAAAA,OAAO,EACL,mCACAxD,aAAa,CAAC9C,KAAK,CAACmE,UAAP,CADb,0DACA,sBAAiCF,aAAjC,CAA+C,CAA/C,CADA,IAEA,GAFA,6BAGAvB,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CAHV,0DAGA,sBAA8BoC,MAH9B,IAIA,OAJA,8BAKAzD,aAAa,CAAC9C,KAAK,CAACoE,UAAP,CALb,2DAKA,uBAAiCH,aAAjC,CAA+C,CAA/C,CALA,IAMA,GANA,8BAOAvB,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CAPV,2DAOA,uBAA8BmC,MAP9B;AAFqB,OAAX,CAAd;AAYAxC,MAAAA,SAAS,CAACsC,QAAQ,CAACG,IAAV,CAAT;AAEAnI,MAAAA,OAAO,CAACoI,KAAR,CAAc;AACZC,QAAAA,QAAQ,EAAE,WADE;AAEZC,QAAAA,MAAM,EAAE,KAFI;AAGZC,QAAAA,KAAK,EAAE,2BAAClE,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CAAX,2DAAC,uBAA8BoC,MAA/B,4BAAuC7D,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CAAjD,2DAAuC,uBAA8BmC,MAArE,EAA6EM,IAA7E,CAAkF,GAAlF;AAHK,OAAd;AAKD,KAzBD,CAFE,EA6BHC,KA7BG,CA6BG3D,KAAK,IAAI;AACdQ,MAAAA,gBAAgB,CAAC,KAAD,CAAhB,CADc,CAEd;;AACA,UAAI,CAAAR,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAE4D,IAAP,MAAgB,IAApB,EAA0B;AACxBC,QAAAA,OAAO,CAAC7D,KAAR,CAAcA,KAAd;AACD;AACF,KAnCG,CAAN;AAoCD;;AAED,QAAM8D,WAAW,GAAG,MAAM;AAAA;;AACxB,WAAOjE,WAAW,gBAChB,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,MAAd;AAAqB,MAAA,YAAY,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,MAAf;AAAsB,MAAA,UAAU,EAAE,GAAlC;AAAuC,MAAA,UAAU,EAAC,MAAlD;AAAyD,MAAA,WAAW,EAAE,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,2BAAAN,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CAAV,kFAA8BoC,MAA9B,IAAuC,GAAvC,8BAA6C7D,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CAAvD,2DAA6C,uBAA8BmC,MAA3E,CADH,CADF,eAIE,oBAAC,kBAAD;AACE,MAAA,SAAS,EAAE7D,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CADvB;AAEE,MAAA,SAAS,EAAEzB,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CAFvB;AAGE,MAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF,CADgB,gBAgBhB,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAE8C,QAAAA,SAAS,EAAE;AAAb,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,MAAf;AAAsB,MAAA,UAAU,EAAE,GAAlC;AAAuC,MAAA,UAAU,EAAC,MAAlD;AAAyD,MAAA,WAAW,EAAE,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjE,eADH,aACGA,eADH,uBACGA,eAAe,CAAEgB,aAAjB,CAA+B,CAA/B,CADH,CADF,eAIE,oBAAC,kBAAD;AACE,MAAA,SAAS,EAAEvB,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CADvB;AAEE,MAAA,SAAS,EAAEzB,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CAFvB;AAGE,MAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,eAWE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,2BAAA1B,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CAAV,kFAA8BoC,MAA9B,IAAuC,GAAvC,8BAA6C7D,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CAAvD,2DAA6C,uBAA8BmC,MAA3E,IAAoFtE,CAAC,CAAC,yBAAD,CADxF,CADF,CAXF,eAgBE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,QAAQ,EAAE,EAAvB;AAA2B,MAAA,SAAS,EAAC,MAArC;AAA4C,MAAA,OAAO,EAAE,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CAAC,CAAC,8BAAD,EAAiC;AAAE4B,MAAAA,eAAe,EAAEA,eAAe,GAAG;AAArC,KAAjC,CADJ,CAhBF,CAhBF;AAqCD,GAtCD;;AAwCA,QAAMsD,WAAW,GAAG,MAAM;AACxB,wBACE,oBAAC,qBAAD;AACE,MAAA,KAAK,EAAEpE,KADT;AAEE,MAAA,UAAU,EAAEL,UAFd;AAGE,MAAA,aAAa,EAAEI,aAHjB;AAIE,MAAA,WAAW,EAAEE,WAJf;AAKE,MAAA,KAAK,EAAEgC,KALT;AAME,MAAA,mBAAmB,EAAE9B,mBANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXD;;AAaA,QAAMkE,WAAW,GAAI,aAAD,0BAAatE,aAAa,CAAC9C,KAAK,CAACmE,UAAP,CAA1B,2DAAa,uBAAiCF,aAAjC,CAA+C,CAA/C,CAAkD,IAA/D,0BAClBvB,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CADQ,2DAClB,uBAA8BoC,MAC/B,QAFmB,0BAEZzD,aAAa,CAAC9C,KAAK,CAACoE,UAAP,CAFD,2DAEZ,uBAAiCH,aAAjC,CAA+C,CAA/C,CAAkD,IAFtC,2BAEyCvB,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CAFnD,4DAEyC,wBAA8BmC,MAAO,EAFlG;AAIA,QAAMc,qBAAqB,GAAGpJ,WAAW,CACtC8D,SAAD,IAAyB;AACvB,UAAMuF,cAAc,GAAGrG,UAAU,CAACc,SAAD,CAAjC;;AACA,QAAIuF,cAAc,KAAK7F,WAAvB,EAAoC;AAClCC,MAAAA,OAAO,CAAC6F,IAAR,CAAc,QAAO9F,WAAY,IAAGD,WAAY,EAAhD;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAAC6F,IAAR,CAAc,QAAOD,cAAe,IAAG7F,WAAY,EAAnD;AACD;AACF,GARsC,EASvC,CAACA,WAAD,EAAcC,OAAd,EAAuBF,WAAvB,CATuC,CAAzC;AAWA,QAAMgG,qBAAqB,GAAGvJ,WAAW,CACtC+D,SAAD,IAAyB;AACvB,UAAMyF,cAAc,GAAGxG,UAAU,CAACe,SAAD,CAAjC;;AACA,QAAIR,WAAW,KAAKiG,cAApB,EAAoC;AAClC,UAAIhG,WAAJ,EAAiB;AACfC,QAAAA,OAAO,CAAC6F,IAAR,CAAc,QAAO9F,WAAY,IAAGgG,cAAe,EAAnD;AACD,OAFD,MAEO;AACL/F,QAAAA,OAAO,CAAC6F,IAAR,CAAc,QAAOE,cAAe,EAApC;AACD;AACF,KAND,MAMO;AACL/F,MAAAA,OAAO,CAAC6F,IAAR,CAAc,QAAO/F,WAAW,GAAGA,WAAH,GAAiB,MAAO,IAAGiG,cAAe,EAA1E;AACD;AACF,GAZsC,EAavC,CAACjG,WAAD,EAAcE,OAAd,EAAuBD,WAAvB,CAbuC,CAAzC;AAgBA,QAAMiG,yBAAyB,GAAGzJ,WAAW,CAAC,MAAM;AAClDwF,IAAAA,cAAc,CAAC,KAAD,CAAd,CADkD,CAElD;;AACA,QAAIK,MAAJ,EAAY;AACVT,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD;;AACDU,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAP4C,EAO1C,CAACV,aAAD,EAAgBS,MAAhB,CAP0C,CAA7C;AASA,QAAM6D,QAAQ,GAAGjG,OAAO,CAACkG,QAAR,CAAiBC,QAAjB,CAA0BC,QAA1B,CAAmC,SAAnC,CAAjB;AAEA,sBACE,uDACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEH,QAAzB;AAAmC,IAAA,MAAM,EAAE,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,4BAAD;AACE,IAAA,MAAM,EAAEnE,WADV;AAEE,IAAA,SAAS,EAAEkE,yBAFb;AAGE,IAAA,aAAa,EAAEhE,aAHjB;AAIE,IAAA,IAAI,EAAEI,MAJR;AAKE,IAAA,OAAO,EAAE,mBACP,oBAAC,wBAAD;AACE,MAAA,KAAK,EAAEd,WAAW,GAAGf,CAAC,CAAC,2BAAD,CAAJ,GAAoCA,CAAC,CAAC,0BAAD,CADzD;AAEE,MAAA,SAAS,EAAEyF,yBAFb;AAGE,MAAA,UAAU,EAAET,WAHd;AAIE,MAAA,aAAa,EAAEE,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ;AAaE,IAAA,WAAW,EAAEC,WAbf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAgBE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpE,WAAW,IACT2E,QAAQ,iBACP,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAE,GAAvB;AAA4B,IAAA,KAAK,EAAE,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1F,CAAC,CAAC,sBAAD,CADJ,CADF,eAIE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAE,GAAvB;AAA4B,IAAA,KAAK,EAAE,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,CAAC,CAAC,0BAAD,CADJ,CAJF,eAOE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAE,GAAvB;AAA4B,IAAA,KAAK,EAAE,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,CAAC,CAAC,wBAAD,CADJ,CAPF,CADF,CADF,CAHN,eAmBE,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAE+B,gBAAgB,CAAChE,KAAK,CAACmE,UAAP,CADzB;AAEE,IAAA,WAAW,EAAEd,aAFf;AAGE,IAAA,KAAK,EAAE,MAAM;AAAA;;AACXA,MAAAA,aAAa,oDAACa,UAAU,CAAClE,KAAK,CAACmE,UAAP,CAAX,2DAAC,uBAA8B4D,OAA9B,EAAD,yEAA4C,EAA5C,CAAb;AACD,KALH;AAME,IAAA,gBAAgB,EAAEV,qBANpB;AAOE,IAAA,aAAa,EAAE,CAAC7C,YAAY,CAACxE,KAAK,CAACmE,UAAP,CAP9B;AAQE,IAAA,QAAQ,EAAEzB,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CARtB;AASE,IAAA,EAAE,EAAC,4BATL;AAUE,IAAA,eAAe,MAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,eA+BE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAErC,KAAK,CAACkG,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/BF,eAkCE,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAEhE,gBAAgB,CAAChE,KAAK,CAACoE,UAAP,CADzB;AAEE,IAAA,WAAW,EAAEd,aAFf;AAGE,IAAA,gBAAgB,EAAEkE,qBAHpB;AAIE,IAAA,KAAK,EAAE,MAAM;AAAA;;AACXlE,MAAAA,aAAa,qDAACY,UAAU,CAAClE,KAAK,CAACoE,UAAP,CAAX,2DAAC,uBAA8B2D,OAA9B,EAAD,2EAA4C,EAA5C,CAAb;AACD,KANH;AAOE,IAAA,aAAa,EAAE,CAACvD,YAAY,CAACxE,KAAK,CAACoE,UAAP,CAP9B;AAQE,IAAA,QAAQ,EAAE1B,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CARtB;AASE,IAAA,EAAE,EAAC,4BATL;AAUE,IAAA,eAAe,MAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,EA8CG1B,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CAAV,IAAgCzB,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CAA1C,IAAgExB,SAAS,KAAKnD,SAAS,CAACwI,OAAxF,iBACC,uDACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,KAAnB;AAAyB,IAAA,YAAY,EAAE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,SAAN;AAAgB,IAAA,UAAU,EAAE,GAA5B;AAAiC,IAAA,QAAQ,EAAE,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjF,WAAW,GAAGf,CAAC,CAAC,4BAAD,CAAJ,GAAqCA,CAAC,CAAC,qBAAD,CADpD,OAC8EA,CAAC,CAAC,wBAAD,CAD/E,CADF,CADF,EAKgB,GALhB,eAME,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,MAAnB;AAA0B,IAAA,YAAY,EAAE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,UAAU,EAAES,UADd;AAEE,IAAA,mBAAmB,EAAEQ,mBAFvB;AAGE,IAAA,WAAW,EAAEF,WAHf;AAIE,IAAA,KAAK,EAAED,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF,CA/CJ,EAkEG,CAACpB,OAAD,gBACC,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAES,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CH,CAAC,CAAC,4BAAD,CAA3C,CADD,gBAGC,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACyC,SAAS,KAAK9E,aAAa,CAACsI,YAA5B,IACAxD,SAAS,KAAK9E,aAAa,CAACuI,OAD5B,IAEAtD,SAAS,KAAKjF,aAAa,CAACsI,YAF5B,IAGArD,SAAS,KAAKjF,aAAa,CAACuI,OAH7B,KAIC5E,OAJD,iBAKG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmB,SAAS,KAAK9E,aAAa,CAACwI,QAA5B,iBACC,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEzD,gBADX;AAEE,IAAA,QAAQ,EAAED,SAAS,KAAK9E,aAAa,CAACuI,OAFxC;AAGE,IAAA,KAAK,EAAEtD,SAAS,KAAKjF,aAAa,CAACwI,QAA5B,GAAuC,KAAvC,GAA+C,MAHxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG1D,SAAS,KAAK9E,aAAa,CAACuI,OAA5B,gBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAiBzF,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CAA3B,4DAAiB,wBAA8BoC,MAA/C,CADD,GAGCtE,CAAC,CAAC,sBAAD,CAAD,+BAA4BS,UAAU,CAAC1C,KAAK,CAACmE,UAAP,CAAtC,4DAA4B,wBAA8BoC,MAA1D,CARJ,CAFJ,EAcG1B,SAAS,KAAKjF,aAAa,CAACwI,QAA5B,iBACC,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEtD,gBADX;AAEE,IAAA,QAAQ,EAAED,SAAS,KAAKjF,aAAa,CAACuI,OAFxC;AAGE,IAAA,KAAK,EAAEzD,SAAS,KAAK9E,aAAa,CAACwI,QAA5B,GAAuC,KAAvC,GAA+C,MAHxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGvD,SAAS,KAAKjF,aAAa,CAACuI,OAA5B,gBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAiBzF,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CAA3B,4DAAiB,wBAA8BmC,MAA/C,CADD,GAGCtE,CAAC,CAAC,sBAAD,CAAD,+BAA4BS,UAAU,CAAC1C,KAAK,CAACoE,UAAP,CAAtC,4DAA4B,wBAA8BmC,MAA1D,CARJ,CAfJ,CANN,eAmCE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACblE,MAAAA,UAAU,GAAG2C,KAAK,EAAR,GAAavB,cAAc,CAAC,IAAD,CAArC;AACD,KAHH;AAIE,IAAA,QAAQ,EAAE,CAACF,OAAD,IAAYmB,SAAS,KAAK9E,aAAa,CAACwI,QAAxC,IAAoDvD,SAAS,KAAKjF,aAAa,CAACwI,QAJ5F;AAKE,IAAA,KAAK,EAAE,CAAC7E,OAAD,IAAY,CAAC,CAACT,aAAa,CAAC9C,KAAK,CAACmE,UAAP,CAA3B,IAAiD,CAAC,CAACrB,aAAa,CAAC9C,KAAK,CAACoE,UAAP,CALzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,EAAhB;AAAoB,IAAA,UAAU,EAAE,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KADH,aACGA,KADH,cACGA,KADH,GACYlB,CAAC,CAAC,qBAAD,CADb,CAPF,CAnCF,CArEJ,CAhBF,CAFF,CADF,EA4IGU,IAAI,IAAI,CAACK,WAAT,IAAwBJ,SAAS,KAAKnD,SAAS,CAACwI,OAAhD,gBACC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,KAAK,EAAE,MAA5B;AAAoCC,MAAAA,QAAQ,EAAE,OAA9C;AAAuDrB,MAAAA,SAAS,EAAE;AAAlE,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAqB,IAAA,aAAa,EAAEhF,kBAApC;AAAwD,IAAA,IAAI,EAAES,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAIG,IAhJN,CADF;AAoJD","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, CAVAX, TokenAmount, WAVAX } from '@pangolindex/sdk'\nimport React, { useCallback, useContext, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween, RowFlat } from '../../components/Row'\n\nimport { ROUTER_ADDRESS } from '../../constants'\nimport { PairState } from '../../data/Reserves'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { TYPE } from '../../theme'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport { PoolPriceBar } from './PoolPriceBar'\nimport { ChainId } from '@pangolindex/sdk'\nimport { useTranslation } from 'react-i18next'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB }\n  },\n  history\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const { t } = useTranslation()\n\n  const oneCurrencyIsWAVAX = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WAVAX[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WAVAX[chainId])))\n  )\n\n  const toggleWalletModal = useWalletModalToggle() // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? ''\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field])\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0')\n      }\n    },\n    {}\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_A],\n    chainId ? ROUTER_ADDRESS[chainId] : ROUTER_ADDRESS[ChainId.AVALANCHE]\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_B],\n    chainId ? ROUTER_ADDRESS[chainId] : ROUTER_ADDRESS[ChainId.AVALANCHE]\n  )\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]\n    }\n\n    let estimate,\n      method: (...args: any) => Promise<TransactionResponse>,\n      args: Array<string | string[] | number>,\n      value: BigNumber | null\n    if (currencyA === CAVAX || currencyB === CAVAX) {\n      const tokenBIsETH = currencyB === CAVAX\n      estimate = router.estimateGas.addLiquidityAVAX\n      method = router.addLiquidityAVAX\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString()\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString()\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then(estimatedGasLimit =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit)\n        }).then(response => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary:\n              'Add ' +\n              parsedAmounts[Field.CURRENCY_A]?.toSignificant(3) +\n              ' ' +\n              currencies[Field.CURRENCY_A]?.symbol +\n              ' and ' +\n              parsedAmounts[Field.CURRENCY_B]?.toSignificant(3) +\n              ' ' +\n              currencies[Field.CURRENCY_B]?.symbol\n          })\n\n          setTxHash(response.hash)\n\n          ReactGA.event({\n            category: 'Liquidity',\n            action: 'Add',\n            label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/')\n          })\n        })\n      )\n      .catch(error => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (error?.code !== 4001) {\n          console.error(error)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\n          <RowFlat>\n            <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n              {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\n            </Text>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <Text fontSize=\"24px\">\n            {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + t('addLiquidity.poolTokens')}\n          </Text>\n        </Row>\n        <TYPE.italic fontSize={12} textAlign=\"left\" padding={'8px 0 0 0 '}>\n          {t('addLiquidity.outputEstimated', { allowedSlippage: allowedSlippage / 100 })}\n        </TYPE.italic>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencies[Field.CURRENCY_A]?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA ? currencyIdA : 'AVAX'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const isCreate = history.location.pathname.includes('/create')\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={isCreate} adding={true} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={noLiquidity ? t('addLiquidity.creatingPool') : t('addLiquidity.willReceive')}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <AutoColumn gap=\"20px\">\n            {noLiquidity ||\n              (isCreate && (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <TYPE.link fontWeight={600} color={'primaryText1'}>\n                        {t('addLiquidity.firstLP')}\n                      </TYPE.link>\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        {t('addLiquidity.ratioTokens')}\n                      </TYPE.link>\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        {t('addLiquidity.happyRate')}\n                      </TYPE.link>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ))}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <Plus size=\"16\" color={theme.text2} />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius={'20px'}>\n                  <RowBetween padding=\"1rem\">\n                    <TYPE.subHeader fontWeight={500} fontSize={14}>\n                      {noLiquidity ? t('addLiquidity.initialPrices') : t('addLiquidity.prices')} {t('addLiquidity.poolShare')}\n                    </TYPE.subHeader>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius={'20px'}>\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {!account ? (\n              <ButtonLight onClick={toggleWalletModal}>{t('addLiquidity.connectWallet')}</ButtonLight>\n            ) : (\n              <AutoColumn gap={'md'}>\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\n                          ) : (\n                            t('addLiquidity.approve') + currencies[Field.CURRENCY_A]?.symbol\n                          )}\n                        </ButtonPrimary>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\n                          ) : (\n                            t('addLiquidity.approve') + currencies[Field.CURRENCY_B]?.symbol\n                          )}\n                        </ButtonPrimary>\n                      )}\n                    </RowBetween>\n                  )}\n                <ButtonError\n                  onClick={() => {\n                    expertMode ? onAdd() : setShowConfirm(true)\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                  error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {error ?? t('addLiquidity.supply')}\n                  </Text>\n                </ButtonError>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWAVAX} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}