{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/Popups/TransactionPopup.tsx\";\nimport React, { useContext } from 'react';\nimport { AlertCircle, CheckCircle } from 'react-feather';\nimport styled, { ThemeContext } from 'styled-components';\nimport { useActiveWeb3React } from '../../hooks';\nimport { TYPE } from '../../theme';\nimport { ExternalLink } from '../../theme/components';\nimport { getEtherscanLink } from '../../utils';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\nimport { useTranslation } from 'react-i18next';\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`;\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary\n}) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(RowNoFlex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingRight: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, success ? /*#__PURE__*/React.createElement(CheckCircle, {\n    color: theme.green1,\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(AlertCircle, {\n    color: theme.red1,\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 69\n    }\n  })), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, summary !== null && summary !== void 0 ? summary : t('popups.hash') + hash.slice(0, 8) + '...' + hash.slice(58, 65)), chainId && /*#__PURE__*/React.createElement(ExternalLink, {\n    href: getEtherscanLink(chainId, hash, 'transaction'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, t('popups.viewExplorer'))));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/Popups/TransactionPopup.tsx"],"names":["React","useContext","AlertCircle","CheckCircle","styled","ThemeContext","useActiveWeb3React","TYPE","ExternalLink","getEtherscanLink","AutoColumn","AutoRow","useTranslation","RowNoFlex","TransactionPopup","hash","success","summary","chainId","t","theme","paddingRight","green1","red1","slice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,mBAArC;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,SAAS,GAAGT,MAAM,CAACO,OAAD,CAAU;AAClC;AACA,CAFA;AAIA,eAAe,SAASG,gBAAT,CAA0B;AACvCC,EAAAA,IADuC;AAEvCC,EAAAA,OAFuC;AAGvCC,EAAAA;AAHuC,CAA1B,EAQZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAcZ,kBAAkB,EAAtC;AAEA,QAAM;AAAEa,IAAAA;AAAF,MAAQP,cAAc,EAA5B;AACA,QAAMQ,KAAK,GAAGnB,UAAU,CAACI,YAAD,CAAxB;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEgB,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,gBAAG,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEI,KAAK,CAACE,MAA1B;AAAkC,IAAA,IAAI,EAAE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAoD,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEF,KAAK,CAACG,IAA1B;AAAgC,IAAA,IAAI,EAAE,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9D,CADF,eAIE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OADH,aACGA,OADH,cACGA,OADH,GACcE,CAAC,CAAC,aAAD,CAAD,GAAmBJ,IAAI,CAACS,KAAL,CAAW,CAAX,EAAc,CAAd,CAAnB,GAAsC,KAAtC,GAA8CT,IAAI,CAACS,KAAL,CAAW,EAAX,EAAe,EAAf,CAD5D,CADF,EAIGN,OAAO,iBACN,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAET,gBAAgB,CAACS,OAAD,EAAUH,IAAV,EAAgB,aAAhB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqEI,CAAC,CAAC,qBAAD,CAAtE,CALJ,CAJF,CADF;AAeD","sourcesContent":["import React, { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { TYPE } from '../../theme'\nimport { ExternalLink } from '../../theme/components'\nimport { getEtherscanLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\nimport { useTranslation } from 'react-i18next'\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary\n}: {\n  hash: string\n  success?: boolean\n  summary?: string\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n  const theme = useContext(ThemeContext)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? <CheckCircle color={theme.green1} size={24} /> : <AlertCircle color={theme.red1} size={24} />}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <TYPE.body fontWeight={500}>\n          {summary ?? t('popups.hash') + hash.slice(0, 8) + '...' + hash.slice(58, 65)}\n        </TYPE.body>\n        {chainId && (\n          <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>{t('popups.viewExplorer')}</ExternalLink>\n        )}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}