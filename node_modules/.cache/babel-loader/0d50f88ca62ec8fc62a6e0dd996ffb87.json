{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/AddressInputPanel/index.tsx\";\nimport React, { useContext, useCallback } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport useENS from '../../hooks/useENS';\nimport { useActiveWeb3React } from '../../hooks';\nimport { ExternalLink, TYPE } from '../../theme';\nimport { AutoColumn } from '../Column';\nimport { RowBetween } from '../Row';\nimport { getEtherscanLink } from '../../utils';\nimport { useTranslation } from 'react-i18next';\nconst InputPanel = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({\n  theme\n}) => theme.bg1};\n  z-index: 1;\n  width: 100%;\n`;\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({\n  error,\n  theme\n}) => error ? theme.red1 : theme.bg2};\n  transition: border-color 300ms ${({\n  error\n}) => error ? 'step-end' : 'step-start'},\n    color 500ms ${({\n  error\n}) => error ? 'step-end' : 'step-start'};\n  background-color: ${({\n  theme\n}) => theme.bg1};\n`;\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`;\nconst Input = styled.input`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({\n  theme\n}) => theme.bg1};\n  transition: color 300ms ${({\n  error\n}) => error ? 'step-end' : 'step-start'};\n  color: ${({\n  error,\n  theme\n}) => error ? theme.red1 : theme.primary1};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({\n  theme\n}) => theme.text4};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({\n  theme\n}) => theme.text4};\n  }\n`;\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange\n}) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const {\n    t\n  } = useTranslation();\n  const {\n    address,\n    loading,\n    name\n  } = useENS(value);\n  const handleInput = useCallback(event => {\n    const input = event.target.value;\n    const withoutSpaces = input.replace(/\\s+/g, '');\n    onChange(withoutSpaces);\n  }, [onChange]);\n  const error = Boolean(value.length > 0 && !loading && !address);\n  return /*#__PURE__*/React.createElement(InputPanel, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ContainerRow, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    color: theme.text2,\n    fontWeight: 500,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, t('addressInputPanel.recipient')), address && chainId && /*#__PURE__*/React.createElement(ExternalLink, {\n    href: getEtherscanLink(chainId, name !== null && name !== void 0 ? name : address, 'address'),\n    style: {\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, t('addressInputPanel.viewExplorer'))), /*#__PURE__*/React.createElement(Input, {\n    className: \"recipient-address-input\",\n    type: \"text\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    autoCapitalize: \"off\",\n    spellCheck: \"false\",\n    placeholder: t('addressInputPanel.walletAddress'),\n    error: error,\n    pattern: \"^(0x[a-fA-F0-9]{40})$\",\n    onChange: handleInput,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/AddressInputPanel/index.tsx"],"names":["React","useContext","useCallback","styled","ThemeContext","useENS","useActiveWeb3React","ExternalLink","TYPE","AutoColumn","RowBetween","getEtherscanLink","useTranslation","InputPanel","div","theme","flexColumnNoWrap","bg1","ContainerRow","error","red1","bg2","InputContainer","Input","input","primary1","text4","AddressInputPanel","id","value","onChange","chainId","t","address","loading","name","handleInput","event","target","withoutSpaces","replace","Boolean","length","text2","fontSize"],"mappings":"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","sourcesContent":["import React, { useContext, useCallback } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport useENS from '../../hooks/useENS'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ExternalLink, TYPE } from '../../theme'\nimport { AutoColumn } from '../Column'\nimport { RowBetween } from '../Row'\nimport { getEtherscanLink } from '../../utils'\nimport { useTranslation } from 'react-i18next'\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.bg1};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.red1 : theme.bg2)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.bg1};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.bg1};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.primary1)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.text4};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text4};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    event => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange]\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <TYPE.black color={theme.text2} fontWeight={500} fontSize={14}>\n                {t('addressInputPanel.recipient')}\n              </TYPE.black>\n              {address && chainId && (\n                <ExternalLink href={getEtherscanLink(chainId, name ?? address, 'address')} style={{ fontSize: '14px' }}>\n                  {t('addressInputPanel.viewExplorer')}\n                </ExternalLink>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('addressInputPanel.walletAddress')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}