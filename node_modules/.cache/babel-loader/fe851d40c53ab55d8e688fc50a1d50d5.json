{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/pages/Earn/index.tsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AutoColumn } from '../../components/Column';\nimport { ChevronDown, ChevronUp } from 'react-feather';\nimport styled from 'styled-components';\nimport { MIGRATIONS, STAKING_REWARDS_INFO, useStakingInfo } from '../../state/stake/hooks';\nimport { TYPE, ExternalLink } from '../../theme';\nimport PoolCard from '../../components/earn/PoolCard';\nimport { NavLink } from 'react-router-dom';\nimport { RowBetween } from '../../components/Row';\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled';\nimport Loader from '../../components/Loader';\nimport { useActiveWeb3React } from '../../hooks';\nimport { JSBI } from '@pangolindex/sdk';\nimport { useTranslation } from 'react-i18next';\nimport { SearchInput } from '../../components/SearchModal/styleds';\nimport useDebounce from '../../hooks/useDebounce';\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`;\nconst TopSection = styled(AutoColumn)`\n  max-width: 720px;\n  width: 100%;\n`;\nconst PoolSection = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 10px;\n  row-gap: 15px;\n  width: 100%;\n  justify-self: center;\n`;\nconst DataRow = styled(RowBetween)`\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n   flex-direction: column;\n `};\n`;\nconst SortSection = styled.div`\n  display: flex;\n`;\nconst SortField = styled.div`\n  margin: 0px 5px 0px 5px;\n  font-weight: 400;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  line-height: 20px;\n`;\nconst SortFieldContainer = styled.div`\n  display: flex;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n   display: none;\n `};\n`;\nvar SortingType;\n\n(function (SortingType) {\n  SortingType[\"totalStakedInWavax\"] = \"totalStakedInWavax\";\n  SortingType[\"multiplier\"] = \"multiplier\";\n  SortingType[\"totalApr\"] = \"totalApr\";\n})(SortingType || (SortingType = {}));\n\nexport default function Earn({\n  match: {\n    params: {\n      version\n    }\n  }\n}) {\n  var _STAKING_REWARDS_INFO, _STAKING_REWARDS_INFO2;\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const stakingInfos = useStakingInfo(Number(version));\n  const [poolCards, setPoolCards] = useState();\n  const [filteredPoolCards, setFilteredPoolCards] = useState();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortBy, setSortBy] = useState({\n    field: '',\n    desc: true\n  });\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const [stakingInfoData, setStakingInfoData] = useState(stakingInfos);\n  const stakingInfoV0 = useStakingInfo(Number(0));\n  const hasPositionV0 = stakingInfoV0 === null || stakingInfoV0 === void 0 ? void 0 : stakingInfoV0.some(stakingInfo => stakingInfo.stakedAmount.greaterThan('0'));\n  const handleSearch = useCallback(event => {\n    setSearchQuery(event.target.value.trim().toUpperCase());\n  }, []);\n  useEffect(() => {\n    const filtered = poolCards === null || poolCards === void 0 ? void 0 : poolCards.filter(card => card.props.stakingInfo.tokens[0].symbol.toUpperCase().includes(debouncedSearchQuery) || card.props.stakingInfo.tokens[1].symbol.toUpperCase().includes(debouncedSearchQuery));\n    setFilteredPoolCards(filtered); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [poolCards, debouncedSearchQuery]);\n  useEffect(() => {\n    Promise.all(stakingInfoData === null || stakingInfoData === void 0 ? void 0 : stakingInfoData.filter(function (info) {\n      // Only include pools that are live or require a migration\n      return !info.isPeriodFinished || info.stakedAmount.greaterThan(JSBI.BigInt(0));\n    }).sort(function (info_a, info_b) {\n      if (sortBy.field === SortingType.totalStakedInWavax) {\n        if (sortBy.desc) {\n          var _info_a$totalStakedIn, _info_b$totalStakedIn;\n\n          return ((_info_a$totalStakedIn = info_a.totalStakedInWavax) === null || _info_a$totalStakedIn === void 0 ? void 0 : _info_a$totalStakedIn.greaterThan((_info_b$totalStakedIn = info_b.totalStakedInWavax) !== null && _info_b$totalStakedIn !== void 0 ? _info_b$totalStakedIn : JSBI.BigInt(0))) ? -1 : 1;\n        } else {\n          var _info_a$totalStakedIn2, _info_b$totalStakedIn2;\n\n          return ((_info_a$totalStakedIn2 = info_a.totalStakedInWavax) === null || _info_a$totalStakedIn2 === void 0 ? void 0 : _info_a$totalStakedIn2.lessThan((_info_b$totalStakedIn2 = info_b.totalStakedInWavax) !== null && _info_b$totalStakedIn2 !== void 0 ? _info_b$totalStakedIn2 : JSBI.BigInt(0))) ? -1 : 1;\n        }\n      }\n\n      if (sortBy.field === SortingType.multiplier) {\n        if (sortBy.desc) {\n          return JSBI.greaterThan(info_a.multiplier, info_b.multiplier) ? -1 : 1;\n        } else {\n          return JSBI.lessThan(info_a.multiplier, info_b.multiplier) ? -1 : 1;\n        }\n      }\n\n      if (sortBy.field === SortingType.totalApr) {\n        if (sortBy.desc) {\n          return info_a.stakingApr + info_a.swapFeeApr > info_b.stakingApr + info_b.swapFeeApr ? -1 : 1;\n        } else {\n          return info_a.stakingApr + info_a.swapFeeApr < info_b.stakingApr + info_b.swapFeeApr ? -1 : 1;\n        }\n      }\n\n      return 0;\n    })).then(stakingInfoData => {\n      const poolCards = stakingInfoData.map(stakingInfo => {\n        var _MIGRATIONS$find;\n\n        return /*#__PURE__*/React.createElement(PoolCard, {\n          swapFeeApr: stakingInfo.swapFeeApr,\n          stakingApr: stakingInfo.stakingApr,\n          key: stakingInfo.stakingRewardAddress,\n          stakingInfo: stakingInfo,\n          migration: (_MIGRATIONS$find = MIGRATIONS.find(migration => migration.from.stakingRewardAddress === stakingInfo.stakingRewardAddress)) === null || _MIGRATIONS$find === void 0 ? void 0 : _MIGRATIONS$find.to,\n          version: version,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }\n        });\n      });\n      setPoolCards(poolCards);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortBy]);\n  useEffect(() => {\n    Promise.all(stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.filter(function (info) {\n      // Only include pools that are live or require a migration\n      return !info.isPeriodFinished || info.stakedAmount.greaterThan(JSBI.BigInt(0));\n    }).sort(function (info_a, info_b) {\n      var _info_a$totalStakedIn3, _info_b$totalStakedIn3;\n\n      // only first has ended\n      if (info_a.isPeriodFinished && !info_b.isPeriodFinished) return 1; // only second has ended\n\n      if (!info_a.isPeriodFinished && info_b.isPeriodFinished) return -1; // greater stake in avax comes first\n\n      return ((_info_a$totalStakedIn3 = info_a.totalStakedInWavax) === null || _info_a$totalStakedIn3 === void 0 ? void 0 : _info_a$totalStakedIn3.greaterThan((_info_b$totalStakedIn3 = info_b.totalStakedInWavax) !== null && _info_b$totalStakedIn3 !== void 0 ? _info_b$totalStakedIn3 : JSBI.BigInt(0))) ? -1 : 1;\n    }).sort(function (info_a, info_b) {\n      // only the first is being staked, so we should bring the first up\n      if (info_a.stakedAmount.greaterThan(JSBI.BigInt(0)) && !info_b.stakedAmount.greaterThan(JSBI.BigInt(0))) return -1; // only the second is being staked, so we should bring the first down\n\n      if (!info_a.stakedAmount.greaterThan(JSBI.BigInt(0)) && info_b.stakedAmount.greaterThan(JSBI.BigInt(0))) return 1;\n      return 0;\n    }).sort(function (info_a, info_b) {\n      var _MIGRATIONS$find2, _MIGRATIONS$find3;\n\n      // Bring pools that require migration to the top\n      const aCanMigrate = (_MIGRATIONS$find2 = MIGRATIONS.find(migration => migration.from.stakingRewardAddress === info_a.stakingRewardAddress)) === null || _MIGRATIONS$find2 === void 0 ? void 0 : _MIGRATIONS$find2.to;\n      const bCanMigrate = (_MIGRATIONS$find3 = MIGRATIONS.find(migration => migration.from.stakingRewardAddress === info_b.stakingRewardAddress)) === null || _MIGRATIONS$find3 === void 0 ? void 0 : _MIGRATIONS$find3.to;\n      if (aCanMigrate && !bCanMigrate) return -1;\n      if (!aCanMigrate && bCanMigrate) return 1;\n      return 0;\n    }).map(stakingInfo => {\n      return fetch(`https://api.pangolin.exchange/pangolin/apr/${stakingInfo.stakingRewardAddress}`).then(res => res.json()).then(res => ({\n        swapFeeApr: res.swapFeeApr,\n        stakingApr: Number(res.stakingApr),\n        combinedApr: res.combinedApr,\n        ...stakingInfo\n      }));\n    })).then(stakingInfos => {\n      const poolCards = stakingInfos.map(stakingInfo => {\n        var _MIGRATIONS$find4;\n\n        return /*#__PURE__*/React.createElement(PoolCard, {\n          swapFeeApr: stakingInfo.swapFeeApr,\n          stakingApr: stakingInfo.stakingApr,\n          key: stakingInfo.stakingRewardAddress,\n          stakingInfo: stakingInfo,\n          migration: (_MIGRATIONS$find4 = MIGRATIONS.find(migration => migration.from.stakingRewardAddress === stakingInfo.stakingRewardAddress)) === null || _MIGRATIONS$find4 === void 0 ? void 0 : _MIGRATIONS$find4.to,\n          version: version,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 9\n          }\n        });\n      });\n      setStakingInfoData(stakingInfos);\n      setPoolCards(poolCards);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length, version]);\n  const stakingRewardsExist = Boolean(typeof chainId === 'number' && ((_STAKING_REWARDS_INFO = (_STAKING_REWARDS_INFO2 = STAKING_REWARDS_INFO[chainId]) === null || _STAKING_REWARDS_INFO2 === void 0 ? void 0 : _STAKING_REWARDS_INFO2.length) !== null && _STAKING_REWARDS_INFO !== void 0 ? _STAKING_REWARDS_INFO : 0) > 0);\n\n  const getSortField = (label, field, sortBy, setSortBy) => {\n    return /*#__PURE__*/React.createElement(SortField, {\n      onClick: () => {\n        const desc = (sortBy === null || sortBy === void 0 ? void 0 : sortBy.field) === field ? !(sortBy === null || sortBy === void 0 ? void 0 : sortBy.desc) : true;\n        setSortBy({\n          field,\n          desc\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }\n    }, label, (sortBy === null || sortBy === void 0 ? void 0 : sortBy.field) === field && ((sortBy === null || sortBy === void 0 ? void 0 : sortBy.desc) ? /*#__PURE__*/React.createElement(ChevronDown, {\n      size: \"16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(ChevronUp, {\n      size: \"16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 81\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    gap: \"lg\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TopSection, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, t('earnPage.pangolinLiquidityMining'))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, t('earnPage.depositPangolinLiquidity'))), ' ', /*#__PURE__*/React.createElement(ExternalLink, {\n    style: {\n      color: 'white',\n      textDecoration: 'underline'\n    },\n    href: \"https://pangolin.exchange/litepaper\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, t('earnPage.readMoreAboutPng'))))), /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  })), (hasPositionV0 || version === '0') && /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, t('earnPage.importantUpdate'))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  }, t('earnPage.pangolinGovernanceProposalResult'))), version !== '0' && /*#__PURE__*/React.createElement(NavLink, {\n    style: {\n      color: 'white',\n      textDecoration: 'underline'\n    },\n    to: \"/png/0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, t('earnPage.oldPngPools'))))))), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"lg\",\n    style: {\n      width: '100%',\n      maxWidth: '720px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataRow, {\n    style: {\n      alignItems: 'baseline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    style: {\n      marginTop: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, t('earnPage.participatingPools'))), /*#__PURE__*/React.createElement(PoolSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, stakingRewardsExist && (stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length) === 0 ? /*#__PURE__*/React.createElement(Loader, {\n    style: {\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }) : !stakingRewardsExist || (poolCards === null || poolCards === void 0 ? void 0 : poolCards.length) === 0 ? t('earnPage.noActiveRewards') : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    id: \"token-search-input\",\n    placeholder: t('searchModal.tokenName'),\n    value: searchQuery,\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SortSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }, \"Sort by :\", ' ', /*#__PURE__*/React.createElement(SortFieldContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, getSortField('Liquidity', SortingType.totalStakedInWavax, sortBy, setSortBy), \" |\", ' ', getSortField('Pool Weight', SortingType.multiplier, sortBy, setSortBy), \" |\", ' '), getSortField('APR', SortingType.totalApr, sortBy, setSortBy)), filteredPoolCards))));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/pages/Earn/index.tsx"],"names":["React","useCallback","useEffect","useState","AutoColumn","ChevronDown","ChevronUp","styled","MIGRATIONS","STAKING_REWARDS_INFO","useStakingInfo","TYPE","ExternalLink","PoolCard","NavLink","RowBetween","CardSection","DataCard","CardNoise","CardBGImage","Loader","useActiveWeb3React","JSBI","useTranslation","SearchInput","useDebounce","PageWrapper","TopSection","PoolSection","div","DataRow","theme","mediaWidth","upToSmall","SortSection","SortField","SortFieldContainer","SortingType","Earn","match","params","version","chainId","t","stakingInfos","Number","poolCards","setPoolCards","filteredPoolCards","setFilteredPoolCards","searchQuery","setSearchQuery","sortBy","setSortBy","field","desc","debouncedSearchQuery","stakingInfoData","setStakingInfoData","stakingInfoV0","hasPositionV0","some","stakingInfo","stakedAmount","greaterThan","handleSearch","event","target","value","trim","toUpperCase","filtered","filter","card","props","tokens","symbol","includes","Promise","all","info","isPeriodFinished","BigInt","sort","info_a","info_b","totalStakedInWavax","lessThan","multiplier","totalApr","stakingApr","swapFeeApr","then","map","stakingRewardAddress","find","migration","from","to","aCanMigrate","bCanMigrate","fetch","res","json","combinedApr","length","stakingRewardsExist","Boolean","getSortField","label","color","textDecoration","width","maxWidth","alignItems","marginTop","margin"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { AutoColumn } from '../../components/Column'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport styled from 'styled-components'\nimport { MIGRATIONS, STAKING_REWARDS_INFO, useStakingInfo } from '../../state/stake/hooks'\nimport { TYPE, ExternalLink } from '../../theme'\nimport PoolCard from '../../components/earn/PoolCard'\nimport { RouteComponentProps, NavLink } from 'react-router-dom'\nimport { RowBetween } from '../../components/Row'\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled'\nimport Loader from '../../components/Loader'\nimport { useActiveWeb3React } from '../../hooks'\nimport { JSBI } from '@pangolindex/sdk'\nimport { useTranslation } from 'react-i18next'\nimport { SearchInput } from '../../components/SearchModal/styleds'\nimport useDebounce from '../../hooks/useDebounce'\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst TopSection = styled(AutoColumn)`\n  max-width: 720px;\n  width: 100%;\n`\n\nconst PoolSection = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 10px;\n  row-gap: 15px;\n  width: 100%;\n  justify-self: center;\n`\n\nconst DataRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n   flex-direction: column;\n `};\n`\n\nconst SortSection = styled.div`\n  display: flex;\n`\nconst SortField = styled.div`\n  margin: 0px 5px 0px 5px;\n  font-weight: 400;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  line-height: 20px;\n`\n\nconst SortFieldContainer = styled.div`\n  display: flex;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n   display: none;\n `};\n`\n\nenum SortingType {\n  totalStakedInWavax = 'totalStakedInWavax',\n  multiplier = 'multiplier',\n  totalApr = 'totalApr'\n}\n\nexport default function Earn({\n  match: {\n    params: { version }\n  }\n}: RouteComponentProps<{ version: string }>) {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const stakingInfos = useStakingInfo(Number(version))\n\n  const [poolCards, setPoolCards] = useState<any[]>()\n  const [filteredPoolCards, setFilteredPoolCards] = useState<any[]>()\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [sortBy, setSortBy] = useState<any>({ field: '', desc: true })\n  const debouncedSearchQuery = useDebounce(searchQuery, 250)\n  const [stakingInfoData, setStakingInfoData] = useState<any[]>(stakingInfos)\n\n  const stakingInfoV0 = useStakingInfo(Number(0))\n  const hasPositionV0 = stakingInfoV0?.some(stakingInfo => stakingInfo.stakedAmount.greaterThan('0'))\n\n  const handleSearch = useCallback(event => {\n    setSearchQuery(event.target.value.trim().toUpperCase())\n  }, [])\n\n  useEffect(() => {\n    const filtered = poolCards?.filter(\n      card =>\n        card.props.stakingInfo.tokens[0].symbol.toUpperCase().includes(debouncedSearchQuery) ||\n        card.props.stakingInfo.tokens[1].symbol.toUpperCase().includes(debouncedSearchQuery)\n    )\n    setFilteredPoolCards(filtered)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [poolCards, debouncedSearchQuery])\n\n  useEffect(() => {\n    Promise.all(\n      stakingInfoData\n        ?.filter(function(info) {\n          // Only include pools that are live or require a migration\n          return !info.isPeriodFinished || info.stakedAmount.greaterThan(JSBI.BigInt(0))\n        })\n        .sort(function(info_a, info_b) {\n          if (sortBy.field === SortingType.totalStakedInWavax) {\n            if (sortBy.desc) {\n              return info_a.totalStakedInWavax?.greaterThan(info_b.totalStakedInWavax ?? JSBI.BigInt(0)) ? -1 : 1\n            } else {\n              return info_a.totalStakedInWavax?.lessThan(info_b.totalStakedInWavax ?? JSBI.BigInt(0)) ? -1 : 1\n            }\n          }\n          if (sortBy.field === SortingType.multiplier) {\n            if (sortBy.desc) {\n              return JSBI.greaterThan(info_a.multiplier, info_b.multiplier) ? -1 : 1\n            } else {\n              return JSBI.lessThan(info_a.multiplier, info_b.multiplier) ? -1 : 1\n            }\n          }\n\n          if (sortBy.field === SortingType.totalApr) {\n            if (sortBy.desc) {\n              return info_a.stakingApr + info_a.swapFeeApr > info_b.stakingApr + info_b.swapFeeApr ? -1 : 1\n            } else {\n              return info_a.stakingApr + info_a.swapFeeApr < info_b.stakingApr + info_b.swapFeeApr ? -1 : 1\n            }\n          }\n\n          return 0\n        })\n    ).then(stakingInfoData => {\n      const poolCards = stakingInfoData.map(stakingInfo => (\n        <PoolCard\n          swapFeeApr={stakingInfo.swapFeeApr}\n          stakingApr={stakingInfo.stakingApr}\n          key={stakingInfo.stakingRewardAddress}\n          stakingInfo={stakingInfo}\n          migration={\n            MIGRATIONS.find(migration => migration.from.stakingRewardAddress === stakingInfo.stakingRewardAddress)?.to\n          }\n          version={version}\n        />\n      ))\n      setPoolCards(poolCards)\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortBy])\n\n  useEffect(() => {\n    Promise.all(\n      stakingInfos\n        ?.filter(function(info) {\n          // Only include pools that are live or require a migration\n          return !info.isPeriodFinished || info.stakedAmount.greaterThan(JSBI.BigInt(0))\n        })\n        .sort(function(info_a, info_b) {\n          // only first has ended\n          if (info_a.isPeriodFinished && !info_b.isPeriodFinished) return 1\n          // only second has ended\n          if (!info_a.isPeriodFinished && info_b.isPeriodFinished) return -1\n          // greater stake in avax comes first\n          return info_a.totalStakedInWavax?.greaterThan(info_b.totalStakedInWavax ?? JSBI.BigInt(0)) ? -1 : 1\n        })\n        .sort(function(info_a, info_b) {\n          // only the first is being staked, so we should bring the first up\n          if (info_a.stakedAmount.greaterThan(JSBI.BigInt(0)) && !info_b.stakedAmount.greaterThan(JSBI.BigInt(0)))\n            return -1\n          // only the second is being staked, so we should bring the first down\n          if (!info_a.stakedAmount.greaterThan(JSBI.BigInt(0)) && info_b.stakedAmount.greaterThan(JSBI.BigInt(0)))\n            return 1\n          return 0\n        })\n        .sort(function(info_a, info_b) {\n          // Bring pools that require migration to the top\n          const aCanMigrate = MIGRATIONS.find(\n            migration => migration.from.stakingRewardAddress === info_a.stakingRewardAddress\n          )?.to\n          const bCanMigrate = MIGRATIONS.find(\n            migration => migration.from.stakingRewardAddress === info_b.stakingRewardAddress\n          )?.to\n          if (aCanMigrate && !bCanMigrate) return -1\n          if (!aCanMigrate && bCanMigrate) return 1\n          return 0\n        })\n        .map(stakingInfo => {\n          return fetch(`https://api.pangolin.exchange/pangolin/apr/${stakingInfo.stakingRewardAddress}`)\n            .then(res => res.json())\n            .then(res => ({\n              swapFeeApr: res.swapFeeApr,\n              stakingApr: Number(res.stakingApr),\n              combinedApr: res.combinedApr,\n              ...stakingInfo\n            }))\n        })\n    ).then(stakingInfos => {\n      const poolCards = stakingInfos.map(stakingInfo => (\n        <PoolCard\n          swapFeeApr={stakingInfo.swapFeeApr}\n          stakingApr={stakingInfo.stakingApr}\n          key={stakingInfo.stakingRewardAddress}\n          stakingInfo={stakingInfo}\n          migration={\n            MIGRATIONS.find(migration => migration.from.stakingRewardAddress === stakingInfo.stakingRewardAddress)?.to\n          }\n          version={version}\n        />\n      ))\n      setStakingInfoData(stakingInfos)\n      setPoolCards(poolCards)\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stakingInfos?.length, version])\n\n  const stakingRewardsExist = Boolean(typeof chainId === 'number' && (STAKING_REWARDS_INFO[chainId]?.length ?? 0) > 0)\n\n  const getSortField = (label: string, field: string, sortBy: any, setSortBy: Function) => {\n    return (\n      <SortField\n        onClick={() => {\n          const desc = sortBy?.field === field ? !sortBy?.desc : true\n          setSortBy({ field, desc })\n        }}\n      >\n        {label}\n        {sortBy?.field === field && (sortBy?.desc ? <ChevronDown size=\"16\" /> : <ChevronUp size=\"16\" />)}\n      </SortField>\n    )\n  }\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <TopSection gap=\"md\">\n        <DataCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>{t('earnPage.pangolinLiquidityMining')}</TYPE.white>\n              </RowBetween>\n              <RowBetween>\n                <TYPE.white fontSize={14}>{t('earnPage.depositPangolinLiquidity')}</TYPE.white>\n              </RowBetween>{' '}\n              <ExternalLink\n                style={{ color: 'white', textDecoration: 'underline' }}\n                href=\"https://pangolin.exchange/litepaper\"\n                target=\"_blank\"\n              >\n                <TYPE.white fontSize={14}>{t('earnPage.readMoreAboutPng')}</TYPE.white>\n              </ExternalLink>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </DataCard>\n        {(hasPositionV0 || version === '0') && (\n          <DataCard>\n            <CardNoise />\n            <CardSection>\n              <AutoColumn gap=\"md\">\n                <RowBetween>\n                  <TYPE.white fontWeight={600}>{t('earnPage.importantUpdate')}</TYPE.white>\n                </RowBetween>\n                <RowBetween>\n                  <TYPE.white fontSize={14}>{t('earnPage.pangolinGovernanceProposalResult')}</TYPE.white>\n                </RowBetween>\n                {version !== '0' && (\n                  <NavLink style={{ color: 'white', textDecoration: 'underline' }} to=\"/png/0\">\n                    <TYPE.white fontSize={14}>{t('earnPage.oldPngPools')}</TYPE.white>\n                  </NavLink>\n                )}\n              </AutoColumn>\n            </CardSection>\n          </DataCard>\n        )}\n      </TopSection>\n\n      <AutoColumn gap=\"lg\" style={{ width: '100%', maxWidth: '720px' }}>\n        <DataRow style={{ alignItems: 'baseline' }}>\n          <TYPE.mediumHeader style={{ marginTop: '0.5rem' }}>{t('earnPage.participatingPools')}</TYPE.mediumHeader>\n        </DataRow>\n\n        <PoolSection>\n          {stakingRewardsExist && stakingInfos?.length === 0 ? (\n            <Loader style={{ margin: 'auto' }} />\n          ) : !stakingRewardsExist || poolCards?.length === 0 ? (\n            t('earnPage.noActiveRewards')\n          ) : (\n            <>\n              <SearchInput\n                type=\"text\"\n                id=\"token-search-input\"\n                placeholder={t('searchModal.tokenName')}\n                value={searchQuery}\n                onChange={handleSearch}\n              />\n              <SortSection>\n                Sort by :{' '}\n                <SortFieldContainer>\n                  {getSortField('Liquidity', SortingType.totalStakedInWavax, sortBy, setSortBy)} |{' '}\n                  {getSortField('Pool Weight', SortingType.multiplier, sortBy, setSortBy)} |{' '}\n                </SortFieldContainer>\n                {getSortField('APR', SortingType.totalApr, sortBy, setSortBy)}\n              </SortSection>\n\n              {filteredPoolCards}\n            </>\n          )}\n        </PoolSection>\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}