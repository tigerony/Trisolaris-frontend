{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/Web3Status/index.tsx\";\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { darken, lighten } from 'polished';\nimport React, { useMemo } from 'react';\nimport { Activity } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport styled, { css } from 'styled-components';\nimport CoinbaseWalletIcon from \"../../assets/images/coinbaseWalletIcon.svg\";\nimport { injected, walletlink } from '../../connectors';\nimport { NetworkContextName } from '../../constants';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { isTransactionRecent, useAllTransactions } from '../../state/transactions/hooks';\nimport { shortenAddress } from '../../utils';\nimport { ButtonSecondary } from '../Button';\nimport Identicon from '../Identicon';\nimport Loader from '../Loader';\nimport { RowBetween } from '../Row';\nimport WalletModal from '../WalletModal';\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  width: 100%;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 12px;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`;\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({\n  theme\n}) => theme.red1};\n  border: 1px solid ${({\n  theme\n}) => theme.red1};\n  color: ${({\n  theme\n}) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({\n  theme\n}) => darken(0.1, theme.red1)};\n  }\n`;\nconst Web3StatusConnect = styled(Web3StatusGeneric)`\n  background-color: ${({\n  theme\n}) => theme.primary4};\n  border: none;\n  color: ${({\n  theme\n}) => theme.primaryText1};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({\n  theme\n}) => darken(0.05, theme.primary4)};\n    color: ${({\n  theme\n}) => theme.primaryText1};\n  }\n\n  ${({\n  faded\n}) => faded && css`\n      background-color: ${({\n  theme\n}) => theme.primary5};\n      border: 1px solid ${({\n  theme\n}) => theme.primary5};\n      color: ${({\n  theme\n}) => theme.primaryText1};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({\n  theme\n}) => darken(0.05, theme.primary4)};\n        color: ${({\n  theme\n}) => darken(0.05, theme.primaryText1)};\n      }\n    `}\n`;\nconst Web3StatusConnected = styled(Web3StatusGeneric)`\n  background-color: ${({\n  pending,\n  theme\n}) => pending ? theme.primary1 : theme.bg2};\n  border: 1px solid ${({\n  pending,\n  theme\n}) => pending ? theme.primary1 : theme.bg3};\n  color: ${({\n  pending,\n  theme\n}) => pending ? theme.white : theme.text1};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({\n  pending,\n  theme\n}) => pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2)};\n\n    :focus {\n      border: 1px solid ${({\n  pending,\n  theme\n}) => pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3)};\n    }\n  }\n`;\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`;\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`;\nconst IconWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > * {\n    height: ${({\n  size\n}) => size ? size + 'px' : '32px'};\n    width: ${({\n  size\n}) => size ? size + 'px' : '32px'};\n  }\n`; // we want the latest one to come first, so return negative if a is after b\n\nfunction newTransactionsFirst(a, b) {\n  return b.addedTime - a.addedTime;\n} // eslint-disable-next-line react/prop-types\n\n\nfunction StatusIcon({\n  connector\n}) {\n  if (connector === injected) {\n    return /*#__PURE__*/React.createElement(Identicon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 12\n      }\n    });\n  } else if (connector === walletlink) {\n    return /*#__PURE__*/React.createElement(IconWrapper, {\n      size: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: CoinbaseWalletIcon,\n      alt: 'CoinbaseWallet',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return null;\n}\n\nfunction Web3StatusInner() {\n  const {\n    t\n  } = useTranslation();\n  const {\n    account,\n    connector,\n    error\n  } = useWeb3React();\n  const allTransactions = useAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash);\n  const hasPendingTransactions = !!pending.length;\n  const toggleWalletModal = useWalletModalToggle();\n\n  if (account) {\n    return /*#__PURE__*/React.createElement(Web3StatusConnected, {\n      id: \"web3-status-connected\",\n      onClick: toggleWalletModal,\n      pending: hasPendingTransactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, hasPendingTransactions ? /*#__PURE__*/React.createElement(RowBetween, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, pending === null || pending === void 0 ? void 0 : pending.length, \" \", t('web3Status.pending')), ' ', /*#__PURE__*/React.createElement(Loader, {\n      stroke: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, shortenAddress(account))), !hasPendingTransactions && connector && /*#__PURE__*/React.createElement(StatusIcon, {\n      connector: connector,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 50\n      }\n    }));\n  } else if (error) {\n    return /*#__PURE__*/React.createElement(Web3StatusError, {\n      onClick: toggleWalletModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NetworkIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, error instanceof UnsupportedChainIdError ? t('web3Status.wrongNetwork') : t('web3Status.error')));\n  } else {\n    return /*#__PURE__*/React.createElement(Web3StatusConnect, {\n      id: \"connect-wallet\",\n      onClick: toggleWalletModal,\n      faded: !account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, t('web3Status.connectToWallet')));\n  }\n}\n\nexport default function Web3Status() {\n  const {\n    active\n  } = useWeb3React();\n  const contextNetwork = useWeb3React(NetworkContextName);\n  const allTransactions = useAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash);\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).map(tx => tx.hash);\n\n  if (!contextNetwork.active && !active) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Web3StatusInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(WalletModal, {\n    ENSName: undefined,\n    pendingTransactions: pending,\n    confirmedTransactions: confirmed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/Web3Status/index.tsx"],"names":["UnsupportedChainIdError","useWeb3React","darken","lighten","React","useMemo","Activity","useTranslation","styled","css","injected","walletlink","NetworkContextName","useWalletModalToggle","isTransactionRecent","useAllTransactions","shortenAddress","ButtonSecondary","Identicon","Loader","RowBetween","WalletModal","Web3StatusGeneric","theme","flexRowNoWrap","Web3StatusError","red1","white","Web3StatusConnect","primary4","primaryText1","faded","primary5","Web3StatusConnected","pending","primary1","bg2","bg3","text1","Text","p","NetworkIcon","IconWrapper","div","flexColumnNoWrap","size","newTransactionsFirst","a","b","addedTime","StatusIcon","connector","CoinbaseWalletIcon","Web3StatusInner","t","account","error","allTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","tx","receipt","map","hash","hasPendingTransactions","length","toggleWalletModal","Web3Status","active","contextNetwork","confirmed","undefined"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { darken, lighten } from 'polished'\nimport React, { useMemo } from 'react'\nimport { Activity } from 'react-feather'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\nimport CoinbaseWalletIcon from '../../assets/images/coinbaseWalletIcon.svg'\nimport { injected, walletlink } from '../../connectors'\nimport { NetworkContextName } from '../../constants'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { isTransactionRecent, useAllTransactions } from '../../state/transactions/hooks'\nimport { TransactionDetails } from '../../state/transactions/reducer'\nimport { shortenAddress } from '../../utils'\nimport { ButtonSecondary } from '../Button'\n\nimport Identicon from '../Identicon'\nimport Loader from '../Loader'\n\nimport { RowBetween } from '../Row'\nimport WalletModal from '../WalletModal'\n\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n  ${({ theme }) => theme.flexRowNoWrap}\n  width: 100%;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 12px;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({ theme }) => theme.red1};\n  border: 1px solid ${({ theme }) => theme.red1};\n  color: ${({ theme }) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => darken(0.1, theme.red1)};\n  }\n`\n\nconst Web3StatusConnect = styled(Web3StatusGeneric)<{ faded?: boolean }>`\n  background-color: ${({ theme }) => theme.primary4};\n  border: none;\n  color: ${({ theme }) => theme.primaryText1};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n    color: ${({ theme }) => theme.primaryText1};\n  }\n\n  ${({ faded }) =>\n    faded &&\n    css`\n      background-color: ${({ theme }) => theme.primary5};\n      border: 1px solid ${({ theme }) => theme.primary5};\n      color: ${({ theme }) => theme.primaryText1};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n        color: ${({ theme }) => darken(0.05, theme.primaryText1)};\n      }\n    `}\n`\n\nconst Web3StatusConnected = styled(Web3StatusGeneric)<{ pending?: boolean }>`\n  background-color: ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg2)};\n  border: 1px solid ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg3)};\n  color: ${({ pending, theme }) => (pending ? theme.white : theme.text1)};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ pending, theme }) => (pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2))};\n\n    :focus {\n      border: 1px solid ${({ pending, theme }) => (pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3))};\n    }\n  }\n`\n\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`\n\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`\n\nconst IconWrapper = styled.div<{ size?: number }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > * {\n    height: ${({ size }) => (size ? size + 'px' : '32px')};\n    width: ${({ size }) => (size ? size + 'px' : '32px')};\n  }\n`\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\n// eslint-disable-next-line react/prop-types\nfunction StatusIcon({ connector }: { connector: AbstractConnector }) {\n  if (connector === injected) {\n    return <Identicon />\n  } else if (connector === walletlink) {\n    return (\n      <IconWrapper size={16}>\n        <img src={CoinbaseWalletIcon} alt={'CoinbaseWallet'} />\n      </IconWrapper>\n    )\n  }\n  return null\n}\n\nfunction Web3StatusInner() {\n  const { t } = useTranslation()\n  const { account, connector, error } = useWeb3React()\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash)\n\n  const hasPendingTransactions = !!pending.length\n  const toggleWalletModal = useWalletModalToggle()\n\n  if (account) {\n    return (\n      <Web3StatusConnected id=\"web3-status-connected\" onClick={toggleWalletModal} pending={hasPendingTransactions}>\n        {hasPendingTransactions ? (\n          <RowBetween>\n            <Text>\n              {pending?.length} {t('web3Status.pending')}\n            </Text>{' '}\n            <Loader stroke=\"white\" />\n          </RowBetween>\n        ) : (\n          <>\n            <Text>{shortenAddress(account)}</Text>\n          </>\n        )}\n        {!hasPendingTransactions && connector && <StatusIcon connector={connector} />}\n      </Web3StatusConnected>\n    )\n  } else if (error) {\n    return (\n      <Web3StatusError onClick={toggleWalletModal}>\n        <NetworkIcon />\n        <Text>{error instanceof UnsupportedChainIdError ? t('web3Status.wrongNetwork') : t('web3Status.error')}</Text>\n      </Web3StatusError>\n    )\n  } else {\n    return (\n      <Web3StatusConnect id=\"connect-wallet\" onClick={toggleWalletModal} faded={!account}>\n        <Text>{t('web3Status.connectToWallet')}</Text>\n      </Web3StatusConnect>\n    )\n  }\n}\n\nexport default function Web3Status() {\n  const { active } = useWeb3React()\n  const contextNetwork = useWeb3React(NetworkContextName)\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash)\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).map(tx => tx.hash)\n\n  if (!contextNetwork.active && !active) {\n    return null\n  }\n\n  return (\n    <>\n      <Web3StatusInner />\n      <WalletModal ENSName={undefined} pendingTransactions={pending} confirmedTransactions={confirmed} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}