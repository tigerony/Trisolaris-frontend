{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/pages/AddLiquidity/PoolPriceBar.tsx\";\nimport React, { useContext } from 'react';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { AutoColumn } from '../../components/Column';\nimport { AutoRow } from '../../components/Row';\nimport { ONE_BIPS } from '../../constants';\nimport { Field } from '../../state/mint/actions';\nimport { TYPE } from '../../theme';\nimport { useTranslation } from 'react-i18next';\nexport function PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price\n}) {\n  var _price$toSignificant, _currencies$Field$CUR, _currencies$Field$CUR2, _price$invert$toSigni, _price$invert, _currencies$Field$CUR3, _currencies$Field$CUR4, _ref;\n\n  const theme = useContext(ThemeContext);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    justify: \"space-around\",\n    gap: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, (_price$toSignificant = price === null || price === void 0 ? void 0 : price.toSignificant(6)) !== null && _price$toSignificant !== void 0 ? _price$toSignificant : '-'), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    pt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, (_currencies$Field$CUR = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol, \" \", t('addLiquidity.per'), \" \", (_currencies$Field$CUR2 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol)), /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, (_price$invert$toSigni = price === null || price === void 0 ? void 0 : (_price$invert = price.invert()) === null || _price$invert === void 0 ? void 0 : _price$invert.toSignificant(6)) !== null && _price$invert$toSigni !== void 0 ? _price$invert$toSigni : '-'), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    pt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, (_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol, \" \", t('addLiquidity.per'), \" \", (_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol)), /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, noLiquidity && price ? '100' : (_ref = (poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.lessThan(ONE_BIPS)) ? '<0.01' : poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.toFixed(2)) !== null && _ref !== void 0 ? _ref : '0', \"%\"), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    pt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, t('addLiquidity.shareOfPool')))));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/pages/AddLiquidity/PoolPriceBar.tsx"],"names":["React","useContext","Text","ThemeContext","AutoColumn","AutoRow","ONE_BIPS","Field","TYPE","useTranslation","PoolPriceBar","currencies","noLiquidity","poolTokenPercentage","price","theme","t","toSignificant","text2","CURRENCY_B","symbol","CURRENCY_A","invert","lessThan","toFixed"],"mappings":"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","sourcesContent":["import { Currency, Percent, Price } from '@pangolindex/sdk'\nimport React, { useContext } from 'react'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { AutoColumn } from '../../components/Column'\nimport { AutoRow } from '../../components/Row'\nimport { ONE_BIPS } from '../../constants'\nimport { Field } from '../../state/mint/actions'\nimport { TYPE } from '../../theme'\nimport { useTranslation } from 'react-i18next'\n\nexport function PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const theme = useContext(ThemeContext)\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <TYPE.black>{price?.toSignificant(6) ?? '-'}</TYPE.black>\n          <Text fontWeight={500} fontSize={14} color={theme.text2} pt={1}>\n            {currencies[Field.CURRENCY_B]?.symbol} {t('addLiquidity.per')} {currencies[Field.CURRENCY_A]?.symbol}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <TYPE.black>{price?.invert()?.toSignificant(6) ?? '-'}</TYPE.black>\n          <Text fontWeight={500} fontSize={14} color={theme.text2} pt={1}>\n            {currencies[Field.CURRENCY_A]?.symbol} {t('addLiquidity.per')} {currencies[Field.CURRENCY_B]?.symbol}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <TYPE.black>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </TYPE.black>\n          <Text fontWeight={500} fontSize={14} color={theme.text2} pt={1}>\n            {t('addLiquidity.shareOfPool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}