{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/swap/SwapRoute.tsx\";\nimport React, { Fragment, memo, useContext } from 'react';\nimport { ChevronRight } from 'react-feather';\nimport { Flex } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { TYPE } from '../../theme';\nimport CurrencyLogo from '../CurrencyLogo';\nexport default memo(function SwapRoute({\n  trade\n}) {\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(Flex, {\n    px: \"1rem\",\n    py: \"0.5rem\",\n    my: \"0.5rem\",\n    style: {\n      border: `1px solid ${theme.bg3}`,\n      borderRadius: '1rem'\n    },\n    flexWrap: \"wrap\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, trade.route.path.map((token, i, path) => {\n    const isLastItem = i === path.length - 1;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      my: \"0.5rem\",\n      alignItems: \"center\",\n      style: {\n        flexShrink: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n      currency: token,\n      size: \"1.5rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TYPE.black, {\n      fontSize: 14,\n      color: theme.text1,\n      ml: \"0.5rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, token.symbol)), isLastItem ? null : /*#__PURE__*/React.createElement(ChevronRight, {\n      color: theme.text2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }\n    }));\n  }));\n});","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/swap/SwapRoute.tsx"],"names":["React","Fragment","memo","useContext","ChevronRight","Flex","ThemeContext","TYPE","CurrencyLogo","SwapRoute","trade","theme","border","bg3","borderRadius","route","path","map","token","i","isLastItem","length","flexShrink","text1","symbol","text2"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,UAAhC,QAAkD,OAAlD;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,eAAeN,IAAI,CAAC,SAASO,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAgD;AAClE,QAAMC,KAAK,GAAGR,UAAU,CAACG,YAAD,CAAxB;AACA,sBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,EAAE,EAAC,QAHL;AAIE,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAG,aAAYD,KAAK,CAACE,GAAI,EAAjC;AAAoCC,MAAAA,YAAY,EAAE;AAAlD,KAJT;AAKE,IAAA,QAAQ,EAAC,MALX;AAME,IAAA,KAAK,EAAC,MANR;AAOE,IAAA,cAAc,EAAC,cAPjB;AAQE,IAAA,UAAU,EAAC,QARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGJ,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,CAAR,EAAWH,IAAX,KAAoB;AACxC,UAAMI,UAAmB,GAAGD,CAAC,KAAKH,IAAI,CAACK,MAAL,GAAc,CAAhD;AACA,wBACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEF,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,UAAU,EAAC,QAA7B;AAAsC,MAAA,KAAK,EAAE;AAAEG,QAAAA,UAAU,EAAE;AAAd,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEJ,KAAxB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,EAAE,EAAtB;AAA0B,MAAA,KAAK,EAAEP,KAAK,CAACY,KAAvC;AAA8C,MAAA,EAAE,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,KAAK,CAACM,MADT,CAFF,CADF,EAOGJ,UAAU,GAAG,IAAH,gBAAU,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAET,KAAK,CAACc,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPvB,CADF;AAWD,GAbA,CAVH,CADF;AA2BD,CA7BkB,CAAnB","sourcesContent":["import { Trade } from '@pangolindex/sdk'\nimport React, { Fragment, memo, useContext } from 'react'\nimport { ChevronRight } from 'react-feather'\nimport { Flex } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { TYPE } from '../../theme'\nimport CurrencyLogo from '../CurrencyLogo'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  const theme = useContext(ThemeContext)\n  return (\n    <Flex\n      px=\"1rem\"\n      py=\"0.5rem\"\n      my=\"0.5rem\"\n      style={{ border: `1px solid ${theme.bg3}`, borderRadius: '1rem' }}\n      flexWrap=\"wrap\"\n      width=\"100%\"\n      justifyContent=\"space-evenly\"\n      alignItems=\"center\"\n    >\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        return (\n          <Fragment key={i}>\n            <Flex my=\"0.5rem\" alignItems=\"center\" style={{ flexShrink: 0 }}>\n              <CurrencyLogo currency={token} size=\"1.5rem\" />\n              <TYPE.black fontSize={14} color={theme.text1} ml=\"0.5rem\">\n                {token.symbol}\n              </TYPE.black>\n            </Flex>\n            {isLastItem ? null : <ChevronRight color={theme.text2} />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}