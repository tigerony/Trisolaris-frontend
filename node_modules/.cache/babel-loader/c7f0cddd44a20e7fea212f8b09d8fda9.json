{"ast":null,"code":"import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport XHR from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nexport const availableLanguages = ['en', 'de', 'tr', 'zh', 'es', 'fr', 'pt-br'];\nexport const defaultLocale = 'en';\n\nconst determineLngFn = code => {\n  if (!code || code.length === 0) {\n    return i18next.language = defaultLocale;\n  } // Full locale match\n\n\n  if (availableLanguages.includes(code.toLowerCase())) {\n    return i18next.language = code.toLowerCase();\n  } // Base locale match\n\n\n  const codeBase = code.split('-')[0].toLowerCase();\n\n  if (availableLanguages.includes(codeBase)) {\n    return i18next.language = codeBase;\n  } // Fallback\n\n\n  return i18next.language = defaultLocale;\n};\n\ni18next.use(XHR).use(LanguageDetector).use(initReactI18next).init({\n  backend: {\n    loadPath: `./locales/{{lng}}.json`\n  },\n  react: {\n    useSuspense: true\n  },\n  lowerCaseLng: true,\n  fallbackLng: determineLngFn,\n  preload: [defaultLocale],\n  keySeparator: '.',\n  interpolation: {\n    escapeValue: false\n  }\n});\nexport default i18next;","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/i18n.ts"],"names":["i18next","initReactI18next","XHR","LanguageDetector","availableLanguages","defaultLocale","determineLngFn","code","length","language","includes","toLowerCase","codeBase","split","use","init","backend","loadPath","react","useSuspense","lowerCaseLng","fallbackLng","preload","keySeparator","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,OAArC,CAA3B;AACP,OAAO,MAAMC,aAAa,GAAG,IAAtB;;AAEP,MAAMC,cAAc,GAAIC,IAAD,IAA0B;AAC/C,MAAI,CAACA,IAAD,IAASA,IAAI,CAACC,MAAL,KAAgB,CAA7B,EAAgC;AAC9B,WAAOR,OAAO,CAACS,QAAR,GAAmBJ,aAA1B;AACD,GAH8C,CAK/C;;;AACA,MAAID,kBAAkB,CAACM,QAAnB,CAA4BH,IAAI,CAACI,WAAL,EAA5B,CAAJ,EAAqD;AACnD,WAAOX,OAAO,CAACS,QAAR,GAAmBF,IAAI,CAACI,WAAL,EAA1B;AACD,GAR8C,CAU/C;;;AACA,QAAMC,QAAQ,GAAGL,IAAI,CAACM,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBF,WAAnB,EAAjB;;AACA,MAAIP,kBAAkB,CAACM,QAAnB,CAA4BE,QAA5B,CAAJ,EAA2C;AACzC,WAAOZ,OAAO,CAACS,QAAR,GAAmBG,QAA1B;AACD,GAd8C,CAgB/C;;;AACA,SAAOZ,OAAO,CAACS,QAAR,GAAmBJ,aAA1B;AACD,CAlBD;;AAoBAL,OAAO,CACJc,GADH,CACOZ,GADP,EAEGY,GAFH,CAEOX,gBAFP,EAGGW,GAHH,CAGOb,gBAHP,EAIGc,IAJH,CAIQ;AACJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAG;AADJ,GADL;AAIJC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR,GAJH;AAOJC,EAAAA,YAAY,EAAE,IAPV;AAQJC,EAAAA,WAAW,EAAEf,cART;AASJgB,EAAAA,OAAO,EAAE,CAACjB,aAAD,CATL;AAUJkB,EAAAA,YAAY,EAAE,GAVV;AAWJC,EAAAA,aAAa,EAAE;AAAEC,IAAAA,WAAW,EAAE;AAAf;AAXX,CAJR;AAkBA,eAAezB,OAAf","sourcesContent":["import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport XHR from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\nexport const availableLanguages = ['en', 'de', 'tr', 'zh', 'es', 'fr', 'pt-br']\nexport const defaultLocale = 'en'\n\nconst determineLngFn = (code: string): string => {\n  if (!code || code.length === 0) {\n    return i18next.language = defaultLocale\n  }\n\n  // Full locale match\n  if (availableLanguages.includes(code.toLowerCase())) {\n    return i18next.language = code.toLowerCase()\n  }\n\n  // Base locale match\n  const codeBase = code.split('-')[0].toLowerCase()\n  if (availableLanguages.includes(codeBase)) {\n    return i18next.language = codeBase\n  }\n\n  // Fallback\n  return i18next.language = defaultLocale\n}\n\ni18next\n  .use(XHR)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: `./locales/{{lng}}.json`\n    },\n    react: {\n      useSuspense: true\n    },\n    lowerCaseLng: true,\n    fallbackLng: determineLngFn,\n    preload: [defaultLocale],\n    keySeparator: '.',\n    interpolation: { escapeValue: false }\n  })\n\nexport default i18next\n"]},"metadata":{},"sourceType":"module"}