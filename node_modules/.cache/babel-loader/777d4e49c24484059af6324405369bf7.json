{"ast":null,"code":"// assumes user's country based on locale\nexport default function getCountry() {\n  const {\n    languages\n  } = navigator;\n\n  for (let i = 0; i < languages.length; i++) {\n    const [, countryCode] = languages[i].split(\"-\");\n\n    if (countryCode) {\n      return countryCode.toUpperCase();\n    }\n  }\n\n  return \"US\";\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/utils/extractCountry.ts"],"names":["getCountry","languages","navigator","i","length","countryCode","split","toUpperCase"],"mappings":"AAAA;AACA,eAAe,SAASA,UAAT,GAA8B;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAgBC,SAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAM,GAAGE,WAAH,IAAkBJ,SAAS,CAACE,CAAD,CAAT,CAAaG,KAAb,CAAmB,GAAnB,CAAxB;;AACA,QAAID,WAAJ,EAAiB;AACf,aAAOA,WAAW,CAACE,WAAZ,EAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD","sourcesContent":["// assumes user's country based on locale\nexport default function getCountry(): string {\n  const { languages } = navigator;\n  for (let i = 0; i < languages.length; i++) {\n    const [, countryCode] = languages[i].split(\"-\");\n    if (countryCode) {\n      return countryCode.toUpperCase();\n    }\n  }\n  return \"US\";\n}"]},"metadata":{},"sourceType":"module"}