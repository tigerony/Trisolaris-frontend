{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { parse } from 'qs';\nimport { updateUserDarkMode } from '../state/user/actions';\nexport default function DarkModeQueryParamReader({\n  location: {\n    search\n  }\n}) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!search) return;\n    if (search.length < 2) return;\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true\n    });\n    const theme = parsed.theme;\n    if (typeof theme !== 'string') return;\n\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({\n        userDarkMode: false\n      }));\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({\n        userDarkMode: true\n      }));\n    }\n  }, [dispatch, search]);\n  return null;\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/theme/DarkModeQueryParamReader.tsx"],"names":["useEffect","useDispatch","parse","updateUserDarkMode","DarkModeQueryParamReader","location","search","dispatch","length","parsed","parseArrays","ignoreQueryPrefix","theme","toLowerCase","userDarkMode"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,KAAT,QAAsB,IAAtB;AAEA,SAASC,kBAAT,QAAmC,uBAAnC;AAEA,eAAe,SAASC,wBAAT,CAAkC;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA;AAAF;AAAZ,CAAlC,EAAuF;AACpG,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,MAAL,EAAa;AACb,QAAIA,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AAEvB,UAAMC,MAAM,GAAGP,KAAK,CAACI,MAAD,EAAS;AAC3BI,MAAAA,WAAW,EAAE,KADc;AAE3BC,MAAAA,iBAAiB,EAAE;AAFQ,KAAT,CAApB;AAKA,UAAMC,KAAK,GAAGH,MAAM,CAACG,KAArB;AAEA,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;;AAE/B,QAAIA,KAAK,CAACC,WAAN,OAAwB,OAA5B,EAAqC;AACnCN,MAAAA,QAAQ,CAACJ,kBAAkB,CAAC;AAAEW,QAAAA,YAAY,EAAE;AAAhB,OAAD,CAAnB,CAAR;AACD,KAFD,MAEO,IAAIF,KAAK,CAACC,WAAN,OAAwB,MAA5B,EAAoC;AACzCN,MAAAA,QAAQ,CAACJ,kBAAkB,CAAC;AAAEW,QAAAA,YAAY,EAAE;AAAhB,OAAD,CAAnB,CAAR;AACD;AACF,GAlBQ,EAkBN,CAACP,QAAD,EAAWD,MAAX,CAlBM,CAAT;AAoBA,SAAO,IAAP;AACD","sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { parse } from 'qs'\nimport { AppDispatch } from '../state'\nimport { updateUserDarkMode } from '../state/user/actions'\n\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps): null {\n  const dispatch = useDispatch<AppDispatch>()\n\n  useEffect(() => {\n    if (!search) return\n    if (search.length < 2) return\n\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true\n    })\n\n    const theme = parsed.theme\n\n    if (typeof theme !== 'string') return\n\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({ userDarkMode: false }))\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({ userDarkMode: true }))\n    }\n  }, [dispatch, search])\n\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}