{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/SearchModal/CommonBases.tsx\";\nimport React from 'react';\nimport { Text } from 'rebass';\nimport { currencyEquals, CAVAX, Token } from '@pangolindex/sdk';\nimport styled from 'styled-components';\nimport { SUGGESTED_BASES } from '../../constants';\nimport { AutoColumn } from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { AutoRow } from '../Row';\nimport CurrencyLogo from '../CurrencyLogo';\nimport { useTranslation } from 'react-i18next';\nconst BaseWrapper = styled.div`\n  border: 1px solid ${({\n  theme,\n  disable\n}) => disable ? 'transparent' : theme.bg3};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({\n  disable\n}) => !disable && 'pointer'};\n    background-color: ${({\n  theme,\n  disable\n}) => !disable && theme.bg2};\n  }\n\n  background-color: ${({\n  theme,\n  disable\n}) => disable && theme.bg3};\n  opacity: ${({\n  disable\n}) => disable && '0.4'};\n`;\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency\n}) {\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, t('searchModal.commonBases')), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: t('searchModal.tokensPairsHelper'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AutoRow, {\n    gap: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseWrapper, {\n    onClick: () => {\n      if (!selectedCurrency || !currencyEquals(selectedCurrency, CAVAX)) {\n        onSelect(CAVAX);\n      }\n    },\n    disable: selectedCurrency === CAVAX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: CAVAX,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"AVAX\")), (chainId ? SUGGESTED_BASES[chainId] : []).map(token => {\n    const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address;\n    return /*#__PURE__*/React.createElement(BaseWrapper, {\n      onClick: () => !selected && onSelect(token),\n      disable: selected,\n      key: token.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n      currency: token,\n      style: {\n        marginRight: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 500,\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, token.symbol));\n  })));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/SearchModal/CommonBases.tsx"],"names":["React","Text","currencyEquals","CAVAX","Token","styled","SUGGESTED_BASES","AutoColumn","QuestionHelper","AutoRow","CurrencyLogo","useTranslation","BaseWrapper","div","theme","disable","bg3","bg2","CommonBases","chainId","onSelect","selectedCurrency","t","marginRight","map","token","selected","address","symbol"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAA4BC,cAA5B,EAA4CC,KAA5C,EAAmDC,KAAnD,QAAgE,kBAAhE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,WAAW,GAAGP,MAAM,CAACQ,GAA2B;AACtD,sBAAsB,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyBA,OAAO,GAAG,aAAH,GAAmBD,KAAK,CAACE,GAAK;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAiB,CAACA,OAAD,IAAY,SAAU;AACrD,wBAAwB,CAAC;AAAED,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB,CAACA,OAAD,IAAYD,KAAK,CAACG,GAAI;AACtE;AACA;AACA,sBAAsB,CAAC;AAAEH,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwBA,OAAO,IAAID,KAAK,CAACE,GAAI;AACnE,aAAa,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAiBA,OAAO,IAAI,KAAM;AAC/C,CAdA;AAgBA,eAAe,SAASG,WAAT,CAAqB;AAClCC,EAAAA,OADkC;AAElCC,EAAAA,QAFkC;AAGlCC,EAAAA;AAHkC,CAArB,EAQZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AACA,sBACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAuB,IAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,CAAC,CAAC,yBAAD,CADJ,CADF,eAIE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEA,CAAC,CAAC,+BAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAI,CAACD,gBAAD,IAAqB,CAACnB,cAAc,CAACmB,gBAAD,EAAmBlB,KAAnB,CAAxC,EAAmE;AACjEiB,QAAAA,QAAQ,CAACjB,KAAD,CAAR;AACD;AACF,KALH;AAME,IAAA,OAAO,EAAEkB,gBAAgB,KAAKlB,KANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,KAAxB;AAA+B,IAAA,KAAK,EAAE;AAAEoB,MAAAA,WAAW,EAAE;AAAf,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAuB,IAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADF,EAcG,CAACJ,OAAO,GAAGb,eAAe,CAACa,OAAD,CAAlB,GAA8B,EAAtC,EAA0CK,GAA1C,CAA+CC,KAAD,IAAkB;AAC/D,UAAMC,QAAQ,GAAGL,gBAAgB,YAAYjB,KAA5B,IAAqCiB,gBAAgB,CAACM,OAAjB,KAA6BF,KAAK,CAACE,OAAzF;AACA,wBACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,MAAM,CAACD,QAAD,IAAaN,QAAQ,CAACK,KAAD,CAAjD;AAA0D,MAAA,OAAO,EAAEC,QAAnE;AAA6E,MAAA,GAAG,EAAED,KAAK,CAACE,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEF,KAAxB;AAA+B,MAAA,KAAK,EAAE;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,GAAlB;AAAuB,MAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,KAAK,CAACG,MADT,CAFF,CADF;AAQD,GAVA,CAdH,CAPF,CADF;AAoCD","sourcesContent":["import React from 'react'\nimport { Text } from 'rebass'\nimport { ChainId, Currency, currencyEquals, CAVAX, Token } from '@pangolindex/sdk'\nimport styled from 'styled-components'\n\nimport { SUGGESTED_BASES } from '../../constants'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { useTranslation } from 'react-i18next'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.bg3)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.bg2};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.bg3};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontWeight={500} fontSize={14}>\n          {t('searchModal.commonBases')}\n        </Text>\n        <QuestionHelper text={t('searchModal.tokensPairsHelper')} />\n      </AutoRow>\n      <AutoRow gap=\"4px\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, CAVAX)) {\n              onSelect(CAVAX)\n            }\n          }}\n          disable={selectedCurrency === CAVAX}\n        >\n          <CurrencyLogo currency={CAVAX} style={{ marginRight: 8 }} />\n          <Text fontWeight={500} fontSize={16}>\n            AVAX\n          </Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text fontWeight={500} fontSize={16}>\n                {token.symbol}\n              </Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}