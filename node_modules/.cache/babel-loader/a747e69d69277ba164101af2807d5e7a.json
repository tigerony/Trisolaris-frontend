{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/Header/PngBalanceContent.tsx\";\nimport { TokenAmount, WAVAX, JSBI } from '@pangolindex/sdk';\nimport React, { useMemo, useState } from 'react';\nimport { X } from 'react-feather';\nimport styled from 'styled-components';\nimport tokenLogo from '../../assets/images/token-logo.png';\nimport { injected } from '../../connectors';\nimport { PNG } from '../../constants';\nimport { useTotalSupply } from '../../data/TotalSupply';\nimport { useActiveWeb3React } from '../../hooks';\nimport { STAKING_REWARDS_CURRENT_VERSION, useTotalPngEarned } from '../../state/stake/hooks';\nimport { useAggregatePngBalance, useTokenBalance } from '../../state/wallet/hooks';\nimport { StyledInternalLink, TYPE, PngTokenAnimated } from '../../theme';\nimport { AutoColumn } from '../Column';\nimport { RowBetween } from '../Row';\nimport { Break, CardBGImage, CardNoise, CardSection, DataCard } from '../earn/styled';\nimport { usePair } from '../../data/Reserves';\nimport { useTranslation } from 'react-i18next';\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n`;\nconst ModalUpper = styled(DataCard)`\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #f97316 0%, #e84142 100%);\n  padding: 0.5rem;\n`;\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 16px;\n  top: 16px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst AddPNG = styled.span`\n  width: 100%;\n  height: 100%;\n  font-weight: 500;\n  font-size: 32;\n  padding: 4px 6px;\n  align-items: center;\n  text-align: center;\n  background-color: ${({\n  theme\n}) => theme.bg3};\n  background: radial-gradient(174.47% 188.91% at 1.84% 0%, #f97316 0%, #e84142 100%), #edeef2;\n  border-radius: 12px;\n  white-space: nowrap;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n/**\n * Content for balance stats modal\n */\n\nexport default function PngBalanceContent({\n  setShowPngBalanceModal\n}) {\n  var _pngPrice$toFixed, _pngPrice;\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const png = chainId ? PNG[chainId] : undefined;\n  const total = useAggregatePngBalance();\n  const pngBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, png);\n  const pngToClaim = useTotalPngEarned();\n  const totalSupply = useTotalSupply(png); // Determine PNG price in AVAX\n\n  const wavax = WAVAX[chainId ? chainId : 43114];\n  const [, avaxPngTokenPair] = usePair(wavax, png);\n  const oneToken = JSBI.BigInt(1000000000000000000);\n  const {\n    t\n  } = useTranslation();\n  let pngPrice;\n\n  if (avaxPngTokenPair && png) {\n    const avaxPngRatio = JSBI.divide(JSBI.multiply(oneToken, avaxPngTokenPair.reserveOf(wavax).raw), avaxPngTokenPair.reserveOf(png).raw);\n    pngPrice = JSBI.toNumber(avaxPngRatio) / 1000000000000000000;\n  }\n\n  const [circulation, setCirculation] = useState(totalSupply);\n  useMemo(() => {\n    if (png === undefined) return;\n    fetch(`https://api.pangolin.exchange/png/circulating-supply`).then(res => res.text()).then(val => setCirculation(new TokenAmount(png, val)));\n  }, [png]);\n  return /*#__PURE__*/React.createElement(ContentWrapper, {\n    gap: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalUpper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, t('header.pngBreakDown')), /*#__PURE__*/React.createElement(StyledClose, {\n    stroke: \"white\",\n    onClick: () => setShowPngBalanceModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Break, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), account && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardSection, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PngTokenAnimated, {\n    width: \"48px\",\n    src: tokenLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), ' ', /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 48,\n    fontWeight: 600,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, total === null || total === void 0 ? void 0 : total.toFixed(2, {\n    groupSeparator: ','\n  }))), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, t('header.balance')), /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, pngBalance === null || pngBalance === void 0 ? void 0 : pngBalance.toFixed(2, {\n    groupSeparator: ','\n  }))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, t('header.unclaimed')), /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, pngToClaim === null || pngToClaim === void 0 ? void 0 : pngToClaim.toFixed(4, {\n    groupSeparator: ','\n  }), ' ', pngToClaim && pngToClaim.greaterThan('0') && /*#__PURE__*/React.createElement(StyledInternalLink, {\n    onClick: () => setShowPngBalanceModal(false),\n    to: `/png/${STAKING_REWARDS_CURRENT_VERSION}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }\n  }, \"(\", t('earn.claim'), \")\"))))), /*#__PURE__*/React.createElement(Break, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CardSection, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, t('header.pngPrice')), /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, (_pngPrice$toFixed = (_pngPrice = pngPrice) === null || _pngPrice === void 0 ? void 0 : _pngPrice.toFixed(5)) !== null && _pngPrice$toFixed !== void 0 ? _pngPrice$toFixed : '-', \" AVAX\")), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, t('header.pngCirculation')), /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, circulation === null || circulation === void 0 ? void 0 : circulation.toFixed(0, {\n    groupSeparator: ','\n  }))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, t('header.totalSupply')), /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, totalSupply === null || totalSupply === void 0 ? void 0 : totalSupply.toFixed(0, {\n    groupSeparator: ','\n  }))))), account && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardSection, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddPNG, {\n    onClick: () => {\n      injected.getProvider().then(provider => {\n        if (provider) {\n          provider.request({\n            method: 'wallet_watchAsset',\n            params: {\n              type: 'ERC20',\n              options: {\n                address: png === null || png === void 0 ? void 0 : png.address,\n                symbol: png === null || png === void 0 ? void 0 : png.symbol,\n                decimals: png === null || png === void 0 ? void 0 : png.decimals,\n                image: 'https://raw.githubusercontent.com/pangolindex/tokens/main/assets/0x60781C2586D68229fde47564546784ab3fACA982/logo.png'\n              }\n            }\n          }).catch(error => {\n            console.error(error);\n          });\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, t('header.addmetamask'))))))));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/Header/PngBalanceContent.tsx"],"names":["TokenAmount","WAVAX","JSBI","React","useMemo","useState","X","styled","tokenLogo","injected","PNG","useTotalSupply","useActiveWeb3React","STAKING_REWARDS_CURRENT_VERSION","useTotalPngEarned","useAggregatePngBalance","useTokenBalance","StyledInternalLink","TYPE","PngTokenAnimated","AutoColumn","RowBetween","Break","CardBGImage","CardNoise","CardSection","DataCard","usePair","useTranslation","ContentWrapper","ModalUpper","StyledClose","AddPNG","span","theme","bg3","PngBalanceContent","setShowPngBalanceModal","account","chainId","png","undefined","total","pngBalance","pngToClaim","totalSupply","wavax","avaxPngTokenPair","oneToken","BigInt","t","pngPrice","avaxPngRatio","divide","multiply","reserveOf","raw","toNumber","circulation","setCirculation","fetch","then","res","text","val","toFixed","groupSeparator","greaterThan","getProvider","provider","request","method","params","type","options","address","symbol","decimals","image","catch","error","console"],"mappings":"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","sourcesContent":["import { TokenAmount, WAVAX, JSBI } from '@pangolindex/sdk'\nimport React, { useMemo, useState } from 'react'\nimport { X } from 'react-feather'\nimport styled from 'styled-components'\nimport tokenLogo from '../../assets/images/token-logo.png'\nimport { injected } from '../../connectors'\nimport { PNG } from '../../constants'\nimport { useTotalSupply } from '../../data/TotalSupply'\nimport { useActiveWeb3React } from '../../hooks'\nimport { STAKING_REWARDS_CURRENT_VERSION, useTotalPngEarned } from '../../state/stake/hooks'\nimport { useAggregatePngBalance, useTokenBalance } from '../../state/wallet/hooks'\nimport { StyledInternalLink, TYPE, PngTokenAnimated } from '../../theme'\nimport { AutoColumn } from '../Column'\nimport { RowBetween } from '../Row'\nimport { Break, CardBGImage, CardNoise, CardSection, DataCard } from '../earn/styled'\nimport { usePair } from '../../data/Reserves'\nimport { useTranslation } from 'react-i18next'\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n`\n\nconst ModalUpper = styled(DataCard)`\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #f97316 0%, #e84142 100%);\n  padding: 0.5rem;\n`\n\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 16px;\n  top: 16px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\nconst AddPNG = styled.span`\n  width: 100%;\n  height: 100%;\n  font-weight: 500;\n  font-size: 32;\n  padding: 4px 6px;\n  align-items: center;\n  text-align: center;\n  background-color: ${({ theme }) => theme.bg3};\n  background: radial-gradient(174.47% 188.91% at 1.84% 0%, #f97316 0%, #e84142 100%), #edeef2;\n  border-radius: 12px;\n  white-space: nowrap;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`\n\n/**\n * Content for balance stats modal\n */\nexport default function PngBalanceContent({ setShowPngBalanceModal }: { setShowPngBalanceModal: any }) {\n  const { account, chainId } = useActiveWeb3React()\n  const png = chainId ? PNG[chainId] : undefined\n\n  const total = useAggregatePngBalance()\n  const pngBalance: TokenAmount | undefined = useTokenBalance(account ?? undefined, png)\n  const pngToClaim: TokenAmount | undefined = useTotalPngEarned()\n\n  const totalSupply: TokenAmount | undefined = useTotalSupply(png)\n\n  // Determine PNG price in AVAX\n  const wavax = WAVAX[chainId ? chainId : 43114]\n  const [, avaxPngTokenPair] = usePair(wavax, png)\n  const oneToken = JSBI.BigInt(1000000000000000000)\n  const { t } = useTranslation()\n  let pngPrice: number | undefined\n  if (avaxPngTokenPair && png) {\n    const avaxPngRatio = JSBI.divide(\n      JSBI.multiply(oneToken, avaxPngTokenPair.reserveOf(wavax).raw),\n      avaxPngTokenPair.reserveOf(png).raw\n    )\n    pngPrice = JSBI.toNumber(avaxPngRatio) / 1000000000000000000\n  }\n\n  const [circulation, setCirculation] = useState(totalSupply)\n\n  useMemo(() => {\n    if (png === undefined) return\n    fetch(`https://api.pangolin.exchange/png/circulating-supply`)\n      .then(res => res.text())\n      .then(val => setCirculation(new TokenAmount(png, val)))\n  }, [png])\n\n  return (\n    <ContentWrapper gap=\"lg\">\n      <ModalUpper>\n        <CardBGImage />\n        <CardNoise />\n        <CardSection gap=\"md\">\n          <RowBetween>\n            <TYPE.white color=\"white\">{t('header.pngBreakDown')}</TYPE.white>\n            <StyledClose stroke=\"white\" onClick={() => setShowPngBalanceModal(false)} />\n          </RowBetween>\n        </CardSection>\n        <Break />\n        {account && (\n          <>\n            <CardSection gap=\"sm\">\n              <AutoColumn gap=\"md\" justify=\"center\">\n                <PngTokenAnimated width=\"48px\" src={tokenLogo} />{' '}\n                <TYPE.white fontSize={48} fontWeight={600} color=\"white\">\n                  {total?.toFixed(2, { groupSeparator: ',' })}\n                </TYPE.white>\n              </AutoColumn>\n              <AutoColumn gap=\"md\">\n                <RowBetween>\n                  <TYPE.white color=\"white\">{t('header.balance')}</TYPE.white>\n                  <TYPE.white color=\"white\">{pngBalance?.toFixed(2, { groupSeparator: ',' })}</TYPE.white>\n                </RowBetween>\n                <RowBetween>\n                  <TYPE.white color=\"white\">{t('header.unclaimed')}</TYPE.white>\n                  <TYPE.white color=\"white\">\n                    {pngToClaim?.toFixed(4, { groupSeparator: ',' })}{' '}\n                    {pngToClaim && pngToClaim.greaterThan('0') && (\n                      <StyledInternalLink\n                        onClick={() => setShowPngBalanceModal(false)}\n                        to={`/png/${STAKING_REWARDS_CURRENT_VERSION}`}>\n                        ({t('earn.claim')})\n                      </StyledInternalLink>\n                    )}\n                  </TYPE.white>\n                </RowBetween>\n              </AutoColumn>\n            </CardSection>\n            <Break />\n          </>\n        )}\n        <CardSection gap=\"sm\">\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <TYPE.white color=\"white\">{t('header.pngPrice')}</TYPE.white>\n              <TYPE.white color=\"white\">{pngPrice?.toFixed(5) ?? '-'} AVAX</TYPE.white>\n            </RowBetween>\n            <RowBetween>\n              <TYPE.white color=\"white\">{t('header.pngCirculation')}</TYPE.white>\n              <TYPE.white color=\"white\">{circulation?.toFixed(0, { groupSeparator: ',' })}</TYPE.white>\n            </RowBetween>\n            <RowBetween>\n              <TYPE.white color=\"white\">{t('header.totalSupply')}</TYPE.white>\n              <TYPE.white color=\"white\">{totalSupply?.toFixed(0, { groupSeparator: ',' })}</TYPE.white>\n            </RowBetween>\n          </AutoColumn>\n        </CardSection>\n        {account && (\n          <>\n          <CardSection gap=\"sm\">\n            <AutoColumn gap=\"md\">\n              <AddPNG onClick={() => {\n                injected.getProvider().then(provider => {\n                  if (provider) {\n                    provider.request({\n                      method: 'wallet_watchAsset',\n                      params: {\n                        type: 'ERC20',\n                        options: {\n                          address: png?.address,\n                          symbol: png?.symbol,\n                          decimals: png?.decimals,\n                          image: 'https://raw.githubusercontent.com/pangolindex/tokens/main/assets/0x60781C2586D68229fde47564546784ab3fACA982/logo.png',\n                        },\n                      },\n                    }).catch((error: any) => {\n                      console.error(error)\n                    })\n                  }\n                });\n              }\n            }>\n                <TYPE.white color=\"white\">{t('header.addmetamask')}</TYPE.white>\n              </AddPNG>\n            </AutoColumn>\n          </CardSection>\n          </>\n          )\n        }\n      </ModalUpper>\n    </ContentWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}