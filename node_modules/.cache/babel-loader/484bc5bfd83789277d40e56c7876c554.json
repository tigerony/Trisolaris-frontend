{"ast":null,"code":"export function filterFiats(fiats, search) {\n  if (search.length === 0) return fiats;\n  const lowerSearchParts = search.toLowerCase().split(/\\s+/).filter(s => s.length > 0);\n\n  if (lowerSearchParts.length === 0) {\n    return fiats;\n  }\n\n  const matchesSearch = s => {\n    const sParts = s.toLowerCase().split(/\\s+/).filter(s => s.length > 0);\n    return lowerSearchParts.every(p => p.length === 0 || sParts.some(sp => sp.startsWith(p) || sp.endsWith(p)));\n  };\n\n  return fiats.filter(fiat => {\n    const {\n      symbol,\n      name\n    } = fiat;\n    return symbol && matchesSearch(symbol) || name && matchesSearch(name);\n  });\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/FiatInputPanel/filtering.ts"],"names":["filterFiats","fiats","search","length","lowerSearchParts","toLowerCase","split","filter","s","matchesSearch","sParts","every","p","some","sp","startsWith","endsWith","fiat","symbol","name"],"mappings":"AAEA,OAAO,SAASA,WAAT,CAAqBC,KAArB,EAAoCC,MAApC,EAA4D;AACjE,MAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB,OAAOF,KAAP;AAEzB,QAAMG,gBAAgB,GAAGF,MAAM,CAC5BG,WADsB,GAEtBC,KAFsB,CAEhB,KAFgB,EAGtBC,MAHsB,CAGfC,CAAC,IAAIA,CAAC,CAACL,MAAF,GAAW,CAHD,CAAzB;;AAKA,MAAIC,gBAAgB,CAACD,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,WAAOF,KAAP;AACD;;AAED,QAAMQ,aAAa,GAAID,CAAD,IAAwB;AAC5C,UAAME,MAAM,GAAGF,CAAC,CACbH,WADY,GAEZC,KAFY,CAEN,KAFM,EAGZC,MAHY,CAGLC,CAAC,IAAIA,CAAC,CAACL,MAAF,GAAW,CAHX,CAAf;AAKA,WAAOC,gBAAgB,CAACO,KAAjB,CAAuBC,CAAC,IAAIA,CAAC,CAACT,MAAF,KAAa,CAAb,IAAkBO,MAAM,CAACG,IAAP,CAAYC,EAAE,IAAIA,EAAE,CAACC,UAAH,CAAcH,CAAd,KAAoBE,EAAE,CAACE,QAAH,CAAYJ,CAAZ,CAAtC,CAA9C,CAAP;AACD,GAPD;;AASA,SAAOX,KAAK,CAACM,MAAN,CAAaU,IAAI,IAAI;AAC1B,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAmBF,IAAzB;AAEA,WAAQC,MAAM,IAAIT,aAAa,CAACS,MAAD,CAAxB,IAAsCC,IAAI,IAAIV,aAAa,CAACU,IAAD,CAAlE;AACD,GAJM,CAAP;AAKD","sourcesContent":["import {Fiat} from '../../constants/fiat'\n\nexport function filterFiats(fiats: Fiat[], search: string): Fiat[] {\n  if (search.length === 0) return fiats\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter(s => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return fiats\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter(s => s.length > 0)\n\n    return lowerSearchParts.every(p => p.length === 0 || sParts.some(sp => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return fiats.filter(fiat => {\n    const { symbol, name } = fiat\n\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n"]},"metadata":{},"sourceType":"module"}