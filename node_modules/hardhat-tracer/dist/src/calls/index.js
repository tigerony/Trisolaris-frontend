"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.printCalls = void 0;
const chalk_1 = __importDefault(require("chalk"));
const debug_traceTransaction_1 = require("./debug_traceTransaction");
async function printCalls(txHash, network, artifacts) {
    const receipt = await network.send("eth_getTransactionReceipt", [txHash]);
    const addressLabels = {};
    if (typeof receipt.to === "string")
        addressLabels[receipt.to.toLowerCase()] = "Receiver";
    if (typeof receipt.from === "string")
        addressLabels[receipt.from.toLowerCase()] = "Sender";
    try {
        const call = await debug_traceTransaction_1.getCalls(txHash, network);
        // console.log("call", call);
        printCall(call, 0, addressLabels);
    }
    catch (err) {
        if (err.message.includes("debug_traceTransaction")) {
            console.log(chalk_1.default.yellow(`Warning! Debug Transaction not supported on this network`));
        }
        else {
            console.error(err);
        }
    }
}
exports.printCalls = printCalls;
function printCall(call, depth, addressLabels) {
    var _a;
    // console.log(
    //   "  ".repeat(depth) +
    //     `${call.type}: ${stringifyValue(call.from, addressLabels)} ${
    //       call.type === "CREATE" || call.type === "CREATE2" ? "deployed" : "to"
    //     } ${stringifyValue(call.to, addressLabels)}`
    // );
    (_a = call.calls) === null || _a === void 0 ? void 0 : _a.forEach((c) => printCall(c, depth + 1, addressLabels));
}
//# sourceMappingURL=index.js.map