{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/Popups/ListUpdatePopup.tsx\";\nimport { diffTokenLists } from '@pangolindex/token-lists';\nimport React, { useCallback, useMemo } from 'react';\nimport ReactGA from 'react-ga';\nimport { useDispatch } from 'react-redux';\nimport { Text } from 'rebass';\nimport { useRemovePopup } from '../../state/application/hooks';\nimport { acceptListUpdate } from '../../state/lists/actions';\nimport { TYPE } from '../../theme';\nimport listVersionLabel from '../../utils/listVersionLabel';\nimport { ButtonSecondary } from '../Button';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nconst PopupUnorderedList = styled.ul`\n  overflow-y: auto;\n  max-height: 40vh;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    max-height: 15vh;\n  `};\n`;\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto\n}) {\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslation();\n  const handleAcceptUpdate = useCallback(() => {\n    if (auto) return;\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from Popup',\n      label: listUrl\n    });\n    dispatch(acceptListUpdate(listUrl));\n    removeThisPopup();\n  }, [auto, dispatch, listUrl, removeThisPopup]);\n  const {\n    added: tokensAdded,\n    changed: tokensChanged,\n    removed: tokensRemoved\n  } = useMemo(() => {\n    return diffTokenLists(oldList.tokens, newList.tokens);\n  }, [newList.tokens, oldList.tokens]);\n  const numTokensChanged = useMemo(() => Object.keys(tokensChanged).reduce((memo, chainId) => memo + Object.keys(tokensChanged[chainId]).length, 0), [tokensChanged]);\n  return /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      flex: '1'\n    },\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, auto ? /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, t('popups.tokenListUpdated', {\n    \"oldList\": oldList.name\n  }), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, listVersionLabel(newList.version)), \".\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, t('popups.updateAvailable', {\n    \"oldList\": oldList.name\n  }), \" (\", listVersionLabel(oldList.version), \" to \", listVersionLabel(newList.version), \").\"), /*#__PURE__*/React.createElement(PopupUnorderedList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, tokensAdded.length > 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, tokensAdded.map((token, i) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: `${token.chainId}-${token.address}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    title: token.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, token.symbol), i === tokensAdded.length - 1 ? null : ', ')), ' ', t('popups.added')) : null, tokensRemoved.length > 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, tokensRemoved.map((token, i) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: `${token.chainId}-${token.address}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    title: token.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, token.symbol), i === tokensRemoved.length - 1 ? null : ', ')), ' ', t('popups.removed')) : null, numTokensChanged > 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  }, numTokensChanged, \" \", t('popups.tokensUpdated')) : null)), /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexGrow: 1,\n      marginRight: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonSecondary, {\n    onClick: handleAcceptUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, t('popups.acceptUpdate'))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonSecondary, {\n    onClick: removeThisPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, t('popups.dismiss')))))));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/Popups/ListUpdatePopup.tsx"],"names":["diffTokenLists","React","useCallback","useMemo","ReactGA","useDispatch","Text","useRemovePopup","acceptListUpdate","TYPE","listVersionLabel","ButtonSecondary","AutoColumn","AutoRow","useTranslation","styled","PopupUnorderedList","ul","theme","mediaWidth","upToSmall","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removePopup","removeThisPopup","dispatch","t","handleAcceptUpdate","event","category","action","label","added","tokensAdded","changed","tokensChanged","removed","tokensRemoved","tokens","numTokensChanged","Object","keys","reduce","memo","chainId","length","flex","name","version","map","token","i","address","symbol","flexGrow","marginRight"],"mappings":"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","sourcesContent":["import { diffTokenLists, TokenList } from '@pangolindex/token-lists'\nimport React, { useCallback, useMemo } from 'react'\nimport ReactGA from 'react-ga'\nimport { useDispatch } from 'react-redux'\nimport { Text } from 'rebass'\nimport { AppDispatch } from '../../state'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport { acceptListUpdate } from '../../state/lists/actions'\nimport { TYPE } from '../../theme'\nimport listVersionLabel from '../../utils/listVersionLabel'\nimport { ButtonSecondary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\n\nconst PopupUnorderedList = styled.ul`\n  overflow-y: auto;\n  max-height: 40vh;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    max-height: 15vh;\n  `};\n`\n\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto\n}: {\n  popKey: string\n  listUrl: string\n  oldList: TokenList\n  newList: TokenList\n  auto: boolean\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const handleAcceptUpdate = useCallback(() => {\n    if (auto) return\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from Popup',\n      label: listUrl\n    })\n    dispatch(acceptListUpdate(listUrl))\n    removeThisPopup()\n  }, [auto, dispatch, listUrl, removeThisPopup])\n\n  const { added: tokensAdded, changed: tokensChanged, removed: tokensRemoved } = useMemo(() => {\n    return diffTokenLists(oldList.tokens, newList.tokens)\n  }, [newList.tokens, oldList.tokens])\n  const numTokensChanged = useMemo(\n    () =>\n      Object.keys(tokensChanged).reduce((memo, chainId: any) => memo + Object.keys(tokensChanged[chainId]).length, 0),\n    [tokensChanged]\n  )\n\n  return (\n    <AutoRow>\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\n        {auto ? (\n          <TYPE.body fontWeight={500}>\n            {t('popups.tokenListUpdated', {\"oldList\": oldList.name})}{' '}\n            <strong>{listVersionLabel(newList.version)}</strong>.\n          </TYPE.body>\n        ) : (\n          <>\n            <div>\n              <Text>\n                {t('popups.updateAvailable', {\"oldList\": oldList.name})} (\n                {listVersionLabel(oldList.version)} to {listVersionLabel(newList.version)}).\n              </Text>\n              <PopupUnorderedList>\n                {tokensAdded.length > 0 ? (\n                  <li>\n                    {tokensAdded.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensAdded.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    {t('popups.added')}\n                  </li>\n                ) : null}\n                {tokensRemoved.length > 0 ? (\n                  <li>\n                    {tokensRemoved.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensRemoved.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    {t('popups.removed')}\n                  </li>\n                ) : null}\n                {numTokensChanged > 0 ? <li>{numTokensChanged} {t('popups.tokensUpdated')}</li> : null}\n              </PopupUnorderedList>\n            </div>\n            <AutoRow>\n              <div style={{ flexGrow: 1, marginRight: 12 }}>\n                <ButtonSecondary onClick={handleAcceptUpdate}>{t('popups.acceptUpdate')}</ButtonSecondary>\n              </div>\n              <div style={{ flexGrow: 1 }}>\n                <ButtonSecondary onClick={removeThisPopup}>{t('popups.dismiss')}</ButtonSecondary>\n              </div>\n            </AutoRow>\n          </>\n        )}\n      </AutoColumn>\n    </AutoRow>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}