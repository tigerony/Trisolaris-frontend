{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/AccountDetails/Copy.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport useCopyClipboard from '../../hooks/useCopyClipboard';\nimport { LinkStyledButton } from '../../theme';\nimport { CheckCircle, Copy } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nconst CopyIcon = styled(LinkStyledButton)`\n  color: ${({\n  theme\n}) => theme.text3};\n  flex-shrink: 0;\n  display: flex;\n  text-decoration: none;\n  font-size: 0.825rem;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    color: ${({\n  theme\n}) => theme.text2};\n  }\n`;\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  font-size: 0.825rem;\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  align-items: center;\n`;\nexport default function CopyHelper(props) {\n  const [isCopied, setCopied] = useCopyClipboard();\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(CopyIcon, {\n    onClick: () => setCopied(props.toCopy),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, isCopied ? /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircle, {\n    size: '16',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, t('accountDetails.copied'))) : /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Copy, {\n    size: '16',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), isCopied ? '' : props.children);\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/AccountDetails/Copy.tsx"],"names":["React","styled","useCopyClipboard","LinkStyledButton","CheckCircle","Copy","useTranslation","CopyIcon","theme","text3","text2","TransactionStatusText","span","flexRowNoWrap","CopyHelper","props","isCopied","setCopied","t","toCopy","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,eAAlC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,QAAQ,GAAGN,MAAM,CAACE,gBAAD,CAAmB;AAC1C,WAAW,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,KAAM;AACxC;AACA,CAZA;AAaA,MAAMC,qBAAqB,GAAGV,MAAM,CAACW,IAAK;AAC1C;AACA;AACA,IAAI,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,aAAc;AACvC;AACA,CALA;AAOA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2E;AACxF,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBf,gBAAgB,EAA9C;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAQZ,cAAc,EAA5B;AAEA,sBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAMW,SAAS,CAACF,KAAK,CAACI,MAAP,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,gBACP,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBE,CAAC,CAAC,uBAAD,CAAzB,CAFF,CADO,gBAMP,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPJ,EAWGF,QAAQ,GAAG,EAAH,GAAQD,KAAK,CAACK,QAXzB,CADF;AAeD","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport useCopyClipboard from '../../hooks/useCopyClipboard'\n\nimport { LinkStyledButton } from '../../theme'\nimport { CheckCircle, Copy } from 'react-feather'\nimport { useTranslation } from 'react-i18next'\n\nconst CopyIcon = styled(LinkStyledButton)`\n  color: ${({ theme }) => theme.text3};\n  flex-shrink: 0;\n  display: flex;\n  text-decoration: none;\n  font-size: 0.825rem;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    color: ${({ theme }) => theme.text2};\n  }\n`\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  font-size: 0.825rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n`\n\nexport default function CopyHelper(props: { toCopy: string; children?: React.ReactNode }) {\n  const [isCopied, setCopied] = useCopyClipboard()\n  const { t } = useTranslation()\n\n  return (\n    <CopyIcon onClick={() => setCopied(props.toCopy)}>\n      {isCopied ? (\n        <TransactionStatusText>\n          <CheckCircle size={'16'} />\n          <TransactionStatusText>{t('accountDetails.copied')}</TransactionStatusText>\n        </TransactionStatusText>\n      ) : (\n        <TransactionStatusText>\n          <Copy size={'16'} />\n        </TransactionStatusText>\n      )}\n      {isCopied ? '' : props.children}\n    </CopyIcon>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}