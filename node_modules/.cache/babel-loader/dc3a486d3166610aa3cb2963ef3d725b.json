{"ast":null,"code":"import { isAddress } from '../utils';\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\n\nexport default function useENS(nameOrAddress) {\n  const validated = isAddress(nameOrAddress);\n  return {\n    loading: false,\n    address: validated ? validated : null,\n    name: null\n  };\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/hooks/useENS.ts"],"names":["isAddress","useENS","nameOrAddress","validated","loading","address","name"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,MAAT,CACbC,aADa,EAEsD;AACnE,QAAMC,SAAS,GAAGH,SAAS,CAACE,aAAD,CAA3B;AAEA,SAAO;AACLE,IAAAA,OAAO,EAAE,KADJ;AAELC,IAAAA,OAAO,EAAEF,SAAS,GAAGA,SAAH,GAAe,IAF5B;AAGLG,IAAAA,IAAI,EAAG;AAHF,GAAP;AAKD","sourcesContent":["import { isAddress } from '../utils'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(\n  nameOrAddress?: string | null\n): { loading: boolean; address: string | null; name: string | null } {\n  const validated = isAddress(nameOrAddress)\n\n  return {\n    loading: false,\n    address: validated ? validated : null,\n    name:  null\n  }\n}"]},"metadata":{},"sourceType":"module"}