{"ast":null,"code":"import { WAVAX } from '@pangolindex/sdk';\nimport { abi as IPangolinPairABI } from '@pangolindex/exchange-contracts/artifacts/contracts/pangolin-core/interfaces/IPangolinPair.sol/IPangolinPair.json';\nimport { abi as STAKING_REWARDS_ABI } from '@pangolindex/governance/artifacts/contracts/StakingRewards.sol/StakingRewards.json';\nimport { abi as AIRDROP_ABI } from '@pangolindex/governance/artifacts/contracts/Airdrop.sol/Airdrop.json';\nimport { abi as GOVERNANCE_ABI } from '@pangolindex/governance/artifacts/contracts/GovernorAlpha.sol/GovernorAlpha.json';\nimport { abi as PNG_ABI } from '@pangolindex/governance/artifacts/contracts/PNG.sol/Png.json';\nimport { abi as BRIDGE_MIGRATOR_ABI } from '@pangolindex/exchange-contracts/artifacts/contracts/pangolin-periphery/PangolinBridgeMigrationRouter.sol/PangolinBridgeMigrationRouter.json';\nimport { useMemo } from 'react';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport BRIDGE_TOKEN_ABI from '../constants/abis/bridge-token.json';\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator';\nimport WETH_ABI from '../constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\nimport { V1_EXCHANGE_ABI, V1_FACTORY_ABI, V1_FACTORY_ADDRESSES } from '../constants/v1';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index';\nimport { AIRDROP_ADDRESS, BRIDGE_MIGRATOR_ADDRESS } from '../constants';\nimport { GOVERNANCE_ADDRESS, PNG } from '../constants'; // returns null on errors\n\nfunction useContract(address, ABI, withSignerIfPossible = true) {\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useV1FactoryContract() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && V1_FACTORY_ADDRESSES[chainId], V1_FACTORY_ABI, false);\n}\nexport function useV2MigratorContract() {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true);\n}\nexport function useBridgeMigratorContract() {\n  return useContract(BRIDGE_MIGRATOR_ADDRESS, BRIDGE_MIGRATOR_ABI, true);\n}\nexport function useV1ExchangeContract(address, withSignerIfPossible) {\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible);\n}\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\nexport function useBridgeTokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, BRIDGE_TOKEN_ABI, withSignerIfPossible);\n}\nexport function useWETHContract(withSignerIfPossible) {\n  var _WAVAX$chainId;\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? (_WAVAX$chainId = WAVAX[chainId]) === null || _WAVAX$chainId === void 0 ? void 0 : _WAVAX$chainId.address : undefined, WETH_ABI, withSignerIfPossible);\n}\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\nexport function usePairContract(pairAddress, withSignerIfPossible) {\n  return useContract(pairAddress, IPangolinPairABI, withSignerIfPossible);\n}\nexport function useMulticallContract() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\nexport function useGovernanceContract() {\n  return useContract(GOVERNANCE_ADDRESS, GOVERNANCE_ABI, true);\n}\nexport function usePngContract() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? PNG[chainId].address : undefined, PNG_ABI, true);\n}\nexport function useStakingContract(stakingAddress, withSignerIfPossible) {\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\n}\nexport function useAirdropContract() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? AIRDROP_ADDRESS[chainId] : undefined, AIRDROP_ABI, true);\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/hooks/useContract.ts"],"names":["WAVAX","abi","IPangolinPairABI","STAKING_REWARDS_ABI","AIRDROP_ABI","GOVERNANCE_ABI","PNG_ABI","BRIDGE_MIGRATOR_ABI","useMemo","ENS_PUBLIC_RESOLVER_ABI","ERC20_BYTES32_ABI","ERC20_ABI","BRIDGE_TOKEN_ABI","MIGRATOR_ABI","MIGRATOR_ADDRESS","WETH_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","V1_EXCHANGE_ABI","V1_FACTORY_ABI","V1_FACTORY_ADDRESSES","getContract","useActiveWeb3React","AIRDROP_ADDRESS","BRIDGE_MIGRATOR_ADDRESS","GOVERNANCE_ADDRESS","PNG","useContract","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useV1FactoryContract","chainId","useV2MigratorContract","useBridgeMigratorContract","useV1ExchangeContract","useTokenContract","tokenAddress","useBridgeTokenContract","useWETHContract","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","useGovernanceContract","usePngContract","useStakingContract","stakingAddress","useAirdropContract"],"mappings":"AACA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,GAAG,IAAIC,gBAAhB,QAAwC,mHAAxC;AACA,SAASD,GAAG,IAAIE,mBAAhB,QAA2C,oFAA3C;AACA,SAASF,GAAG,IAAIG,WAAhB,QAAmC,sEAAnC;AACA,SAASH,GAAG,IAAII,cAAhB,QAAsC,kFAAtC;AACA,SAASJ,GAAG,IAAIK,OAAhB,QAA+B,8DAA/B;AACA,SAASL,GAAG,IAAIM,mBAAhB,QAA2C,6IAA3C;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,uBAAP,MAAoC,4CAApC;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,4BAA/C;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,wBAAlD;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,oBAA1C,QAAsE,iBAAtE;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,kBAAT,QAAmC,SAAnC;AACA,SAASC,eAAT,EAA0BC,uBAA1B,QAAyD,cAAzD;AACA,SAASC,kBAAT,EAA6BC,GAA7B,QAAwC,cAAxC,C,CAEA;;AACA,SAASC,WAAT,CAAqBC,OAArB,EAAkDC,GAAlD,EAA4DC,oBAAoB,GAAG,IAAnF,EAA0G;AACxG,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBV,kBAAkB,EAA/C;AAEA,SAAOd,OAAO,CAAC,MAAM;AACnB,QAAI,CAACoB,OAAD,IAAY,CAACC,GAAb,IAAoB,CAACE,OAAzB,EAAkC,OAAO,IAAP;;AAClC,QAAI;AACF,aAAOV,WAAW,CAACO,OAAD,EAAUC,GAAV,EAAeE,OAAf,EAAwBD,oBAAoB,IAAIE,OAAxB,GAAkCA,OAAlC,GAA4CC,SAApE,CAAlB;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACA,aAAO,IAAP;AACD;AACF,GARa,EAQX,CAACN,OAAD,EAAUC,GAAV,EAAeE,OAAf,EAAwBD,oBAAxB,EAA8CE,OAA9C,CARW,CAAd;AASD;;AAED,OAAO,SAASI,oBAAT,GAAiD;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAcf,kBAAkB,EAAtC;AACA,SAAOK,WAAW,CAACU,OAAO,IAAIjB,oBAAoB,CAACiB,OAAD,CAAhC,EAA2ClB,cAA3C,EAA2D,KAA3D,CAAlB;AACD;AAED,OAAO,SAASmB,qBAAT,GAAkD;AACvD,SAAOX,WAAW,CAACb,gBAAD,EAAmBD,YAAnB,EAAiC,IAAjC,CAAlB;AACD;AAED,OAAO,SAAS0B,yBAAT,GAAsD;AAC3D,SAAOZ,WAAW,CAACH,uBAAD,EAA0BjB,mBAA1B,EAA+C,IAA/C,CAAlB;AACD;AAED,OAAO,SAASiC,qBAAT,CAA+BZ,OAA/B,EAAiDE,oBAAjD,EAAkG;AACvG,SAAOH,WAAW,CAACC,OAAD,EAAUV,eAAV,EAA2BY,oBAA3B,CAAlB;AACD;AAED,OAAO,SAASW,gBAAT,CAA0BC,YAA1B,EAAiDZ,oBAAjD,EAAkG;AACvG,SAAOH,WAAW,CAACe,YAAD,EAAe/B,SAAf,EAA0BmB,oBAA1B,CAAlB;AACD;AAED,OAAO,SAASa,sBAAT,CAAgCD,YAAhC,EAAuDZ,oBAAvD,EAAwG;AAC7G,SAAOH,WAAW,CAACe,YAAD,EAAe9B,gBAAf,EAAiCkB,oBAAjC,CAAlB;AACD;AAED,OAAO,SAASc,eAAT,CAAyBd,oBAAzB,EAA0E;AAAA;;AAC/E,QAAM;AAAEO,IAAAA;AAAF,MAAcf,kBAAkB,EAAtC;AACA,SAAOK,WAAW,CAACU,OAAO,qBAAGrC,KAAK,CAACqC,OAAD,CAAR,mDAAG,eAAgBT,OAAnB,GAA6BK,SAArC,EAAgDlB,QAAhD,EAA0De,oBAA1D,CAAlB;AACD;AAED,OAAO,SAASe,sBAAT,CAAgCjB,OAAhC,EAA6DE,oBAA7D,EAA8G;AACnH,SAAOH,WAAW,CAACC,OAAD,EAAUnB,uBAAV,EAAmCqB,oBAAnC,CAAlB;AACD;AAED,OAAO,SAASgB,uBAAT,CAAiCJ,YAAjC,EAAwDZ,oBAAxD,EAAyG;AAC9G,SAAOH,WAAW,CAACe,YAAD,EAAehC,iBAAf,EAAkCoB,oBAAlC,CAAlB;AACD;AAED,OAAO,SAASiB,eAAT,CAAyBC,WAAzB,EAA+ClB,oBAA/C,EAAgG;AACrG,SAAOH,WAAW,CAACqB,WAAD,EAAc9C,gBAAd,EAAgC4B,oBAAhC,CAAlB;AACD;AAED,OAAO,SAASmB,oBAAT,GAAiD;AACtD,QAAM;AAAEZ,IAAAA;AAAF,MAAcf,kBAAkB,EAAtC;AACA,SAAOK,WAAW,CAACU,OAAO,IAAIpB,kBAAkB,CAACoB,OAAD,CAA9B,EAAyCrB,aAAzC,EAAwD,KAAxD,CAAlB;AACD;AAED,OAAO,SAASkC,qBAAT,GAAkD;AACvD,SAAOvB,WAAW,CAACF,kBAAD,EAAqBpB,cAArB,EAAqC,IAArC,CAAlB;AACD;AAED,OAAO,SAAS8C,cAAT,GAA2C;AAChD,QAAM;AAAEd,IAAAA;AAAF,MAAcf,kBAAkB,EAAtC;AACA,SAAOK,WAAW,CAACU,OAAO,GAAGX,GAAG,CAACW,OAAD,CAAH,CAAaT,OAAhB,GAA0BK,SAAlC,EAA6C3B,OAA7C,EAAsD,IAAtD,CAAlB;AACD;AAED,OAAO,SAAS8C,kBAAT,CAA4BC,cAA5B,EAAqDvB,oBAArD,EAAsG;AAC3G,SAAOH,WAAW,CAAC0B,cAAD,EAAiBlD,mBAAjB,EAAsC2B,oBAAtC,CAAlB;AACD;AAED,OAAO,SAASwB,kBAAT,GAA+C;AACpD,QAAM;AAAEjB,IAAAA;AAAF,MAAcf,kBAAkB,EAAtC;AACA,SAAOK,WAAW,CAACU,OAAO,GAAGd,eAAe,CAACc,OAAD,CAAlB,GAA8BJ,SAAtC,EAAiD7B,WAAjD,EAA8D,IAA9D,CAAlB;AACD","sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { WAVAX } from '@pangolindex/sdk'\nimport { abi as IPangolinPairABI } from '@pangolindex/exchange-contracts/artifacts/contracts/pangolin-core/interfaces/IPangolinPair.sol/IPangolinPair.json'\nimport { abi as STAKING_REWARDS_ABI } from '@pangolindex/governance/artifacts/contracts/StakingRewards.sol/StakingRewards.json'\nimport { abi as AIRDROP_ABI } from '@pangolindex/governance/artifacts/contracts/Airdrop.sol/Airdrop.json'\nimport { abi as GOVERNANCE_ABI } from '@pangolindex/governance/artifacts/contracts/GovernorAlpha.sol/GovernorAlpha.json'\nimport { abi as PNG_ABI } from '@pangolindex/governance/artifacts/contracts/PNG.sol/Png.json'\nimport { abi as BRIDGE_MIGRATOR_ABI } from '@pangolindex/exchange-contracts/artifacts/contracts/pangolin-periphery/PangolinBridgeMigrationRouter.sol/PangolinBridgeMigrationRouter.json'\nimport { useMemo } from 'react'\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\nimport ERC20_ABI from '../constants/abis/erc20.json'\nimport BRIDGE_TOKEN_ABI from '../constants/abis/bridge-token.json'\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator'\nimport WETH_ABI from '../constants/abis/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\nimport { V1_EXCHANGE_ABI, V1_FACTORY_ABI, V1_FACTORY_ADDRESSES } from '../constants/v1'\nimport { getContract } from '../utils'\nimport { useActiveWeb3React } from './index'\nimport { AIRDROP_ADDRESS, BRIDGE_MIGRATOR_ADDRESS } from '../constants'\nimport { GOVERNANCE_ADDRESS, PNG } from '../constants'\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useV1FactoryContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && V1_FACTORY_ADDRESSES[chainId], V1_FACTORY_ABI, false)\n}\n\nexport function useV2MigratorContract(): Contract | null {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true)\n}\n\nexport function useBridgeMigratorContract(): Contract | null {\n  return useContract(BRIDGE_MIGRATOR_ADDRESS, BRIDGE_MIGRATOR_ABI, true)\n}\n\nexport function useV1ExchangeContract(address?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible)\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useBridgeTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, BRIDGE_TOKEN_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WAVAX[chainId]?.address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IPangolinPairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n\nexport function useGovernanceContract(): Contract | null {\n  return useContract(GOVERNANCE_ADDRESS, GOVERNANCE_ABI, true)\n}\n\nexport function usePngContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? PNG[chainId].address : undefined, PNG_ABI, true)\n}\n\nexport function useStakingContract(stakingAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible)\n}\n\nexport function useAirdropContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? AIRDROP_ADDRESS[chainId] : undefined, AIRDROP_ABI, true)\n}"]},"metadata":{},"sourceType":"module"}