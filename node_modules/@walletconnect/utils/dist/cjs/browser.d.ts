import { IClientMeta } from "@walletconnect/types";
import * as windowGetters from "window-getters";
import { BrowserInfo, BotInfo, NodeInfo, SearchBotDeviceInfo, ReactNativeInfo } from "detect-browser";
export declare function detectEnv(userAgent?: string): BrowserInfo | BotInfo | NodeInfo | SearchBotDeviceInfo | ReactNativeInfo | null;
export declare function detectOS(): "iOS" | "Android OS" | "BlackBerry OS" | "Windows Mobile" | "Amazon OS" | "Windows 3.11" | "Windows 95" | "Windows 98" | "Windows 2000" | "Windows XP" | "Windows Server 2003" | "Windows Vista" | "Windows 7" | "Windows 8" | "Windows 8.1" | "Windows 10" | "Windows ME" | "Open BSD" | "Sun OS" | "Linux" | "Mac OS" | "QNX" | "BeOS" | "OS/2" | "Chrome OS" | "aix" | "android" | "darwin" | "freebsd" | "linux" | "openbsd" | "sunos" | "win32" | "cygwin" | "netbsd" | undefined;
export declare function isIOS(): boolean;
export declare function isMobile(): boolean;
export declare function isNode(): boolean;
export declare function isBrowser(): boolean;
export declare const getFromWindow: typeof windowGetters.getFromWindow;
export declare const getFromWindowOrThrow: typeof windowGetters.getFromWindowOrThrow;
export declare const getDocumentOrThrow: typeof windowGetters.getDocumentOrThrow;
export declare const getDocument: typeof windowGetters.getDocument;
export declare const getNavigatorOrThrow: typeof windowGetters.getNavigatorOrThrow;
export declare const getNavigator: typeof windowGetters.getNavigator;
export declare const getLocationOrThrow: typeof windowGetters.getLocationOrThrow;
export declare const getLocation: typeof windowGetters.getLocation;
export declare const getCryptoOrThrow: typeof windowGetters.getCryptoOrThrow;
export declare const getCrypto: typeof windowGetters.getCrypto;
export declare const getLocalStorageOrThrow: typeof windowGetters.getLocalStorageOrThrow;
export declare const getLocalStorage: typeof windowGetters.getLocalStorage;
export declare function getClientMeta(): IClientMeta | null;
//# sourceMappingURL=browser.d.ts.map