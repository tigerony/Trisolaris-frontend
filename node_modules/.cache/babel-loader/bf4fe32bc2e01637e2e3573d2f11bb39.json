{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/swap/BetterTradeLink.tsx\";\nimport { stringify } from 'qs';\nimport React, { useContext, useMemo } from 'react';\nimport { useLocation } from 'react-router';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport useParsedQueryString from '../../hooks/useParsedQueryString';\nimport useToggledVersion, { DEFAULT_VERSION } from '../../hooks/useToggledVersion';\nimport { StyledInternalLink } from '../../theme';\nimport { YellowCard } from '../Card';\nimport { AutoColumn } from '../Column';\n\nfunction VersionLinkContainer({\n  children\n}) {\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(YellowCard, {\n    style: {\n      marginTop: '12px',\n      padding: '0.5rem 0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"sm\",\n    justify: \"center\",\n    style: {\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    lineHeight: \"145.23%;\",\n    fontSize: 14,\n    fontWeight: 400,\n    color: theme.text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, children)));\n}\n\nexport default function BetterTradeLink({\n  version\n}) {\n  const location = useLocation();\n  const search = useParsedQueryString();\n  const linkDestination = useMemo(() => {\n    return { ...location,\n      search: `?${stringify({ ...search,\n        use: version !== DEFAULT_VERSION ? version : undefined\n      })}`\n    };\n  }, [location, search, version]);\n  return /*#__PURE__*/React.createElement(VersionLinkContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, \"There is a better price for this trade on\", ' ', /*#__PURE__*/React.createElement(StyledInternalLink, {\n    to: linkDestination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Uniswap \", version.toUpperCase(), \" \\u2197\")));\n}\nexport function DefaultVersionLink() {\n  const location = useLocation();\n  const search = useParsedQueryString();\n  const version = useToggledVersion();\n  const linkDestination = useMemo(() => {\n    return { ...location,\n      search: `?${stringify({ ...search,\n        use: DEFAULT_VERSION\n      })}`\n    };\n  }, [location, search]);\n  return /*#__PURE__*/React.createElement(VersionLinkContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, \"Showing \", version.toUpperCase(), \" price.\", ' ', /*#__PURE__*/React.createElement(StyledInternalLink, {\n    to: linkDestination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Switch to Uniswap \", DEFAULT_VERSION.toUpperCase(), \" \\u2197\")));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/swap/BetterTradeLink.tsx"],"names":["stringify","React","useContext","useMemo","useLocation","Text","ThemeContext","useParsedQueryString","useToggledVersion","DEFAULT_VERSION","StyledInternalLink","YellowCard","AutoColumn","VersionLinkContainer","children","theme","marginTop","padding","alignItems","textAlign","text1","BetterTradeLink","version","location","search","linkDestination","use","undefined","toUpperCase","DefaultVersionLink"],"mappings":"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","sourcesContent":["import { stringify } from 'qs'\nimport React, { useContext, useMemo } from 'react'\nimport { useLocation } from 'react-router'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport useToggledVersion, { DEFAULT_VERSION, Version } from '../../hooks/useToggledVersion'\n\nimport { StyledInternalLink } from '../../theme'\nimport { YellowCard } from '../Card'\nimport { AutoColumn } from '../Column'\n\nfunction VersionLinkContainer({ children }: { children: React.ReactNode }) {\n  const theme = useContext(ThemeContext)\n\n  return (\n    <YellowCard style={{ marginTop: '12px', padding: '0.5rem 0.5rem' }}>\n      <AutoColumn gap=\"sm\" justify=\"center\" style={{ alignItems: 'center', textAlign: 'center' }}>\n        <Text lineHeight=\"145.23%;\" fontSize={14} fontWeight={400} color={theme.text1}>\n          {children}\n        </Text>\n      </AutoColumn>\n    </YellowCard>\n  )\n}\n\nexport default function BetterTradeLink({ version }: { version: Version }) {\n  const location = useLocation()\n  const search = useParsedQueryString()\n\n  const linkDestination = useMemo(() => {\n    return {\n      ...location,\n      search: `?${stringify({\n        ...search,\n        use: version !== DEFAULT_VERSION ? version : undefined\n      })}`\n    }\n  }, [location, search, version])\n\n  return (\n    <VersionLinkContainer>\n      There is a better price for this trade on{' '}\n      <StyledInternalLink to={linkDestination}>\n        <b>Uniswap {version.toUpperCase()} ↗</b>\n      </StyledInternalLink>\n    </VersionLinkContainer>\n  )\n}\n\nexport function DefaultVersionLink() {\n  const location = useLocation()\n  const search = useParsedQueryString()\n  const version = useToggledVersion()\n\n  const linkDestination = useMemo(() => {\n    return {\n      ...location,\n      search: `?${stringify({\n        ...search,\n        use: DEFAULT_VERSION\n      })}`\n    }\n  }, [location, search])\n\n  return (\n    <VersionLinkContainer>\n      Showing {version.toUpperCase()} price.{' '}\n      <StyledInternalLink to={linkDestination}>\n        <b>Switch to Uniswap {DEFAULT_VERSION.toUpperCase()} ↗</b>\n      </StyledInternalLink>\n    </VersionLinkContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}