{"ast":null,"code":"import { ChainId, JSBI, TokenAmount, WAVAX, Pair } from '@pangolindex/sdk';\nimport { useMemo } from 'react';\nimport { PNG, DAI, DAIe, UNI, UNIe, SUSHI, SUSHIe, ETH, WETHe, USDT, USDTe, WBTC, WBTCe, LINK, LINKe, AAVE, AAVEe, YFI, YFIe, SNOB, VSO, SPORE, BIFI, BNB, XAVA, PEFI, TRYB, SHERPA, YAK, DYP, QI, WALBT, HUSKY, USDCe, LYD, TUSD, GAJ, GDL, MFI, SHIBX, AVE, ELE, FRAX, FXS, START, SWAPe, YTS, TUNDRA, XUSD, XDO } from '../../constants';\nimport { STAKING_REWARDS_INTERFACE } from '../../constants/abis/staking-rewards';\nimport { PairState, usePair, usePairs } from '../../data/Reserves';\nimport { useActiveWeb3React } from '../../hooks';\nimport { NEVER_RELOAD, useMultipleContractSingleData } from '../multicall/hooks';\nimport { tryParseAmount } from '../swap/hooks';\nimport { useTranslation } from 'react-i18next';\nimport ERC20_INTERFACE from '../../constants/abis/erc20';\nconst STAKING = {\n  WAVAX_ETH_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], ETH[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xa16381eae6285123c323A665D4D99a6bCfaAC307',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_USDT_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], USDT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4f019452f51bbA0250Ec8B69D64282B79fC8BD9f',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_WBTC_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], WBTC[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x01897e996EEfFf65AE9999C02D1d8D7E9e0C0352',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_PNG_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], PNG[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x8FD2755c6ae7252753361991bDcd6fF55bDc01CE',\n    version: 0,\n    multiplier: 12\n  },\n  WAVAX_LINK_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], LINK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x7d7eCd4d370384B17DFC1b4155a8410e97841B65',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_DAI_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], DAI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xb5b9DEd9C193731f816AE1f8FfB7f8B0FaE40c88',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_UNI_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], UNI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xe4d9aE03859DaC6d65432d557F75b9b588a38eE1',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_SUSHI_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SUSHI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x88f26b81c9cae4ea168e31BC6353f493fdA29661',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_AAVE_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], AAVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xEe0023108918884181E48902f7C797573F413EcE',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_YFI_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], YFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x797CBcf107519f4b279Fc5Db372e292cdF7e6956',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_ETH_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], ETH[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4e550fEfBf888cB43eaD73d821f646F43b1F2309',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_USDT_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], USDT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x7accC6f16Bf8c0Dce22371fbD914c6B5b402BF9f',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_WBTC_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], WBTC[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x99B06B9673fea30Ba55179b1433ce909Fdc28723',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_LINK_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], LINK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4Ad6e309805cb477010beA9fFC650cB27C1A9504',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_DAI_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], DAI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x8866077F08b076360C25F4Fd7fbC959ef135474C',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_UNI_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], UNI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x41188B4332fe68135d1524E43db98e81519d263B',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_SUSHI_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], SUSHI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x6955Cb85edEa63F861c0Be39C3d7F8921606c4Dc',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_AAVE_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], AAVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xb921a3aE9CeDa66fa8A74DBb0946367FB14faE34',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_YFI_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], YFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2061298C76cD76219b9b44439e96A75F19C61f7f',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_ETH_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], ETH[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x417C02150b9a31BcaCb201d1D60967653384E1C6',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_WETHe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], WETHe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x830A966B9B447c9B15aB24c0369c4018E75F31C9',\n    version: 1,\n    multiplier: 10\n  },\n  WAVAX_USDT_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], USDT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x94C021845EfE237163831DAC39448cFD371279d6',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_USDTe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], USDTe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x006cC053bdb84C2d6380B3C4a573d84636378A47',\n    version: 1,\n    multiplier: 10\n  },\n  WAVAX_WBTC_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], WBTC[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xe968E9753fd2c323C2Fe94caFF954a48aFc18546',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_WBTCe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], WBTCe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x30CbF11f6fcc9FC1bF6E55A6941b1A47A56eAEC5',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_PNG_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], PNG[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x574d3245e36Cf8C9dc86430EaDb0fDB2F385F829',\n    version: 1,\n    multiplier: 12\n  },\n  WAVAX_LINK_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], LINK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xBDa623cDD04d822616A263BF4EdbBCe0B7DC4AE7',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_LINKe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], LINKe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2e10D9d08f76807eFdB6903025DE8e006b1185F5',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_DAI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], DAI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x701e03fAD691799a8905043C0d18d2213BbCf2c7',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_DAIe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], DAIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x63A84F66b8c90841Cb930F2dC3D28799F0c6657B',\n    version: 1,\n    multiplier: 10\n  },\n  WAVAX_UNI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], UNI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x1F6aCc5F5fE6Af91C1BB3bEbd27f4807a243D935',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_UNIe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], UNIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x6E36A71c1A211f01Ff848C1319D4e34BB5483224',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_SUSHI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SUSHI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xDA354352b03f87F84315eEF20cdD83c49f7E812e',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_SUSHIe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SUSHIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2D55341f2abbb5472020e2d556a4f6B951C8Fa22',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_AAVE_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], AAVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4dF32F1F8469648e89E62789F4246f73fe768b8E',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_AAVEe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], AAVEe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xa04fCcE7955312709c838982ad0E297375002C32',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_YFI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], YFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2C31822F35506C6444F458Ed7470c79f9924Ee86',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_YFIe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], YFIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x642c5B7AC22f56A0eF87930a89f0980FcA904B03',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_SNOB_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SNOB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x640D754113A3CBDd80BcCc1b5c0387148EEbf2fE',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_VSO_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], VSO[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xf2b788085592380bfCAc40Ac5E0d10D9d0b54eEe',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_SPORE_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SPORE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xd3e5538A049FcFcb8dF559B85B352302fEfB8d7C',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_BIFI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], BIFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4E258f7ec60234bb6f3Ea7eCFf5931901182Bd6E',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_BNB_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], BNB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x21CCa1672E95996413046077B8cf1E52F080A165',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_XAVA_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], XAVA[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4219330Af5368378D5ffd869a55f5F2a26aB898c',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_PEFI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], PEFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xd7EDBb1005ec65721a3976Dba996AdC6e02dc9bA',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_TRYB_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], TRYB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x079a479e270E72A1899239570912358C6BC22d94',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_SHERPA_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SHERPA[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x99918c92655D6f8537588210cD3Ddd52312CB36d',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_YAK_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], YAK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xb600429CCD364F1727F91FC0E75D67d65D0ee4c5',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_DYP_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], DYP[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x29a7F3D1F27637EDA531dC69D989c86Ab95225D8',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_QI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], QI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xeD472431e02Ea9EF8cC99B9812c335ac0873bba2',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_WALBT_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], WALBT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xa296F9474e77aE21f90afb50713F44Cc6916FbB2',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_HUSKY_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], HUSKY[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2e60ab79BbCdfea164874700D5d98969a386eB2a',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_USDCe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], USDCe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x84B536dA1A2D9b0609f9Da73139674cc2D75AF2D',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_LYD_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], LYD[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xE6dE666a80a357497A2cAB3A91F1c28dcAA1Eca4',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_TUSD_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], TUSD[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xf2dd964AcF53ad8959540CceEFD9FeA13d4D0Eb1',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_GAJ_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], GAJ[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xd31FFD05a41645631A22a64c1f870a6248A4DDcF',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_GDL_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], GDL[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xA6F2408e3CD34084c37A0D88FED8C6b6490F7529',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_MFI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], MFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xd64370aeDbEbbAE04CfCaE27E8E0c5ecbD343336',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_SHIBX_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SHIBX[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x0029381eFF48E9eA963F8095eA204098ac8e44B5',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_AVE_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], AVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x94183DD08FFAa595e43B104804d55eE95492C8cB',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_ELE_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], ELE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x10E5d5f598abb970F85456Ea59f0611D77E00168',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_FRAX_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], FRAX[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xfd0824dF1E598D34C3495e1C2a339E2FA23Af40D',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_FXS_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], FXS[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x76Ad5c64Fe6B26b6aD9aaAA19eBa00e9eCa31FE1',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_START_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], START[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x5105d9De003fB7d22979cd0cE167Ab919E60900A',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_SWAPe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SWAPe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x255e7a0eB5aa1616781702203B042821C35394eF',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_YTS_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], YTS[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x6F571bA11447136fC11BA9AC98f0f0233dAc1BFF',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_TUNDRA_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], TUNDRA[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xeD617a06C6c727827Ca3B6fb3E565C68342c4c2b',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_XUSD_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], XUSD[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xbD56b964FCdd208a7a83C291864eEb8271BaB773',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_XDO_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], XDO[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x5d479aEbfc49b9e08860BbfCfb3BB4D768Aa1fc3',\n    version: 1,\n    multiplier: 2\n  },\n  PNG_ETH_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], ETH[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x7ac007afB5d61F48D1E3C8Cc130d4cf6b765000e',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_WETHe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], WETHe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x03a9091620CACeE4968c915232B175C16a584733',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_USDT_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], USDT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xE2510a1fCCCde8d2D1c40b41e8f71fB1F47E5bBA',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_USDTe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], USDTe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x7216d1e173c1f1Ed990239d5c77d74714a837Cd5',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_WBTC_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], WBTC[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x681047473B6145BA5dB90b074E32861549e85cC7',\n    version: 1,\n    multiplier: 1\n  },\n  PNG_WBTCe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], WBTCe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xEeEA1e815f12d344b5035a33da4bc383365F5Fee',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_LINK_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], LINK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x6356b24b36074AbE2903f44fE4019bc5864FDe36',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_LINKe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], LINKe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4B283e4211B3fAa525846d21869925e78f93f189',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_DAI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], DAI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xe3103e565cF96a5709aE8e603B1EfB7fED04613B',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_DAIe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], DAIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xF344611DD94099708e508C2Deb16628578940d77',\n    version: 1,\n    multiplier: 1\n  },\n  PNG_UNI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], UNI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4f74BbF6859A994e7c309eA0f11E3Cc112955110',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_UNIe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], UNIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xD4E49A8Ec23daB51ACa459D233e9447DE03AFd29',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_SUSHI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SUSHI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x633F4b4DB7dD4fa066Bd9949Ab627a551E0ecd32',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_SUSHIe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SUSHIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x923E69322Bea5e22799a29Dcfc9c616F3B5cF95b',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_AAVE_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], AAVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xFd9ACEc0F413cA05d5AD5b962F3B4De40018AD87',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_AAVEe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], AAVEe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x3F91756D773A1455A7a1A70f5d9239F1B1d1f095',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_YFI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], YFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xc7D0E29b616B29aC6fF4FD5f37c8Da826D16DB0D',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_YFIe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], YFIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x269Ed6B2040f965D9600D0859F36951cB9F01460',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_SNOB_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SNOB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x08B9A023e34Bad6Db868B699fa642Bf5f12Ebe76',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_VSO_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], VSO[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x759ee0072901f409e4959E00b00a16FD729397eC',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_SPORE_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SPORE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x12A33F6B0dd0D35279D402aB61587fE7eB23f7b0',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_BIFI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], BIFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x518B07E2d9e08A8c2e3cB7704336520827a4d399',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_BNB_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], BNB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x68a90C38bF4f90AC2a870d6FcA5b0A5A218763AD',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_XAVA_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], XAVA[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x5b3Ed7f47D1d4FA22b559D043a09d78bc55A94E9',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_PEFI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], PEFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x76e404Ab7357fD97d4f1e8Dd52f298A035fd408c',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_TRYB_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], TRYB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x0A9773AEbc1429d860A492d70c8EA335fAa9F19f',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_SHERPA_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SHERPA[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x80E919784e7c5AD3Dd59cAfCDC0e9C079B65f262',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_YAK_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], YAK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x42ff9473a5AEa00dE39355e0288c7A151EB00B6e',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_DYP_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], DYP[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x3A0eF6a586D9C15de30eDF5d34ae00E26b0125cE',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_QI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], QI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2bD42C357a3e13F18849C67e8dC108Cc8462ae33',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_WALBT_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], WALBT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x393fe4bc29AfbB3786D99f043933c49097449fA1',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_HUSKY_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], HUSKY[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x07b34dAABcb75C9cbD0c8AEfbC0ed5E30845eF12',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_USDCe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], USDCe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x73d1cC4B8dA555005E949B3ECEE490A7206C14DF',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_LYD_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], LYD[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xe1314E6d436877850BB955Ac074226FCB0B8a86d',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_TUSD_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], TUSD[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x6fa49bd916e392dc9264636b0b5Cf2beee652dA3',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_GAJ_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], GAJ[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x95bD8FDb58692d343C89bC7bc435773779CC0e47',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_GDL_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], GDL[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xb008e7AD32c710B07fb8D4453aBC79214Cd34891',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_MFI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], MFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4c0650668A63EF468c7bDCd910A62287e9FC4d52',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_SHIBX_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SHIBX[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xEcF9b9aE88150F11cbf2263c69823e2ECb84F07B',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_AVE_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], AVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x7C960e55C8119457528490C3a34C1438FaF6B039',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_ELE_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], ELE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xfcB0C53FC5c71005D11C6838922e254323b7Ca06',\n    version: 1,\n    multiplier: 5\n  }\n}; // The first mapping in the list takes priority if multiple migrations exist from the same pool\n\nexport const MIGRATIONS = [{\n  from: STAKING.WAVAX_PNG_V0,\n  to: STAKING.WAVAX_PNG_V1\n}, {\n  from: STAKING.WAVAX_ETH_V0,\n  to: STAKING.WAVAX_WETHe_V1\n}, {\n  from: STAKING.WAVAX_USDT_V0,\n  to: STAKING.WAVAX_USDTe_V1\n}, {\n  from: STAKING.WAVAX_WBTC_V0,\n  to: STAKING.WAVAX_WBTCe_V1\n}, {\n  from: STAKING.WAVAX_LINK_V0,\n  to: STAKING.WAVAX_LINKe_V1\n}, {\n  from: STAKING.WAVAX_DAI_V0,\n  to: STAKING.WAVAX_DAIe_V1\n}, {\n  from: STAKING.WAVAX_UNI_V0,\n  to: STAKING.WAVAX_UNIe_V1\n}, {\n  from: STAKING.WAVAX_SUSHI_V0,\n  to: STAKING.WAVAX_SUSHIe_V1\n}, {\n  from: STAKING.WAVAX_AAVE_V0,\n  to: STAKING.WAVAX_AAVEe_V1\n}, {\n  from: STAKING.WAVAX_YFI_V0,\n  to: STAKING.WAVAX_YFIe_V1\n}, // From v0 (PNG)\n{\n  from: STAKING.PNG_ETH_V0,\n  to: STAKING.PNG_WETHe_V1\n}, {\n  from: STAKING.PNG_USDT_V0,\n  to: STAKING.PNG_USDTe_V1\n}, {\n  from: STAKING.PNG_WBTC_V0,\n  to: STAKING.PNG_WBTCe_V1\n}, {\n  from: STAKING.PNG_LINK_V0,\n  to: STAKING.PNG_LINKe_V1\n}, {\n  from: STAKING.PNG_DAI_V0,\n  to: STAKING.PNG_DAIe_V1\n}, {\n  from: STAKING.PNG_UNI_V0,\n  to: STAKING.PNG_UNIe_V1\n}, {\n  from: STAKING.PNG_SUSHI_V0,\n  to: STAKING.PNG_SUSHIe_V1\n}, {\n  from: STAKING.PNG_AAVE_V0,\n  to: STAKING.PNG_AAVEe_V1\n}, {\n  from: STAKING.PNG_YFI_V0,\n  to: STAKING.PNG_YFIe_V1\n}, // From v1 (WAVAX)\n{\n  from: STAKING.WAVAX_ETH_V1,\n  to: STAKING.WAVAX_WETHe_V1\n}, {\n  from: STAKING.WAVAX_USDT_V1,\n  to: STAKING.WAVAX_USDTe_V1\n}, {\n  from: STAKING.WAVAX_WBTC_V1,\n  to: STAKING.WAVAX_WBTCe_V1\n}, {\n  from: STAKING.WAVAX_LINK_V1,\n  to: STAKING.WAVAX_LINKe_V1\n}, {\n  from: STAKING.WAVAX_DAI_V1,\n  to: STAKING.WAVAX_DAIe_V1\n}, {\n  from: STAKING.WAVAX_UNI_V1,\n  to: STAKING.WAVAX_UNIe_V1\n}, {\n  from: STAKING.WAVAX_SUSHI_V1,\n  to: STAKING.WAVAX_SUSHIe_V1\n}, {\n  from: STAKING.WAVAX_AAVE_V1,\n  to: STAKING.WAVAX_AAVEe_V1\n}, {\n  from: STAKING.WAVAX_YFI_V1,\n  to: STAKING.WAVAX_YFIe_V1\n}, // From v1 (PNG)\n{\n  from: STAKING.PNG_ETH_V1,\n  to: STAKING.PNG_WETHe_V1\n}, {\n  from: STAKING.PNG_USDT_V1,\n  to: STAKING.PNG_USDTe_V1\n}, {\n  from: STAKING.PNG_WBTC_V1,\n  to: STAKING.PNG_WBTCe_V1\n}, {\n  from: STAKING.PNG_LINK_V1,\n  to: STAKING.PNG_LINKe_V1\n}, {\n  from: STAKING.PNG_DAI_V1,\n  to: STAKING.PNG_DAIe_V1\n}, {\n  from: STAKING.PNG_UNI_V1,\n  to: STAKING.PNG_UNIe_V1\n}, {\n  from: STAKING.PNG_SUSHI_V1,\n  to: STAKING.PNG_SUSHIe_V1\n}, {\n  from: STAKING.PNG_AAVE_V1,\n  to: STAKING.PNG_AAVEe_V1\n}, {\n  from: STAKING.PNG_YFI_V1,\n  to: STAKING.PNG_YFIe_V1\n}];\nexport const BRIDGE_MIGRATORS = [{\n  aeb: '0xf20d962a6c8f70c731bd838a3a388D7d48fA6e15',\n  ab: '0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB'\n}, // ETH\n{\n  aeb: '0xde3A24028580884448a5397872046a019649b084',\n  ab: '0xc7198437980c041c805A1EDcbA50c1Ce5db95118'\n}, // USDT\n{\n  aeb: '0x408D4cD0ADb7ceBd1F1A1C33A0Ba2098E1295bAB',\n  ab: '0x50b7545627a5162F82A992c33b87aDc75187B218'\n}, // WBTC\n{\n  aeb: '0xB3fe5374F67D7a22886A0eE082b2E2f9d2651651',\n  ab: '0x5947BB275c521040051D82396192181b413227A3'\n}, // LINK\n{\n  aeb: '0xbA7dEebBFC5fA1100Fb055a87773e1E99Cd3507a',\n  ab: '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70'\n}, // DAI\n{\n  aeb: '0xf39f9671906d8630812f9d9863bBEf5D523c84Ab',\n  ab: '0x8eBAf22B6F053dFFeaf46f4Dd9eFA95D89ba8580'\n}, // UNI\n{\n  aeb: '0x39cf1BD5f15fb22eC3D9Ff86b0727aFc203427cc',\n  ab: '0x37B608519F91f70F2EeB0e5Ed9AF4061722e4F76'\n}, // SUSHI\n{\n  aeb: '0x8cE2Dee54bB9921a2AE0A63dBb2DF8eD88B91dD9',\n  ab: '0x63a72806098Bd3D9520cC43356dD78afe5D386D9'\n}, // AAVE\n{\n  aeb: '0x99519AcB025a0e0d44c3875A4BbF03af65933627',\n  ab: '0x9eAaC1B23d935365bD7b542Fe22cEEe2922f52dc'\n} // YFI\n];\nexport const STAKING_V0 = Object.values(STAKING).filter(staking => staking.version === 0);\nexport const STAKING_V1 = Object.values(STAKING).filter(staking => staking.version === 1);\nexport const STAKING_REWARDS_CURRENT_VERSION = Math.max(...Object.values(STAKING).map(staking => staking.version));\nexport const STAKING_REWARDS_INFO = {\n  [ChainId.AVALANCHE]: [STAKING_V0, STAKING_V1]\n};\n\nconst calculateTotalStakedAmountInAvaxFromPng = function (amountStaked, amountAvailable, avaxPngPairReserveOfPng, avaxPngPairReserveOfWavax, reserveInPng) {\n  if (JSBI.EQ(amountAvailable, JSBI.BigInt(0))) {\n    return new TokenAmount(WAVAX[ChainId.AVALANCHE], JSBI.BigInt(0));\n  }\n\n  const oneToken = JSBI.BigInt(1000000000000000000);\n  const avaxPngRatio = JSBI.divide(JSBI.multiply(oneToken, avaxPngPairReserveOfWavax), avaxPngPairReserveOfPng);\n  const valueOfPngInAvax = JSBI.divide(JSBI.multiply(reserveInPng, avaxPngRatio), oneToken);\n  return new TokenAmount(WAVAX[ChainId.AVALANCHE], JSBI.divide(JSBI.multiply(JSBI.multiply(amountStaked, valueOfPngInAvax), JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the wavax they entitle owner to\n  ), amountAvailable));\n};\n\nconst calculateTotalStakedAmountInAvax = function (amountStaked, amountAvailable, reserveInWavax) {\n  if (JSBI.GT(amountAvailable, 0)) {\n    // take the total amount of LP tokens staked, multiply by AVAX value of all LP tokens, divide by all LP tokens\n    return new TokenAmount(WAVAX[ChainId.AVALANCHE], JSBI.divide(JSBI.multiply(JSBI.multiply(amountStaked, reserveInWavax), JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the wavax they entitle owner to\n    ), amountAvailable));\n  } else {\n    return new TokenAmount(WAVAX[ChainId.AVALANCHE], JSBI.BigInt(0));\n  }\n}; // gets the staking info from the network for the active chain id\n\n\nexport function useStakingInfo(version, pairToFilterBy) {\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const info = useMemo(() => {\n    var _STAKING_REWARDS_INFO, _STAKING_REWARDS_INFO2, _STAKING_REWARDS_INFO3;\n\n    return chainId ? (_STAKING_REWARDS_INFO = (_STAKING_REWARDS_INFO2 = STAKING_REWARDS_INFO[chainId]) === null || _STAKING_REWARDS_INFO2 === void 0 ? void 0 : (_STAKING_REWARDS_INFO3 = _STAKING_REWARDS_INFO2[version]) === null || _STAKING_REWARDS_INFO3 === void 0 ? void 0 : _STAKING_REWARDS_INFO3.filter(stakingRewardInfo => pairToFilterBy === undefined ? true : pairToFilterBy === null ? false : pairToFilterBy.involvesToken(stakingRewardInfo.tokens[0]) && pairToFilterBy.involvesToken(stakingRewardInfo.tokens[1]))) !== null && _STAKING_REWARDS_INFO !== void 0 ? _STAKING_REWARDS_INFO : [] : [];\n  }, [chainId, pairToFilterBy, version]);\n  const png = PNG[ChainId.AVALANCHE];\n  const rewardsAddresses = useMemo(() => info.map(({\n    stakingRewardAddress\n  }) => stakingRewardAddress), [info]);\n  const accountArg = useMemo(() => [account !== null && account !== void 0 ? account : undefined], [account]); // get all the info from the staking rewards contracts\n\n  const tokens = useMemo(() => info.map(({\n    tokens\n  }) => tokens), [info]);\n  const balances = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, 'balanceOf', accountArg);\n  const earnedAmounts = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, 'earned', accountArg);\n  const stakingTotalSupplies = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, 'totalSupply');\n  const pairs = usePairs(tokens);\n  const pairAddresses = useMemo(() => {\n    const pairsHaveLoaded = pairs === null || pairs === void 0 ? void 0 : pairs.every(([state, pair]) => state === PairState.EXISTS);\n    if (!pairsHaveLoaded) return [];else return pairs.map(([state, pair]) => pair === null || pair === void 0 ? void 0 : pair.liquidityToken.address);\n  }, [pairs]);\n  const pairTotalSupplies = useMultipleContractSingleData(pairAddresses, ERC20_INTERFACE, 'totalSupply');\n  const [avaxPngPairState, avaxPngPair] = usePair(WAVAX[ChainId.AVALANCHE], png); // tokens per second, constants\n\n  const rewardRates = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, 'rewardRate', undefined, NEVER_RELOAD);\n  const periodFinishes = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, 'periodFinish', undefined, NEVER_RELOAD);\n  return useMemo(() => {\n    if (!chainId || !png) return [];\n    return rewardsAddresses.reduce((memo, rewardsAddress, index) => {\n      // these two are dependent on account\n      const balanceState = balances[index];\n      const earnedAmountState = earnedAmounts[index]; // these get fetched regardless of account\n\n      const stakingTotalSupplyState = stakingTotalSupplies[index];\n      const rewardRateState = rewardRates[index];\n      const periodFinishState = periodFinishes[index];\n      const [pairState, pair] = pairs[index];\n      const pairTotalSupplyState = pairTotalSupplies[index];\n\n      if ( // these may be undefined if not logged in\n      !(balanceState === null || balanceState === void 0 ? void 0 : balanceState.loading) && !(earnedAmountState === null || earnedAmountState === void 0 ? void 0 : earnedAmountState.loading) && // always need these\n      (stakingTotalSupplyState === null || stakingTotalSupplyState === void 0 ? void 0 : stakingTotalSupplyState.loading) === false && (rewardRateState === null || rewardRateState === void 0 ? void 0 : rewardRateState.loading) === false && (periodFinishState === null || periodFinishState === void 0 ? void 0 : periodFinishState.loading) === false && (pairTotalSupplyState === null || pairTotalSupplyState === void 0 ? void 0 : pairTotalSupplyState.loading) === false && pair && avaxPngPair && pairState !== PairState.LOADING && avaxPngPairState !== PairState.LOADING) {\n        var _periodFinishState$re, _periodFinishState$re2, _periodFinishState$re3, _stakingTotalSupplySt, _pairTotalSupplyState, _balanceState$result$, _balanceState$result, _rewardRateState$resu, _earnedAmountState$re, _earnedAmountState$re2;\n\n        if ((balanceState === null || balanceState === void 0 ? void 0 : balanceState.error) || (earnedAmountState === null || earnedAmountState === void 0 ? void 0 : earnedAmountState.error) || stakingTotalSupplyState.error || rewardRateState.error || periodFinishState.error || pairTotalSupplyState.error || pairState === PairState.INVALID || pairState === PairState.NOT_EXISTS || avaxPngPairState === PairState.INVALID || avaxPngPairState === PairState.NOT_EXISTS) {\n          console.error('Failed to load staking rewards info');\n          return memo;\n        } // get the LP token\n\n\n        const tokens = info[index].tokens;\n        const wavax = tokens[0].equals(WAVAX[tokens[0].chainId]) ? tokens[0] : tokens[1];\n        const dummyPair = new Pair(new TokenAmount(tokens[0], '0'), new TokenAmount(tokens[1], '0'), chainId); // check for account, if no account set to 0\n\n        const periodFinishMs = (_periodFinishState$re = periodFinishState.result) === null || _periodFinishState$re === void 0 ? void 0 : (_periodFinishState$re2 = _periodFinishState$re[0]) === null || _periodFinishState$re2 === void 0 ? void 0 : (_periodFinishState$re3 = _periodFinishState$re2.mul(1000)) === null || _periodFinishState$re3 === void 0 ? void 0 : _periodFinishState$re3.toNumber(); // periodFinish will be 0 immediately after a reward contract is initialized\n\n        const isPeriodFinished = periodFinishMs === 0 ? false : periodFinishMs < Date.now();\n        const totalSupplyStaked = JSBI.BigInt((_stakingTotalSupplySt = stakingTotalSupplyState.result) === null || _stakingTotalSupplySt === void 0 ? void 0 : _stakingTotalSupplySt[0]);\n        const totalSupplyAvailable = JSBI.BigInt((_pairTotalSupplyState = pairTotalSupplyState.result) === null || _pairTotalSupplyState === void 0 ? void 0 : _pairTotalSupplyState[0]);\n        const stakedAmount = new TokenAmount(dummyPair.liquidityToken, JSBI.BigInt((_balanceState$result$ = balanceState === null || balanceState === void 0 ? void 0 : (_balanceState$result = balanceState.result) === null || _balanceState$result === void 0 ? void 0 : _balanceState$result[0]) !== null && _balanceState$result$ !== void 0 ? _balanceState$result$ : 0));\n        const totalStakedAmount = new TokenAmount(dummyPair.liquidityToken, JSBI.BigInt(totalSupplyStaked));\n        const totalRewardRate = new TokenAmount(png, JSBI.BigInt(isPeriodFinished ? 0 : (_rewardRateState$resu = rewardRateState.result) === null || _rewardRateState$resu === void 0 ? void 0 : _rewardRateState$resu[0]));\n        const isAvaxPool = tokens[0].equals(WAVAX[tokens[0].chainId]);\n        const totalStakedInWavax = isAvaxPool ? calculateTotalStakedAmountInAvax(totalSupplyStaked, totalSupplyAvailable, pair.reserveOf(wavax).raw) : calculateTotalStakedAmountInAvaxFromPng(totalSupplyStaked, totalSupplyAvailable, avaxPngPair.reserveOf(png).raw, avaxPngPair.reserveOf(WAVAX[tokens[1].chainId]).raw, pair.reserveOf(png).raw);\n\n        const getHypotheticalRewardRate = (stakedAmount, totalStakedAmount, totalRewardRate) => {\n          return new TokenAmount(png, JSBI.greaterThan(totalStakedAmount.raw, JSBI.BigInt(0)) ? JSBI.divide(JSBI.multiply(totalRewardRate.raw, stakedAmount.raw), totalStakedAmount.raw) : JSBI.BigInt(0));\n        };\n\n        const individualRewardRate = getHypotheticalRewardRate(stakedAmount, totalStakedAmount, totalRewardRate);\n        const multiplier = info[index].multiplier;\n        memo.push({\n          stakingRewardAddress: rewardsAddress,\n          tokens: tokens,\n          periodFinish: periodFinishMs > 0 ? new Date(periodFinishMs) : undefined,\n          isPeriodFinished: isPeriodFinished,\n          earnedAmount: new TokenAmount(png, JSBI.BigInt((_earnedAmountState$re = earnedAmountState === null || earnedAmountState === void 0 ? void 0 : (_earnedAmountState$re2 = earnedAmountState.result) === null || _earnedAmountState$re2 === void 0 ? void 0 : _earnedAmountState$re2[0]) !== null && _earnedAmountState$re !== void 0 ? _earnedAmountState$re : 0)),\n          rewardRate: individualRewardRate,\n          totalRewardRate: totalRewardRate,\n          stakedAmount: stakedAmount,\n          totalStakedAmount: totalStakedAmount,\n          totalStakedInWavax: totalStakedInWavax,\n          multiplier: JSBI.BigInt(multiplier),\n          getHypotheticalRewardRate\n        });\n      }\n\n      return memo;\n    }, []);\n  }, [chainId, png, rewardsAddresses, balances, earnedAmounts, stakingTotalSupplies, rewardRates, periodFinishes, pairs, pairTotalSupplies, avaxPngPair, avaxPngPairState, info]);\n}\nexport function useTotalPngEarned() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const png = chainId ? PNG[chainId] : undefined;\n  const stakingInfo0 = useStakingInfo(0);\n  const stakingInfo1 = useStakingInfo(1);\n  const earned0 = useMemo(() => {\n    var _stakingInfo0$reduce;\n\n    if (!png) return undefined;\n    return (_stakingInfo0$reduce = stakingInfo0 === null || stakingInfo0 === void 0 ? void 0 : stakingInfo0.reduce((accumulator, stakingInfo) => accumulator.add(stakingInfo.earnedAmount), new TokenAmount(png, '0'))) !== null && _stakingInfo0$reduce !== void 0 ? _stakingInfo0$reduce : new TokenAmount(png, '0');\n  }, [stakingInfo0, png]);\n  const earned1 = useMemo(() => {\n    var _stakingInfo1$reduce;\n\n    if (!png) return undefined;\n    return (_stakingInfo1$reduce = stakingInfo1 === null || stakingInfo1 === void 0 ? void 0 : stakingInfo1.reduce((accumulator, stakingInfo) => accumulator.add(stakingInfo.earnedAmount), new TokenAmount(png, '0'))) !== null && _stakingInfo1$reduce !== void 0 ? _stakingInfo1$reduce : new TokenAmount(png, '0');\n  }, [stakingInfo1, png]);\n  return earned0 ? earned1 ? earned0.add(earned1) : earned0 : earned1 ? earned1 : undefined;\n} // based on typed value\n\nexport function useDerivedStakeInfo(typedValue, stakingToken, userLiquidityUnstaked) {\n  const {\n    account\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const parsedInput = tryParseAmount(typedValue, stakingToken);\n  const parsedAmount = parsedInput && userLiquidityUnstaked && JSBI.lessThanOrEqual(parsedInput.raw, userLiquidityUnstaked.raw) ? parsedInput : undefined;\n  let error;\n\n  if (!account) {\n    error = t('stakeHooks.connectWallet');\n  }\n\n  if (!parsedAmount) {\n    var _error;\n\n    error = (_error = error) !== null && _error !== void 0 ? _error : t('stakeHooks.enterAmount');\n  }\n\n  return {\n    parsedAmount,\n    error\n  };\n} // based on typed value\n\nexport function useDerivedUnstakeInfo(typedValue, stakingAmount) {\n  const {\n    account\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const parsedInput = tryParseAmount(typedValue, stakingAmount.token);\n  const parsedAmount = parsedInput && JSBI.lessThanOrEqual(parsedInput.raw, stakingAmount.raw) ? parsedInput : undefined;\n  let error;\n\n  if (!account) {\n    error = t('stakeHooks.connectWallet');\n  }\n\n  if (!parsedAmount) {\n    var _error2;\n\n    error = (_error2 = error) !== null && _error2 !== void 0 ? _error2 : t('stakeHooks.enterAmount');\n  }\n\n  return {\n    parsedAmount,\n    error\n  };\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/state/stake/hooks.ts"],"names":["ChainId","JSBI","TokenAmount","WAVAX","Pair","useMemo","PNG","DAI","DAIe","UNI","UNIe","SUSHI","SUSHIe","ETH","WETHe","USDT","USDTe","WBTC","WBTCe","LINK","LINKe","AAVE","AAVEe","YFI","YFIe","SNOB","VSO","SPORE","BIFI","BNB","XAVA","PEFI","TRYB","SHERPA","YAK","DYP","QI","WALBT","HUSKY","USDCe","LYD","TUSD","GAJ","GDL","MFI","SHIBX","AVE","ELE","FRAX","FXS","START","SWAPe","YTS","TUNDRA","XUSD","XDO","STAKING_REWARDS_INTERFACE","PairState","usePair","usePairs","useActiveWeb3React","NEVER_RELOAD","useMultipleContractSingleData","tryParseAmount","useTranslation","ERC20_INTERFACE","STAKING","WAVAX_ETH_V0","tokens","AVALANCHE","stakingRewardAddress","version","multiplier","WAVAX_USDT_V0","WAVAX_WBTC_V0","WAVAX_PNG_V0","WAVAX_LINK_V0","WAVAX_DAI_V0","WAVAX_UNI_V0","WAVAX_SUSHI_V0","WAVAX_AAVE_V0","WAVAX_YFI_V0","PNG_ETH_V0","PNG_USDT_V0","PNG_WBTC_V0","PNG_LINK_V0","PNG_DAI_V0","PNG_UNI_V0","PNG_SUSHI_V0","PNG_AAVE_V0","PNG_YFI_V0","WAVAX_ETH_V1","WAVAX_WETHe_V1","WAVAX_USDT_V1","WAVAX_USDTe_V1","WAVAX_WBTC_V1","WAVAX_WBTCe_V1","WAVAX_PNG_V1","WAVAX_LINK_V1","WAVAX_LINKe_V1","WAVAX_DAI_V1","WAVAX_DAIe_V1","WAVAX_UNI_V1","WAVAX_UNIe_V1","WAVAX_SUSHI_V1","WAVAX_SUSHIe_V1","WAVAX_AAVE_V1","WAVAX_AAVEe_V1","WAVAX_YFI_V1","WAVAX_YFIe_V1","WAVAX_SNOB_V1","WAVAX_VSO_V1","WAVAX_SPORE_V1","WAVAX_BIFI_V1","WAVAX_BNB_V1","WAVAX_XAVA_V1","WAVAX_PEFI_V1","WAVAX_TRYB_V1","WAVAX_SHERPA_V1","WAVAX_YAK_V1","WAVAX_DYP_V1","WAVAX_QI_V1","WAVAX_WALBT_V1","WAVAX_HUSKY_V1","WAVAX_USDCe_V1","WAVAX_LYD_V1","WAVAX_TUSD_V1","WAVAX_GAJ_V1","WAVAX_GDL_V1","WAVAX_MFI_V1","WAVAX_SHIBX_V1","WAVAX_AVE_V1","WAVAX_ELE_V1","WAVAX_FRAX_V1","WAVAX_FXS_V1","WAVAX_START_V1","WAVAX_SWAPe_V1","WAVAX_YTS_V1","WAVAX_TUNDRA_V1","WAVAX_XUSD_V1","WAVAX_XDO_V1","PNG_ETH_V1","PNG_WETHe_V1","PNG_USDT_V1","PNG_USDTe_V1","PNG_WBTC_V1","PNG_WBTCe_V1","PNG_LINK_V1","PNG_LINKe_V1","PNG_DAI_V1","PNG_DAIe_V1","PNG_UNI_V1","PNG_UNIe_V1","PNG_SUSHI_V1","PNG_SUSHIe_V1","PNG_AAVE_V1","PNG_AAVEe_V1","PNG_YFI_V1","PNG_YFIe_V1","PNG_SNOB_V1","PNG_VSO_V1","PNG_SPORE_V1","PNG_BIFI_V1","PNG_BNB_V1","PNG_XAVA_V1","PNG_PEFI_V1","PNG_TRYB_V1","PNG_SHERPA_V1","PNG_YAK_V1","PNG_DYP_V1","PNG_QI_V1","PNG_WALBT_V1","PNG_HUSKY_V1","PNG_USDCe_V1","PNG_LYD_V1","PNG_TUSD_V1","PNG_GAJ_V1","PNG_GDL_V1","PNG_MFI_V1","PNG_SHIBX_V1","PNG_AVE_V1","PNG_ELE_V1","MIGRATIONS","from","to","BRIDGE_MIGRATORS","aeb","ab","STAKING_V0","Object","values","filter","staking","STAKING_V1","STAKING_REWARDS_CURRENT_VERSION","Math","max","map","STAKING_REWARDS_INFO","calculateTotalStakedAmountInAvaxFromPng","amountStaked","amountAvailable","avaxPngPairReserveOfPng","avaxPngPairReserveOfWavax","reserveInPng","EQ","BigInt","oneToken","avaxPngRatio","divide","multiply","valueOfPngInAvax","calculateTotalStakedAmountInAvax","reserveInWavax","GT","useStakingInfo","pairToFilterBy","chainId","account","info","stakingRewardInfo","undefined","involvesToken","png","rewardsAddresses","accountArg","balances","earnedAmounts","stakingTotalSupplies","pairs","pairAddresses","pairsHaveLoaded","every","state","pair","EXISTS","liquidityToken","address","pairTotalSupplies","avaxPngPairState","avaxPngPair","rewardRates","periodFinishes","reduce","memo","rewardsAddress","index","balanceState","earnedAmountState","stakingTotalSupplyState","rewardRateState","periodFinishState","pairState","pairTotalSupplyState","loading","LOADING","error","INVALID","NOT_EXISTS","console","wavax","equals","dummyPair","periodFinishMs","result","mul","toNumber","isPeriodFinished","Date","now","totalSupplyStaked","totalSupplyAvailable","stakedAmount","totalStakedAmount","totalRewardRate","isAvaxPool","totalStakedInWavax","reserveOf","raw","getHypotheticalRewardRate","greaterThan","individualRewardRate","push","periodFinish","earnedAmount","rewardRate","useTotalPngEarned","stakingInfo0","stakingInfo1","earned0","accumulator","stakingInfo","add","earned1","useDerivedStakeInfo","typedValue","stakingToken","userLiquidityUnstaked","t","parsedInput","parsedAmount","lessThanOrEqual","useDerivedUnstakeInfo","stakingAmount","token"],"mappings":"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","sourcesContent":["import { ChainId, CurrencyAmount, JSBI, Token, TokenAmount, WAVAX, Pair } from '@pangolindex/sdk'\nimport { useMemo } from 'react'\nimport {\n  PNG,\n  DAI,\n  DAIe,\n  UNI,\n  UNIe,\n  SUSHI,\n  SUSHIe,\n  ETH,\n  WETHe,\n  USDT,\n  USDTe,\n  WBTC,\n  WBTCe,\n  LINK,\n  LINKe,\n  AAVE,\n  AAVEe,\n  YFI,\n  YFIe,\n  SNOB,\n  VSO,\n  SPORE,\n  BIFI,\n  BNB,\n  XAVA,\n  PEFI,\n  TRYB,\n  SHERPA,\n  YAK,\n  DYP,\n  QI,\n  WALBT,\n  HUSKY,\n  USDCe,\n  LYD,\n  TUSD,\n  GAJ,\n  GDL,\n  MFI,\n  SHIBX,\n  AVE,\n  ELE,\n  FRAX,\n  FXS,\n  START,\n  SWAPe,\n  YTS,\n  TUNDRA,\n  XUSD,\n  XDO\n} from '../../constants'\nimport { STAKING_REWARDS_INTERFACE } from '../../constants/abis/staking-rewards'\nimport { PairState, usePair, usePairs } from '../../data/Reserves'\nimport { useActiveWeb3React } from '../../hooks'\nimport { NEVER_RELOAD, useMultipleContractSingleData } from '../multicall/hooks'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useTranslation } from 'react-i18next'\nimport ERC20_INTERFACE from '../../constants/abis/erc20'\n\nexport interface Staking {\n  tokens: [Token, Token]\n  stakingRewardAddress: string\n  version: number\n  multiplier: number\n}\n\nexport interface Migration {\n  from: Staking\n  to: Staking\n}\n\nexport interface BridgeMigrator {\n  aeb: string\n  ab: string\n}\n\nconst STAKING: {\n  [key: string]: Staking\n} = {\n  WAVAX_ETH_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], ETH[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xa16381eae6285123c323A665D4D99a6bCfaAC307',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_USDT_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], USDT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4f019452f51bbA0250Ec8B69D64282B79fC8BD9f',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_WBTC_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], WBTC[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x01897e996EEfFf65AE9999C02D1d8D7E9e0C0352',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_PNG_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], PNG[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x8FD2755c6ae7252753361991bDcd6fF55bDc01CE',\n    version: 0,\n    multiplier: 12\n  },\n  WAVAX_LINK_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], LINK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x7d7eCd4d370384B17DFC1b4155a8410e97841B65',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_DAI_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], DAI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xb5b9DEd9C193731f816AE1f8FfB7f8B0FaE40c88',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_UNI_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], UNI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xe4d9aE03859DaC6d65432d557F75b9b588a38eE1',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_SUSHI_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SUSHI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x88f26b81c9cae4ea168e31BC6353f493fdA29661',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_AAVE_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], AAVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xEe0023108918884181E48902f7C797573F413EcE',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_YFI_V0: {\n    tokens: [WAVAX[ChainId.AVALANCHE], YFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x797CBcf107519f4b279Fc5Db372e292cdF7e6956',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_ETH_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], ETH[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4e550fEfBf888cB43eaD73d821f646F43b1F2309',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_USDT_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], USDT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x7accC6f16Bf8c0Dce22371fbD914c6B5b402BF9f',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_WBTC_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], WBTC[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x99B06B9673fea30Ba55179b1433ce909Fdc28723',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_LINK_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], LINK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4Ad6e309805cb477010beA9fFC650cB27C1A9504',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_DAI_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], DAI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x8866077F08b076360C25F4Fd7fbC959ef135474C',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_UNI_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], UNI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x41188B4332fe68135d1524E43db98e81519d263B',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_SUSHI_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], SUSHI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x6955Cb85edEa63F861c0Be39C3d7F8921606c4Dc',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_AAVE_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], AAVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xb921a3aE9CeDa66fa8A74DBb0946367FB14faE34',\n    version: 0,\n    multiplier: 0\n  },\n  PNG_YFI_V0: {\n    tokens: [PNG[ChainId.AVALANCHE], YFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2061298C76cD76219b9b44439e96A75F19C61f7f',\n    version: 0,\n    multiplier: 0\n  },\n  WAVAX_ETH_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], ETH[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x417C02150b9a31BcaCb201d1D60967653384E1C6',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_WETHe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], WETHe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x830A966B9B447c9B15aB24c0369c4018E75F31C9',\n    version: 1,\n    multiplier: 10\n  },\n  WAVAX_USDT_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], USDT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x94C021845EfE237163831DAC39448cFD371279d6',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_USDTe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], USDTe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x006cC053bdb84C2d6380B3C4a573d84636378A47',\n    version: 1,\n    multiplier: 10\n  },\n  WAVAX_WBTC_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], WBTC[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xe968E9753fd2c323C2Fe94caFF954a48aFc18546',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_WBTCe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], WBTCe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x30CbF11f6fcc9FC1bF6E55A6941b1A47A56eAEC5',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_PNG_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], PNG[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x574d3245e36Cf8C9dc86430EaDb0fDB2F385F829',\n    version: 1,\n    multiplier: 12\n  },\n  WAVAX_LINK_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], LINK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xBDa623cDD04d822616A263BF4EdbBCe0B7DC4AE7',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_LINKe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], LINKe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2e10D9d08f76807eFdB6903025DE8e006b1185F5',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_DAI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], DAI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x701e03fAD691799a8905043C0d18d2213BbCf2c7',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_DAIe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], DAIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x63A84F66b8c90841Cb930F2dC3D28799F0c6657B',\n    version: 1,\n    multiplier: 10\n  },\n  WAVAX_UNI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], UNI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x1F6aCc5F5fE6Af91C1BB3bEbd27f4807a243D935',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_UNIe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], UNIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x6E36A71c1A211f01Ff848C1319D4e34BB5483224',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_SUSHI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SUSHI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xDA354352b03f87F84315eEF20cdD83c49f7E812e',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_SUSHIe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SUSHIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2D55341f2abbb5472020e2d556a4f6B951C8Fa22',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_AAVE_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], AAVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4dF32F1F8469648e89E62789F4246f73fe768b8E',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_AAVEe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], AAVEe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xa04fCcE7955312709c838982ad0E297375002C32',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_YFI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], YFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2C31822F35506C6444F458Ed7470c79f9924Ee86',\n    version: 1,\n    multiplier: 0\n  },\n  WAVAX_YFIe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], YFIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x642c5B7AC22f56A0eF87930a89f0980FcA904B03',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_SNOB_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SNOB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x640D754113A3CBDd80BcCc1b5c0387148EEbf2fE',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_VSO_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], VSO[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xf2b788085592380bfCAc40Ac5E0d10D9d0b54eEe',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_SPORE_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SPORE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xd3e5538A049FcFcb8dF559B85B352302fEfB8d7C',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_BIFI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], BIFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4E258f7ec60234bb6f3Ea7eCFf5931901182Bd6E',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_BNB_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], BNB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x21CCa1672E95996413046077B8cf1E52F080A165',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_XAVA_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], XAVA[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4219330Af5368378D5ffd869a55f5F2a26aB898c',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_PEFI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], PEFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xd7EDBb1005ec65721a3976Dba996AdC6e02dc9bA',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_TRYB_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], TRYB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x079a479e270E72A1899239570912358C6BC22d94',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_SHERPA_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SHERPA[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x99918c92655D6f8537588210cD3Ddd52312CB36d',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_YAK_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], YAK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xb600429CCD364F1727F91FC0E75D67d65D0ee4c5',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_DYP_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], DYP[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x29a7F3D1F27637EDA531dC69D989c86Ab95225D8',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_QI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], QI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xeD472431e02Ea9EF8cC99B9812c335ac0873bba2',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_WALBT_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], WALBT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xa296F9474e77aE21f90afb50713F44Cc6916FbB2',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_HUSKY_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], HUSKY[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2e60ab79BbCdfea164874700D5d98969a386eB2a',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_USDCe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], USDCe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x84B536dA1A2D9b0609f9Da73139674cc2D75AF2D',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_LYD_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], LYD[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xE6dE666a80a357497A2cAB3A91F1c28dcAA1Eca4',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_TUSD_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], TUSD[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xf2dd964AcF53ad8959540CceEFD9FeA13d4D0Eb1',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_GAJ_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], GAJ[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xd31FFD05a41645631A22a64c1f870a6248A4DDcF',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_GDL_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], GDL[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xA6F2408e3CD34084c37A0D88FED8C6b6490F7529',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_MFI_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], MFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xd64370aeDbEbbAE04CfCaE27E8E0c5ecbD343336',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_SHIBX_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SHIBX[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x0029381eFF48E9eA963F8095eA204098ac8e44B5',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_AVE_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], AVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x94183DD08FFAa595e43B104804d55eE95492C8cB',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_ELE_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], ELE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x10E5d5f598abb970F85456Ea59f0611D77E00168',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_FRAX_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], FRAX[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xfd0824dF1E598D34C3495e1C2a339E2FA23Af40D',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_FXS_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], FXS[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x76Ad5c64Fe6B26b6aD9aaAA19eBa00e9eCa31FE1',\n    version: 1,\n    multiplier: 1\n  },\n  WAVAX_START_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], START[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x5105d9De003fB7d22979cd0cE167Ab919E60900A',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_SWAPe_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], SWAPe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x255e7a0eB5aa1616781702203B042821C35394eF',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_YTS_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], YTS[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x6F571bA11447136fC11BA9AC98f0f0233dAc1BFF',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_TUNDRA_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], TUNDRA[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xeD617a06C6c727827Ca3B6fb3E565C68342c4c2b',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_XUSD_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], XUSD[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xbD56b964FCdd208a7a83C291864eEb8271BaB773',\n    version: 1,\n    multiplier: 2\n  },\n  WAVAX_XDO_V1: {\n    tokens: [WAVAX[ChainId.AVALANCHE], XDO[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x5d479aEbfc49b9e08860BbfCfb3BB4D768Aa1fc3',\n    version: 1,\n    multiplier: 2\n  },\n\n  PNG_ETH_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], ETH[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x7ac007afB5d61F48D1E3C8Cc130d4cf6b765000e',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_WETHe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], WETHe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x03a9091620CACeE4968c915232B175C16a584733',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_USDT_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], USDT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xE2510a1fCCCde8d2D1c40b41e8f71fB1F47E5bBA',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_USDTe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], USDTe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x7216d1e173c1f1Ed990239d5c77d74714a837Cd5',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_WBTC_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], WBTC[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x681047473B6145BA5dB90b074E32861549e85cC7',\n    version: 1,\n    multiplier: 1\n  },\n  PNG_WBTCe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], WBTCe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xEeEA1e815f12d344b5035a33da4bc383365F5Fee',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_LINK_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], LINK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x6356b24b36074AbE2903f44fE4019bc5864FDe36',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_LINKe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], LINKe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4B283e4211B3fAa525846d21869925e78f93f189',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_DAI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], DAI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xe3103e565cF96a5709aE8e603B1EfB7fED04613B',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_DAIe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], DAIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xF344611DD94099708e508C2Deb16628578940d77',\n    version: 1,\n    multiplier: 1\n  },\n  PNG_UNI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], UNI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4f74BbF6859A994e7c309eA0f11E3Cc112955110',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_UNIe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], UNIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xD4E49A8Ec23daB51ACa459D233e9447DE03AFd29',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_SUSHI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SUSHI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x633F4b4DB7dD4fa066Bd9949Ab627a551E0ecd32',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_SUSHIe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SUSHIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x923E69322Bea5e22799a29Dcfc9c616F3B5cF95b',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_AAVE_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], AAVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xFd9ACEc0F413cA05d5AD5b962F3B4De40018AD87',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_AAVEe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], AAVEe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x3F91756D773A1455A7a1A70f5d9239F1B1d1f095',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_YFI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], YFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xc7D0E29b616B29aC6fF4FD5f37c8Da826D16DB0D',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_YFIe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], YFIe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x269Ed6B2040f965D9600D0859F36951cB9F01460',\n    version: 1,\n    multiplier: 3\n  },\n  PNG_SNOB_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SNOB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x08B9A023e34Bad6Db868B699fa642Bf5f12Ebe76',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_VSO_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], VSO[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x759ee0072901f409e4959E00b00a16FD729397eC',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_SPORE_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SPORE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x12A33F6B0dd0D35279D402aB61587fE7eB23f7b0',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_BIFI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], BIFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x518B07E2d9e08A8c2e3cB7704336520827a4d399',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_BNB_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], BNB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x68a90C38bF4f90AC2a870d6FcA5b0A5A218763AD',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_XAVA_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], XAVA[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x5b3Ed7f47D1d4FA22b559D043a09d78bc55A94E9',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_PEFI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], PEFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x76e404Ab7357fD97d4f1e8Dd52f298A035fd408c',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_TRYB_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], TRYB[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x0A9773AEbc1429d860A492d70c8EA335fAa9F19f',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_SHERPA_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SHERPA[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x80E919784e7c5AD3Dd59cAfCDC0e9C079B65f262',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_YAK_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], YAK[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x42ff9473a5AEa00dE39355e0288c7A151EB00B6e',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_DYP_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], DYP[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x3A0eF6a586D9C15de30eDF5d34ae00E26b0125cE',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_QI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], QI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x2bD42C357a3e13F18849C67e8dC108Cc8462ae33',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_WALBT_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], WALBT[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x393fe4bc29AfbB3786D99f043933c49097449fA1',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_HUSKY_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], HUSKY[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x07b34dAABcb75C9cbD0c8AEfbC0ed5E30845eF12',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_USDCe_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], USDCe[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x73d1cC4B8dA555005E949B3ECEE490A7206C14DF',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_LYD_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], LYD[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xe1314E6d436877850BB955Ac074226FCB0B8a86d',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_TUSD_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], TUSD[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x6fa49bd916e392dc9264636b0b5Cf2beee652dA3',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_GAJ_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], GAJ[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x95bD8FDb58692d343C89bC7bc435773779CC0e47',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_GDL_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], GDL[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xb008e7AD32c710B07fb8D4453aBC79214Cd34891',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_MFI_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], MFI[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x4c0650668A63EF468c7bDCd910A62287e9FC4d52',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_SHIBX_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], SHIBX[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xEcF9b9aE88150F11cbf2263c69823e2ECb84F07B',\n    version: 1,\n    multiplier: 0\n  },\n  PNG_AVE_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], AVE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0x7C960e55C8119457528490C3a34C1438FaF6B039',\n    version: 1,\n    multiplier: 5\n  },\n  PNG_ELE_V1: {\n    tokens: [PNG[ChainId.AVALANCHE], ELE[ChainId.AVALANCHE]],\n    stakingRewardAddress: '0xfcB0C53FC5c71005D11C6838922e254323b7Ca06',\n    version: 1,\n    multiplier: 5\n  }\n}\n\n// The first mapping in the list takes priority if multiple migrations exist from the same pool\nexport const MIGRATIONS: Migration[] = [\n  { from: STAKING.WAVAX_PNG_V0, to: STAKING.WAVAX_PNG_V1 },\n  { from: STAKING.WAVAX_ETH_V0, to: STAKING.WAVAX_WETHe_V1 },\n  { from: STAKING.WAVAX_USDT_V0, to: STAKING.WAVAX_USDTe_V1 },\n  { from: STAKING.WAVAX_WBTC_V0, to: STAKING.WAVAX_WBTCe_V1 },\n  { from: STAKING.WAVAX_LINK_V0, to: STAKING.WAVAX_LINKe_V1 },\n  { from: STAKING.WAVAX_DAI_V0, to: STAKING.WAVAX_DAIe_V1 },\n  { from: STAKING.WAVAX_UNI_V0, to: STAKING.WAVAX_UNIe_V1 },\n  { from: STAKING.WAVAX_SUSHI_V0, to: STAKING.WAVAX_SUSHIe_V1 },\n  { from: STAKING.WAVAX_AAVE_V0, to: STAKING.WAVAX_AAVEe_V1 },\n  { from: STAKING.WAVAX_YFI_V0, to: STAKING.WAVAX_YFIe_V1 },\n  // From v0 (PNG)\n  { from: STAKING.PNG_ETH_V0, to: STAKING.PNG_WETHe_V1 },\n  { from: STAKING.PNG_USDT_V0, to: STAKING.PNG_USDTe_V1 },\n  { from: STAKING.PNG_WBTC_V0, to: STAKING.PNG_WBTCe_V1 },\n  { from: STAKING.PNG_LINK_V0, to: STAKING.PNG_LINKe_V1 },\n  { from: STAKING.PNG_DAI_V0, to: STAKING.PNG_DAIe_V1 },\n  { from: STAKING.PNG_UNI_V0, to: STAKING.PNG_UNIe_V1 },\n  { from: STAKING.PNG_SUSHI_V0, to: STAKING.PNG_SUSHIe_V1 },\n  { from: STAKING.PNG_AAVE_V0, to: STAKING.PNG_AAVEe_V1 },\n  { from: STAKING.PNG_YFI_V0, to: STAKING.PNG_YFIe_V1 },\n\n  // From v1 (WAVAX)\n  { from: STAKING.WAVAX_ETH_V1, to: STAKING.WAVAX_WETHe_V1 },\n  { from: STAKING.WAVAX_USDT_V1, to: STAKING.WAVAX_USDTe_V1 },\n  { from: STAKING.WAVAX_WBTC_V1, to: STAKING.WAVAX_WBTCe_V1 },\n  { from: STAKING.WAVAX_LINK_V1, to: STAKING.WAVAX_LINKe_V1 },\n  { from: STAKING.WAVAX_DAI_V1, to: STAKING.WAVAX_DAIe_V1 },\n  { from: STAKING.WAVAX_UNI_V1, to: STAKING.WAVAX_UNIe_V1 },\n  { from: STAKING.WAVAX_SUSHI_V1, to: STAKING.WAVAX_SUSHIe_V1 },\n  { from: STAKING.WAVAX_AAVE_V1, to: STAKING.WAVAX_AAVEe_V1 },\n  { from: STAKING.WAVAX_YFI_V1, to: STAKING.WAVAX_YFIe_V1 },\n  // From v1 (PNG)\n  { from: STAKING.PNG_ETH_V1, to: STAKING.PNG_WETHe_V1 },\n  { from: STAKING.PNG_USDT_V1, to: STAKING.PNG_USDTe_V1 },\n  { from: STAKING.PNG_WBTC_V1, to: STAKING.PNG_WBTCe_V1 },\n  { from: STAKING.PNG_LINK_V1, to: STAKING.PNG_LINKe_V1 },\n  { from: STAKING.PNG_DAI_V1, to: STAKING.PNG_DAIe_V1 },\n  { from: STAKING.PNG_UNI_V1, to: STAKING.PNG_UNIe_V1 },\n  { from: STAKING.PNG_SUSHI_V1, to: STAKING.PNG_SUSHIe_V1 },\n  { from: STAKING.PNG_AAVE_V1, to: STAKING.PNG_AAVEe_V1 },\n  { from: STAKING.PNG_YFI_V1, to: STAKING.PNG_YFIe_V1 }\n]\n\nexport const BRIDGE_MIGRATORS: BridgeMigrator[] = [\n  { aeb: '0xf20d962a6c8f70c731bd838a3a388D7d48fA6e15', ab: '0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB' }, // ETH\n  { aeb: '0xde3A24028580884448a5397872046a019649b084', ab: '0xc7198437980c041c805A1EDcbA50c1Ce5db95118' }, // USDT\n  { aeb: '0x408D4cD0ADb7ceBd1F1A1C33A0Ba2098E1295bAB', ab: '0x50b7545627a5162F82A992c33b87aDc75187B218' }, // WBTC\n  { aeb: '0xB3fe5374F67D7a22886A0eE082b2E2f9d2651651', ab: '0x5947BB275c521040051D82396192181b413227A3' }, // LINK\n  { aeb: '0xbA7dEebBFC5fA1100Fb055a87773e1E99Cd3507a', ab: '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70' }, // DAI\n  { aeb: '0xf39f9671906d8630812f9d9863bBEf5D523c84Ab', ab: '0x8eBAf22B6F053dFFeaf46f4Dd9eFA95D89ba8580' }, // UNI\n  { aeb: '0x39cf1BD5f15fb22eC3D9Ff86b0727aFc203427cc', ab: '0x37B608519F91f70F2EeB0e5Ed9AF4061722e4F76' }, // SUSHI\n  { aeb: '0x8cE2Dee54bB9921a2AE0A63dBb2DF8eD88B91dD9', ab: '0x63a72806098Bd3D9520cC43356dD78afe5D386D9' }, // AAVE\n  { aeb: '0x99519AcB025a0e0d44c3875A4BbF03af65933627', ab: '0x9eAaC1B23d935365bD7b542Fe22cEEe2922f52dc' } // YFI\n]\n\nexport const STAKING_V0: Staking[] = Object.values(STAKING).filter(staking => staking.version === 0)\nexport const STAKING_V1: Staking[] = Object.values(STAKING).filter(staking => staking.version === 1)\n\nexport const STAKING_REWARDS_CURRENT_VERSION = Math.max(...Object.values(STAKING).map(staking => staking.version))\n\nexport const STAKING_REWARDS_INFO: {\n  [chainId in ChainId]?: Staking[][]\n} = {\n  [ChainId.AVALANCHE]: [STAKING_V0, STAKING_V1]\n}\n\nexport interface StakingInfo {\n  // the address of the reward contract\n  stakingRewardAddress: string\n  // the tokens involved in this pair\n  tokens: [Token, Token]\n  // the amount of token currently staked, or undefined if no account\n  stakedAmount: TokenAmount\n  // the amount of reward token earned by the active account, or undefined if no account\n  earnedAmount: TokenAmount\n  // the total amount of token staked in the contract\n  totalStakedAmount: TokenAmount\n  // the amount of token distributed per second to all LPs, constant\n  totalRewardRate: TokenAmount\n  // the current amount of token distributed to the active account per second.\n  // equivalent to percent of total supply * reward rate\n  rewardRate: TokenAmount\n  //  total staked Avax in the pool\n  totalStakedInWavax: TokenAmount\n  // when the period ends\n  periodFinish: Date | undefined\n  // has the reward period expired\n  isPeriodFinished: boolean\n  // the pool weight\n  multiplier: JSBI\n  // calculates a hypothetical amount of token distributed to the active account per second.\n  getHypotheticalRewardRate: (\n    stakedAmount: TokenAmount,\n    totalStakedAmount: TokenAmount,\n    totalRewardRate: TokenAmount\n  ) => TokenAmount\n}\n\nconst calculateTotalStakedAmountInAvaxFromPng = function(\n  amountStaked: JSBI,\n  amountAvailable: JSBI,\n  avaxPngPairReserveOfPng: JSBI,\n  avaxPngPairReserveOfWavax: JSBI,\n  reserveInPng: JSBI\n): TokenAmount {\n  if (JSBI.EQ(amountAvailable, JSBI.BigInt(0))) {\n    return new TokenAmount(WAVAX[ChainId.AVALANCHE], JSBI.BigInt(0))\n  }\n\n  const oneToken = JSBI.BigInt(1000000000000000000)\n  const avaxPngRatio = JSBI.divide(JSBI.multiply(oneToken, avaxPngPairReserveOfWavax), avaxPngPairReserveOfPng)\n  const valueOfPngInAvax = JSBI.divide(JSBI.multiply(reserveInPng, avaxPngRatio), oneToken)\n\n  return new TokenAmount(\n    WAVAX[ChainId.AVALANCHE],\n    JSBI.divide(\n      JSBI.multiply(\n        JSBI.multiply(amountStaked, valueOfPngInAvax),\n        JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the wavax they entitle owner to\n      ),\n      amountAvailable\n    )\n  )\n}\n\nconst calculateTotalStakedAmountInAvax = function(\n  amountStaked: JSBI,\n  amountAvailable: JSBI,\n  reserveInWavax: JSBI\n): TokenAmount {\n  if (JSBI.GT(amountAvailable, 0)) {\n    // take the total amount of LP tokens staked, multiply by AVAX value of all LP tokens, divide by all LP tokens\n    return new TokenAmount(\n      WAVAX[ChainId.AVALANCHE],\n      JSBI.divide(\n        JSBI.multiply(\n          JSBI.multiply(amountStaked, reserveInWavax),\n          JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the wavax they entitle owner to\n        ),\n        amountAvailable\n      )\n    )\n  } else {\n    return new TokenAmount(WAVAX[ChainId.AVALANCHE], JSBI.BigInt(0))\n  }\n}\n\n// gets the staking info from the network for the active chain id\nexport function useStakingInfo(version: number, pairToFilterBy?: Pair | null): StakingInfo[] {\n  const { chainId, account } = useActiveWeb3React()\n\n  const info = useMemo(\n    () =>\n      chainId\n        ? STAKING_REWARDS_INFO[chainId]?.[version]?.filter(stakingRewardInfo =>\n            pairToFilterBy === undefined\n              ? true\n              : pairToFilterBy === null\n              ? false\n              : pairToFilterBy.involvesToken(stakingRewardInfo.tokens[0]) &&\n                pairToFilterBy.involvesToken(stakingRewardInfo.tokens[1])\n          ) ?? []\n        : [],\n    [chainId, pairToFilterBy, version]\n  )\n\n  const png = PNG[ChainId.AVALANCHE]\n\n  const rewardsAddresses = useMemo(() => info.map(({ stakingRewardAddress }) => stakingRewardAddress), [info])\n\n  const accountArg = useMemo(() => [account ?? undefined], [account])\n\n  // get all the info from the staking rewards contracts\n  const tokens = useMemo(() => info.map(({ tokens }) => tokens), [info])\n  const balances = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, 'balanceOf', accountArg)\n  const earnedAmounts = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, 'earned', accountArg)\n  const stakingTotalSupplies = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, 'totalSupply')\n  const pairs = usePairs(tokens)\n\n  const pairAddresses = useMemo(() => {\n    const pairsHaveLoaded = pairs?.every(([state, pair]) => state === PairState.EXISTS)\n    if (!pairsHaveLoaded) return []\n    else return pairs.map(([state, pair]) => pair?.liquidityToken.address)\n  }, [pairs])\n\n  const pairTotalSupplies = useMultipleContractSingleData(pairAddresses, ERC20_INTERFACE, 'totalSupply')\n\n  const [avaxPngPairState, avaxPngPair] = usePair(WAVAX[ChainId.AVALANCHE], png)\n\n  // tokens per second, constants\n  const rewardRates = useMultipleContractSingleData(\n    rewardsAddresses,\n    STAKING_REWARDS_INTERFACE,\n    'rewardRate',\n    undefined,\n    NEVER_RELOAD\n  )\n  const periodFinishes = useMultipleContractSingleData(\n    rewardsAddresses,\n    STAKING_REWARDS_INTERFACE,\n    'periodFinish',\n    undefined,\n    NEVER_RELOAD\n  )\n\n  return useMemo(() => {\n    if (!chainId || !png) return []\n\n    return rewardsAddresses.reduce<StakingInfo[]>((memo, rewardsAddress, index) => {\n      // these two are dependent on account\n      const balanceState = balances[index]\n      const earnedAmountState = earnedAmounts[index]\n\n      // these get fetched regardless of account\n      const stakingTotalSupplyState = stakingTotalSupplies[index]\n      const rewardRateState = rewardRates[index]\n      const periodFinishState = periodFinishes[index]\n      const [pairState, pair] = pairs[index]\n      const pairTotalSupplyState = pairTotalSupplies[index]\n\n      if (\n        // these may be undefined if not logged in\n        !balanceState?.loading &&\n        !earnedAmountState?.loading &&\n        // always need these\n        stakingTotalSupplyState?.loading === false &&\n        rewardRateState?.loading === false &&\n        periodFinishState?.loading === false &&\n        pairTotalSupplyState?.loading === false &&\n        pair &&\n        avaxPngPair &&\n        pairState !== PairState.LOADING &&\n        avaxPngPairState !== PairState.LOADING\n      ) {\n        if (\n          balanceState?.error ||\n          earnedAmountState?.error ||\n          stakingTotalSupplyState.error ||\n          rewardRateState.error ||\n          periodFinishState.error ||\n          pairTotalSupplyState.error ||\n          pairState === PairState.INVALID ||\n          pairState === PairState.NOT_EXISTS ||\n          avaxPngPairState === PairState.INVALID ||\n          avaxPngPairState === PairState.NOT_EXISTS\n        ) {\n          console.error('Failed to load staking rewards info')\n          return memo\n        }\n\n        // get the LP token\n        const tokens = info[index].tokens\n        const wavax = tokens[0].equals(WAVAX[tokens[0].chainId]) ? tokens[0] : tokens[1]\n        const dummyPair = new Pair(new TokenAmount(tokens[0], '0'), new TokenAmount(tokens[1], '0'), chainId)\n        // check for account, if no account set to 0\n\n        const periodFinishMs = periodFinishState.result?.[0]?.mul(1000)?.toNumber()\n\n        // periodFinish will be 0 immediately after a reward contract is initialized\n        const isPeriodFinished = periodFinishMs === 0 ? false : periodFinishMs < Date.now()\n\n        const totalSupplyStaked = JSBI.BigInt(stakingTotalSupplyState.result?.[0])\n        const totalSupplyAvailable = JSBI.BigInt(pairTotalSupplyState.result?.[0])\n\n        const stakedAmount = new TokenAmount(dummyPair.liquidityToken, JSBI.BigInt(balanceState?.result?.[0] ?? 0))\n        const totalStakedAmount = new TokenAmount(dummyPair.liquidityToken, JSBI.BigInt(totalSupplyStaked))\n        const totalRewardRate = new TokenAmount(png, JSBI.BigInt(isPeriodFinished ? 0 : rewardRateState.result?.[0]))\n\n        const isAvaxPool = tokens[0].equals(WAVAX[tokens[0].chainId])\n        const totalStakedInWavax = isAvaxPool\n          ? calculateTotalStakedAmountInAvax(totalSupplyStaked, totalSupplyAvailable, pair.reserveOf(wavax).raw)\n          : calculateTotalStakedAmountInAvaxFromPng(\n              totalSupplyStaked,\n              totalSupplyAvailable,\n              avaxPngPair.reserveOf(png).raw,\n              avaxPngPair.reserveOf(WAVAX[tokens[1].chainId]).raw,\n              pair.reserveOf(png).raw\n            )\n\n        const getHypotheticalRewardRate = (\n          stakedAmount: TokenAmount,\n          totalStakedAmount: TokenAmount,\n          totalRewardRate: TokenAmount\n        ): TokenAmount => {\n          return new TokenAmount(\n            png,\n            JSBI.greaterThan(totalStakedAmount.raw, JSBI.BigInt(0))\n              ? JSBI.divide(JSBI.multiply(totalRewardRate.raw, stakedAmount.raw), totalStakedAmount.raw)\n              : JSBI.BigInt(0)\n          )\n        }\n\n        const individualRewardRate = getHypotheticalRewardRate(stakedAmount, totalStakedAmount, totalRewardRate)\n\n        const multiplier = info[index].multiplier\n\n        memo.push({\n          stakingRewardAddress: rewardsAddress,\n          tokens: tokens,\n          periodFinish: periodFinishMs > 0 ? new Date(periodFinishMs) : undefined,\n          isPeriodFinished: isPeriodFinished,\n          earnedAmount: new TokenAmount(png, JSBI.BigInt(earnedAmountState?.result?.[0] ?? 0)),\n          rewardRate: individualRewardRate,\n          totalRewardRate: totalRewardRate,\n          stakedAmount: stakedAmount,\n          totalStakedAmount: totalStakedAmount,\n          totalStakedInWavax: totalStakedInWavax,\n          multiplier: JSBI.BigInt(multiplier),\n          getHypotheticalRewardRate\n        })\n      }\n      return memo\n    }, [])\n  }, [\n    chainId,\n    png,\n    rewardsAddresses,\n    balances,\n    earnedAmounts,\n    stakingTotalSupplies,\n    rewardRates,\n    periodFinishes,\n    pairs,\n    pairTotalSupplies,\n    avaxPngPair,\n    avaxPngPairState,\n    info\n  ])\n}\n\nexport function useTotalPngEarned(): TokenAmount | undefined {\n  const { chainId } = useActiveWeb3React()\n  const png = chainId ? PNG[chainId] : undefined\n  const stakingInfo0 = useStakingInfo(0)\n  const stakingInfo1 = useStakingInfo(1)\n\n  const earned0 = useMemo(() => {\n    if (!png) return undefined\n    return (\n      stakingInfo0?.reduce(\n        (accumulator, stakingInfo) => accumulator.add(stakingInfo.earnedAmount),\n        new TokenAmount(png, '0')\n      ) ?? new TokenAmount(png, '0')\n    )\n  }, [stakingInfo0, png])\n\n  const earned1 = useMemo(() => {\n    if (!png) return undefined\n    return (\n      stakingInfo1?.reduce(\n        (accumulator, stakingInfo) => accumulator.add(stakingInfo.earnedAmount),\n        new TokenAmount(png, '0')\n      ) ?? new TokenAmount(png, '0')\n    )\n  }, [stakingInfo1, png])\n\n  return earned0 ? (earned1 ? earned0.add(earned1) : earned0) : earned1 ? earned1 : undefined\n}\n\n// based on typed value\nexport function useDerivedStakeInfo(\n  typedValue: string,\n  stakingToken: Token,\n  userLiquidityUnstaked: TokenAmount | undefined\n): {\n  parsedAmount?: CurrencyAmount\n  error?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const parsedInput: CurrencyAmount | undefined = tryParseAmount(typedValue, stakingToken)\n\n  const parsedAmount =\n    parsedInput && userLiquidityUnstaked && JSBI.lessThanOrEqual(parsedInput.raw, userLiquidityUnstaked.raw)\n      ? parsedInput\n      : undefined\n\n  let error: string | undefined\n  if (!account) {\n    error = t('stakeHooks.connectWallet')\n  }\n  if (!parsedAmount) {\n    error = error ?? t('stakeHooks.enterAmount')\n  }\n\n  return {\n    parsedAmount,\n    error\n  }\n}\n\n// based on typed value\nexport function useDerivedUnstakeInfo(\n  typedValue: string,\n  stakingAmount: TokenAmount\n): {\n  parsedAmount?: CurrencyAmount\n  error?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const parsedInput: CurrencyAmount | undefined = tryParseAmount(typedValue, stakingAmount.token)\n\n  const parsedAmount = parsedInput && JSBI.lessThanOrEqual(parsedInput.raw, stakingAmount.raw) ? parsedInput : undefined\n\n  let error: string | undefined\n  if (!account) {\n    error = t('stakeHooks.connectWallet')\n  }\n  if (!parsedAmount) {\n    error = error ?? t('stakeHooks.enterAmount')\n  }\n\n  return {\n    parsedAmount,\n    error\n  }\n}\n"]},"metadata":{},"sourceType":"module"}