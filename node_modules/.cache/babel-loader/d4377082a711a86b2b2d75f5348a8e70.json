{"ast":null,"code":"var _jsxFileName = \"/Users/sidshekhar/Documents/interface/src/components/earn/PoolCard.tsx\";\nimport React from 'react';\nimport { AutoColumn } from '../Column';\nimport { RowBetween } from '../Row';\nimport styled from 'styled-components';\nimport { TYPE, StyledInternalLink } from '../../theme';\nimport DoubleCurrencyLogo from '../DoubleLogo';\nimport { CAVAX } from '@pangolindex/sdk';\nimport { ButtonPrimary } from '../Button';\nimport { useColor } from '../../hooks/useColor';\nimport { currencyId } from '../../utils/currencyId';\nimport { Break, CardNoise, CardBGImage } from './styled';\nimport { unwrappedToken } from '../../utils/wrappedCurrency';\nimport { PNG } from '../../constants';\nimport { useTranslation } from 'react-i18next';\nconst StatContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n   display: none;\n `};\n`;\nconst AprContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n`;\nconst Wrapper = styled(AutoColumn)`\n  border-radius: 12px;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  opacity: ${({\n  showBackground\n}) => showBackground ? '1' : '1'};\n  background: ${({\n  theme,\n  bgColor,\n  showBackground\n}) => `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%, ${showBackground ? theme.black : theme.bg5} 100%) `};\n  color: ${({\n  theme,\n  showBackground\n}) => showBackground ? theme.white : theme.text1} !important;\n\n  ${({\n  showBackground\n}) => showBackground && `  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n     0px 24px 32px rgba(0, 0, 0, 0.01);`}\n`;\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 48px 1fr auto 120px;\n  grid-gap: 0px;\n  align-items: center;\n  padding: 1rem;\n  z-index: 1;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n     grid-template-columns: 48px 1fr auto 96px;\n   `};\n`;\nconst BottomSection = styled.div`\n  padding: 12px 16px;\n  opacity: ${({\n  showBackground\n}) => showBackground ? '1' : '0.4'};\n  border-radius: 0 0 12px 12px;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: space-between;\n  z-index: 1;\n`;\nexport default function PoolCard({\n  stakingInfo,\n  migration,\n  version,\n  swapFeeApr,\n  stakingApr\n}) {\n  var _stakingInfo$totalSta, _stakingInfo$rewardRa, _stakingInfo$rewardRa2;\n\n  const token0 = stakingInfo.tokens[0];\n  const token1 = stakingInfo.tokens[1];\n  const currency0 = unwrappedToken(token0);\n  const currency1 = unwrappedToken(token1);\n  const {\n    t\n  } = useTranslation();\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0'));\n  const token = currency0 === CAVAX || currency1 === CAVAX ? currency0 === CAVAX ? token1 : token0 : token0.equals(PNG[token0.chainId]) ? token1 : token0; // get the color of the token\n\n  const backgroundColor = useColor(token);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    showBackground: isStaking,\n    bgColor: backgroundColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    desaturate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TopSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n    currency0: currency0,\n    currency1: currency1,\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    fontSize: 24,\n    style: {\n      marginLeft: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, currency0.symbol, \"-\", currency1.symbol), migration && isStaking ? /*#__PURE__*/React.createElement(StyledInternalLink, {\n    to: `/migrate/${currencyId(currency0)}/${currencyId(currency1)}/${Number(version)}/${currencyId(migration.tokens[0])}/${currencyId(migration.tokens[1])}/${migration === null || migration === void 0 ? void 0 : migration.version}`,\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Migrate\")) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), (isStaking || !stakingInfo.isPeriodFinished) && /*#__PURE__*/React.createElement(StyledInternalLink, {\n    to: `/png/${currencyId(currency0)}/${currencyId(currency1)}/${version}`,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, isStaking ? t('earn.manage') : t('earn.deposit')))), /*#__PURE__*/React.createElement(StatContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \" \", t('earn.totalStaked')), /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, `${(_stakingInfo$totalSta = stakingInfo.totalStakedInWavax.toSignificant(4, {\n    groupSeparator: ','\n  })) !== null && _stakingInfo$totalSta !== void 0 ? _stakingInfo$totalSta : '-'} AVAX`))), /*#__PURE__*/React.createElement(AprContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Swap Fee APR\"), /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, `${swapFeeApr}%`)), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"PNG Rewards APR\"), /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, `${stakingApr}%`)), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \"Total APR\"), /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, `${swapFeeApr + stakingApr}%`))), /*#__PURE__*/React.createElement(StatContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \" \", t('earn.poolWeight'), \" \"), /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, `${stakingInfo.multiplier}X`))), isStaking && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Break, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BottomSection, {\n    showBackground: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    color: 'white',\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, t('earn.yourRate'))), /*#__PURE__*/React.createElement(TYPE.black, {\n    style: {\n      textAlign: 'right'\n    },\n    color: 'white',\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"wizard-icon\",\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"\\u26A1\"), `${(_stakingInfo$rewardRa = stakingInfo.rewardRate) === null || _stakingInfo$rewardRa === void 0 ? void 0 : (_stakingInfo$rewardRa2 = _stakingInfo$rewardRa.multiply(`${60 * 60 * 24 * 7}`)) === null || _stakingInfo$rewardRa2 === void 0 ? void 0 : _stakingInfo$rewardRa2.toSignificant(4, {\n    groupSeparator: ','\n  })} PNG / week`))));\n}","map":{"version":3,"sources":["/Users/sidshekhar/Documents/interface/src/components/earn/PoolCard.tsx"],"names":["React","AutoColumn","RowBetween","styled","TYPE","StyledInternalLink","DoubleCurrencyLogo","CAVAX","ButtonPrimary","useColor","currencyId","Break","CardNoise","CardBGImage","unwrappedToken","PNG","useTranslation","StatContainer","div","theme","mediaWidth","upToSmall","AprContainer","Wrapper","showBackground","bgColor","black","bg5","white","text1","TopSection","BottomSection","PoolCard","stakingInfo","migration","version","swapFeeApr","stakingApr","token0","tokens","token1","currency0","currency1","t","isStaking","Boolean","stakedAmount","greaterThan","token","equals","chainId","backgroundColor","marginLeft","symbol","Number","marginRight","isPeriodFinished","width","totalStakedInWavax","toSignificant","groupSeparator","multiplier","textAlign","rewardRate","multiply"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { AutoColumn } from '../Column'\nimport { RowBetween } from '../Row'\nimport styled from 'styled-components'\nimport { TYPE, StyledInternalLink } from '../../theme'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { CAVAX, Token } from '@pangolindex/sdk'\nimport { ButtonPrimary } from '../Button'\nimport { Staking, StakingInfo } from '../../state/stake/hooks'\nimport { useColor } from '../../hooks/useColor'\nimport { currencyId } from '../../utils/currencyId'\nimport { Break, CardNoise, CardBGImage } from './styled'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\nimport { PNG } from '../../constants'\nimport { useTranslation } from 'react-i18next'\n\nconst StatContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n   display: none;\n `};\n`\n\nconst AprContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n`\n\nconst Wrapper = styled(AutoColumn)<{ showBackground: boolean; bgColor: any }>`\n  border-radius: 12px;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  opacity: ${({ showBackground }) => (showBackground ? '1' : '1')};\n  background: ${({ theme, bgColor, showBackground }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%, ${showBackground ? theme.black : theme.bg5} 100%) `};\n  color: ${({ theme, showBackground }) => (showBackground ? theme.white : theme.text1)} !important;\n\n  ${({ showBackground }) =>\n    showBackground &&\n    `  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n     0px 24px 32px rgba(0, 0, 0, 0.01);`}\n`\n\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 48px 1fr auto 120px;\n  grid-gap: 0px;\n  align-items: center;\n  padding: 1rem;\n  z-index: 1;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n     grid-template-columns: 48px 1fr auto 96px;\n   `};\n`\n\nconst BottomSection = styled.div<{ showBackground: boolean }>`\n  padding: 12px 16px;\n  opacity: ${({ showBackground }) => (showBackground ? '1' : '0.4')};\n  border-radius: 0 0 12px 12px;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: space-between;\n  z-index: 1;\n`\n\nexport default function PoolCard({\n  stakingInfo,\n  migration,\n  version,\n  swapFeeApr,\n  stakingApr\n}: {\n  stakingInfo: StakingInfo\n  migration?: Staking\n  version: string\n  swapFeeApr: number\n  stakingApr: number\n}) {\n  const token0 = stakingInfo.tokens[0]\n  const token1 = stakingInfo.tokens[1]\n\n  const currency0 = unwrappedToken(token0)\n  const currency1 = unwrappedToken(token1)\n\n  const { t } = useTranslation()\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0'))\n\n  const token: Token =\n    currency0 === CAVAX || currency1 === CAVAX\n      ? currency0 === CAVAX\n        ? token1\n        : token0\n      : token0.equals(PNG[token0.chainId])\n      ? token1\n      : token0\n\n  // get the color of the token\n  const backgroundColor = useColor(token)\n\n  return (\n    <Wrapper showBackground={isStaking} bgColor={backgroundColor}>\n      <CardBGImage desaturate />\n      <CardNoise />\n\n      <TopSection>\n        <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={24} />\n        <TYPE.white fontWeight={600} fontSize={24} style={{ marginLeft: '8px' }}>\n          {currency0.symbol}-{currency1.symbol}\n        </TYPE.white>\n\n        {migration && isStaking ? (\n          <StyledInternalLink\n            to={`/migrate/${currencyId(currency0)}/${currencyId(currency1)}/${Number(version)}/${currencyId(\n              migration.tokens[0]\n            )}/${currencyId(migration.tokens[1])}/${migration?.version}`}\n            style={{ marginRight: '10px' }}\n          >\n            <ButtonPrimary padding=\"8px\" borderRadius=\"8px\">\n              Migrate\n            </ButtonPrimary>\n          </StyledInternalLink>\n        ) : (\n          <span></span>\n        )}\n\n        {(isStaking || !stakingInfo.isPeriodFinished) && (\n          <StyledInternalLink\n            to={`/png/${currencyId(currency0)}/${currencyId(currency1)}/${version}`}\n            style={{ width: '100%' }}\n          >\n            <ButtonPrimary padding=\"8px\" borderRadius=\"8px\">\n              {isStaking ? t('earn.manage') : t('earn.deposit')}\n            </ButtonPrimary>\n          </StyledInternalLink>\n        )}\n      </TopSection>\n\n      <StatContainer>\n        <RowBetween>\n          <TYPE.white> {t('earn.totalStaked')}</TYPE.white>\n          <TYPE.white>\n            {`${stakingInfo.totalStakedInWavax.toSignificant(4, { groupSeparator: ',' }) ?? '-'} AVAX`}\n          </TYPE.white>\n        </RowBetween>\n      </StatContainer>\n      <AprContainer>\n        <RowBetween>\n          <TYPE.white>Swap Fee APR</TYPE.white>\n          <TYPE.white>{`${swapFeeApr}%`}</TYPE.white>\n        </RowBetween>\n        <RowBetween>\n          <TYPE.white>PNG Rewards APR</TYPE.white>\n          <TYPE.white>{`${stakingApr}%`}</TYPE.white>\n        </RowBetween>\n        <RowBetween>\n          <TYPE.white>Total APR</TYPE.white>\n          <TYPE.white>{`${swapFeeApr + stakingApr}%`}</TYPE.white>\n        </RowBetween>\n      </AprContainer>\n      <StatContainer>\n        <RowBetween>\n          <TYPE.white> {t('earn.poolWeight')} </TYPE.white>\n          <TYPE.white>{`${stakingInfo.multiplier}X`}</TYPE.white>\n        </RowBetween>\n      </StatContainer>\n\n      {isStaking && (\n        <>\n          <Break />\n          <BottomSection showBackground={true}>\n            <TYPE.black color={'white'} fontWeight={500}>\n              <span>{t('earn.yourRate')}</span>\n            </TYPE.black>\n\n            <TYPE.black style={{ textAlign: 'right' }} color={'white'} fontWeight={500}>\n              <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '0.5rem' }}>\n                ⚡\n              </span>\n              {`${stakingInfo.rewardRate\n                ?.multiply(`${60 * 60 * 24 * 7}`)\n                ?.toSignificant(4, { groupSeparator: ',' })} PNG / week`}\n            </TYPE.black>\n          </BottomSection>\n        </>\n      )}\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}